2024-04-17 23:52:50,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-17 23:52:50,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-17 23:52:50,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-17 23:52:50,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-17 23:57:14,596:INFO:PyCaret RegressionExperiment
2024-04-17 23:57:14,596:INFO:Logging name: reg-default-name
2024-04-17 23:57:14,596:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-17 23:57:14,596:INFO:version 3.1.0
2024-04-17 23:57:14,596:INFO:Initializing setup()
2024-04-17 23:57:14,597:INFO:self.USI: b21b
2024-04-17 23:57:14,597:INFO:self._variable_keys: {'y_train', 'X_test', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'html_param', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'n_jobs_param', 'y_test', 'USI', 'data', 'idx', 'gpu_param', 'transform_target_param', 'logging_param', 'memory', 'X_train', 'fold_shuffle_param', 'seed', 'target_param', 'log_plots_param', 'X', 'exp_id', '_ml_usecase', 'y'}
2024-04-17 23:57:14,597:INFO:Checking environment
2024-04-17 23:57:14,597:INFO:python_version: 3.9.17
2024-04-17 23:57:14,597:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-17 23:57:14,597:INFO:machine: AMD64
2024-04-17 23:57:14,597:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-17 23:57:14,601:INFO:Memory: svmem(total=8435355648, available=929837056, percent=89.0, used=7505518592, free=929837056)
2024-04-17 23:57:14,601:INFO:Physical Core: 2
2024-04-17 23:57:14,601:INFO:Logical Core: 4
2024-04-17 23:57:14,601:INFO:Checking libraries
2024-04-17 23:57:14,601:INFO:System:
2024-04-17 23:57:14,601:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-17 23:57:14,602:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-17 23:57:14,602:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-17 23:57:14,602:INFO:PyCaret required dependencies:
2024-04-17 23:57:14,904:INFO:                 pip: 23.2.1
2024-04-17 23:57:14,904:INFO:          setuptools: 68.0.0
2024-04-17 23:57:14,904:INFO:             pycaret: 3.1.0
2024-04-17 23:57:14,904:INFO:             IPython: 8.14.0
2024-04-17 23:57:14,904:INFO:          ipywidgets: 8.1.0
2024-04-17 23:57:14,904:INFO:                tqdm: 4.66.1
2024-04-17 23:57:14,905:INFO:               numpy: 1.23.5
2024-04-17 23:57:14,905:INFO:              pandas: 1.5.3
2024-04-17 23:57:14,905:INFO:              jinja2: 3.1.2
2024-04-17 23:57:14,905:INFO:               scipy: 1.10.1
2024-04-17 23:57:14,905:INFO:              joblib: 1.3.2
2024-04-17 23:57:14,905:INFO:             sklearn: 1.2.2
2024-04-17 23:57:14,905:INFO:                pyod: 1.1.0
2024-04-17 23:57:14,905:INFO:            imblearn: 0.11.0
2024-04-17 23:57:14,905:INFO:   category_encoders: 2.6.2
2024-04-17 23:57:14,905:INFO:            lightgbm: 4.0.0
2024-04-17 23:57:14,905:INFO:               numba: 0.58.0
2024-04-17 23:57:14,905:INFO:            requests: 2.31.0
2024-04-17 23:57:14,905:INFO:          matplotlib: 3.3.4
2024-04-17 23:57:14,905:INFO:          scikitplot: 0.3.7
2024-04-17 23:57:14,906:INFO:         yellowbrick: 1.5
2024-04-17 23:57:14,906:INFO:              plotly: 5.17.0
2024-04-17 23:57:14,906:INFO:    plotly-resampler: Not installed
2024-04-17 23:57:14,906:INFO:             kaleido: 0.2.1
2024-04-17 23:57:14,906:INFO:           schemdraw: 0.15
2024-04-17 23:57:14,906:INFO:         statsmodels: 0.13.2
2024-04-17 23:57:14,906:INFO:              sktime: 0.21.1
2024-04-17 23:57:14,907:INFO:               tbats: 1.1.3
2024-04-17 23:57:14,907:INFO:            pmdarima: 2.0.3
2024-04-17 23:57:14,907:INFO:              psutil: 5.9.5
2024-04-17 23:57:14,907:INFO:          markupsafe: 2.1.3
2024-04-17 23:57:14,908:INFO:             pickle5: Not installed
2024-04-17 23:57:14,908:INFO:         cloudpickle: 2.2.1
2024-04-17 23:57:14,908:INFO:         deprecation: 2.1.0
2024-04-17 23:57:14,908:INFO:              xxhash: 3.4.1
2024-04-17 23:57:14,908:INFO:           wurlitzer: Not installed
2024-04-17 23:57:14,908:INFO:PyCaret optional dependencies:
2024-04-17 23:57:15,052:INFO:                shap: 0.44.1
2024-04-17 23:57:15,053:INFO:           interpret: Not installed
2024-04-17 23:57:15,053:INFO:                umap: Not installed
2024-04-17 23:57:15,053:INFO:     ydata_profiling: 4.5.1
2024-04-17 23:57:15,053:INFO:  explainerdashboard: Not installed
2024-04-17 23:57:15,053:INFO:             autoviz: Not installed
2024-04-17 23:57:15,053:INFO:           fairlearn: Not installed
2024-04-17 23:57:15,053:INFO:          deepchecks: Not installed
2024-04-17 23:57:15,053:INFO:             xgboost: 2.0.3
2024-04-17 23:57:15,053:INFO:            catboost: 1.2
2024-04-17 23:57:15,053:INFO:              kmodes: Not installed
2024-04-17 23:57:15,053:INFO:             mlxtend: Not installed
2024-04-17 23:57:15,053:INFO:       statsforecast: Not installed
2024-04-17 23:57:15,053:INFO:        tune_sklearn: Not installed
2024-04-17 23:57:15,053:INFO:                 ray: Not installed
2024-04-17 23:57:15,053:INFO:            hyperopt: Not installed
2024-04-17 23:57:15,053:INFO:              optuna: 3.3.0
2024-04-17 23:57:15,053:INFO:               skopt: Not installed
2024-04-17 23:57:15,053:INFO:              mlflow: Not installed
2024-04-17 23:57:15,053:INFO:              gradio: Not installed
2024-04-17 23:57:15,053:INFO:             fastapi: Not installed
2024-04-17 23:57:15,054:INFO:             uvicorn: Not installed
2024-04-17 23:57:15,054:INFO:              m2cgen: Not installed
2024-04-17 23:57:15,054:INFO:           evidently: Not installed
2024-04-17 23:57:15,054:INFO:               fugue: Not installed
2024-04-17 23:57:15,054:INFO:           streamlit: 1.25.0
2024-04-17 23:57:15,054:INFO:             prophet: Not installed
2024-04-17 23:57:15,054:INFO:None
2024-04-17 23:57:15,054:INFO:Set up data.
2024-04-17 23:57:44,592:INFO:PyCaret RegressionExperiment
2024-04-17 23:57:44,592:INFO:Logging name: reg-default-name
2024-04-17 23:57:44,592:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-17 23:57:44,592:INFO:version 3.1.0
2024-04-17 23:57:44,592:INFO:Initializing setup()
2024-04-17 23:57:44,592:INFO:self.USI: fe9b
2024-04-17 23:57:44,592:INFO:self._variable_keys: {'y_train', 'X_test', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'html_param', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'n_jobs_param', 'y_test', 'USI', 'data', 'idx', 'gpu_param', 'transform_target_param', 'logging_param', 'memory', 'X_train', 'fold_shuffle_param', 'seed', 'target_param', 'log_plots_param', 'X', 'exp_id', '_ml_usecase', 'y'}
2024-04-17 23:57:44,593:INFO:Checking environment
2024-04-17 23:57:44,593:INFO:python_version: 3.9.17
2024-04-17 23:57:44,593:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-17 23:57:44,593:INFO:machine: AMD64
2024-04-17 23:57:44,593:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-17 23:57:44,595:INFO:Memory: svmem(total=8435355648, available=1250738176, percent=85.2, used=7184617472, free=1250738176)
2024-04-17 23:57:44,596:INFO:Physical Core: 2
2024-04-17 23:57:44,597:INFO:Logical Core: 4
2024-04-17 23:57:44,598:INFO:Checking libraries
2024-04-17 23:57:44,598:INFO:System:
2024-04-17 23:57:44,598:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-17 23:57:44,598:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-17 23:57:44,598:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-17 23:57:44,598:INFO:PyCaret required dependencies:
2024-04-17 23:57:44,598:INFO:                 pip: 23.2.1
2024-04-17 23:57:44,599:INFO:          setuptools: 68.0.0
2024-04-17 23:57:44,599:INFO:             pycaret: 3.1.0
2024-04-17 23:57:44,599:INFO:             IPython: 8.14.0
2024-04-17 23:57:44,599:INFO:          ipywidgets: 8.1.0
2024-04-17 23:57:44,599:INFO:                tqdm: 4.66.1
2024-04-17 23:57:44,599:INFO:               numpy: 1.23.5
2024-04-17 23:57:44,599:INFO:              pandas: 1.5.3
2024-04-17 23:57:44,600:INFO:              jinja2: 3.1.2
2024-04-17 23:57:44,600:INFO:               scipy: 1.10.1
2024-04-17 23:57:44,600:INFO:              joblib: 1.3.2
2024-04-17 23:57:44,600:INFO:             sklearn: 1.2.2
2024-04-17 23:57:44,600:INFO:                pyod: 1.1.0
2024-04-17 23:57:44,600:INFO:            imblearn: 0.11.0
2024-04-17 23:57:44,600:INFO:   category_encoders: 2.6.2
2024-04-17 23:57:44,600:INFO:            lightgbm: 4.0.0
2024-04-17 23:57:44,600:INFO:               numba: 0.58.0
2024-04-17 23:57:44,600:INFO:            requests: 2.31.0
2024-04-17 23:57:44,600:INFO:          matplotlib: 3.3.4
2024-04-17 23:57:44,600:INFO:          scikitplot: 0.3.7
2024-04-17 23:57:44,600:INFO:         yellowbrick: 1.5
2024-04-17 23:57:44,600:INFO:              plotly: 5.17.0
2024-04-17 23:57:44,600:INFO:    plotly-resampler: Not installed
2024-04-17 23:57:44,602:INFO:             kaleido: 0.2.1
2024-04-17 23:57:44,602:INFO:           schemdraw: 0.15
2024-04-17 23:57:44,602:INFO:         statsmodels: 0.13.2
2024-04-17 23:57:44,602:INFO:              sktime: 0.21.1
2024-04-17 23:57:44,602:INFO:               tbats: 1.1.3
2024-04-17 23:57:44,602:INFO:            pmdarima: 2.0.3
2024-04-17 23:57:44,602:INFO:              psutil: 5.9.5
2024-04-17 23:57:44,603:INFO:          markupsafe: 2.1.3
2024-04-17 23:57:44,603:INFO:             pickle5: Not installed
2024-04-17 23:57:44,603:INFO:         cloudpickle: 2.2.1
2024-04-17 23:57:44,603:INFO:         deprecation: 2.1.0
2024-04-17 23:57:44,603:INFO:              xxhash: 3.4.1
2024-04-17 23:57:44,603:INFO:           wurlitzer: Not installed
2024-04-17 23:57:44,603:INFO:PyCaret optional dependencies:
2024-04-17 23:57:44,603:INFO:                shap: 0.44.1
2024-04-17 23:57:44,603:INFO:           interpret: Not installed
2024-04-17 23:57:44,603:INFO:                umap: Not installed
2024-04-17 23:57:44,603:INFO:     ydata_profiling: 4.5.1
2024-04-17 23:57:44,603:INFO:  explainerdashboard: Not installed
2024-04-17 23:57:44,603:INFO:             autoviz: Not installed
2024-04-17 23:57:44,603:INFO:           fairlearn: Not installed
2024-04-17 23:57:44,603:INFO:          deepchecks: Not installed
2024-04-17 23:57:44,603:INFO:             xgboost: 2.0.3
2024-04-17 23:57:44,603:INFO:            catboost: 1.2
2024-04-17 23:57:44,603:INFO:              kmodes: Not installed
2024-04-17 23:57:44,603:INFO:             mlxtend: Not installed
2024-04-17 23:57:44,603:INFO:       statsforecast: Not installed
2024-04-17 23:57:44,604:INFO:        tune_sklearn: Not installed
2024-04-17 23:57:44,604:INFO:                 ray: Not installed
2024-04-17 23:57:44,604:INFO:            hyperopt: Not installed
2024-04-17 23:57:44,604:INFO:              optuna: 3.3.0
2024-04-17 23:57:44,604:INFO:               skopt: Not installed
2024-04-17 23:57:44,604:INFO:              mlflow: Not installed
2024-04-17 23:57:44,604:INFO:              gradio: Not installed
2024-04-17 23:57:44,604:INFO:             fastapi: Not installed
2024-04-17 23:57:44,604:INFO:             uvicorn: Not installed
2024-04-17 23:57:44,604:INFO:              m2cgen: Not installed
2024-04-17 23:57:44,604:INFO:           evidently: Not installed
2024-04-17 23:57:44,604:INFO:               fugue: Not installed
2024-04-17 23:57:44,604:INFO:           streamlit: 1.25.0
2024-04-17 23:57:44,604:INFO:             prophet: Not installed
2024-04-17 23:57:44,604:INFO:None
2024-04-17 23:57:44,604:INFO:Set up data.
2024-04-17 23:57:44,836:INFO:Set up folding strategy.
2024-04-17 23:57:44,836:INFO:Set up train/test split.
2024-04-17 23:57:44,883:INFO:Set up index.
2024-04-17 23:57:44,884:INFO:Assigning column types.
2024-04-17 23:57:44,890:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-17 23:57:44,890:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-17 23:57:44,895:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-17 23:57:44,900:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-17 23:57:44,981:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,033:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:45,036:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:45,510:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,516:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,520:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,641:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:45,646:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:45,647:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-17 23:57:45,653:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,658:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,726:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,775:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:45,777:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:45,783:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,787:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,854:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,905:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:45,908:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:45,908:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-17 23:57:45,918:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-17 23:57:45,998:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,054:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,057:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:46,069:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,202:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,209:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:46,214:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-17 23:57:46,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,412:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,416:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:46,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,540:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,540:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,543:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:46,544:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-17 23:57:46,624:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,672:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,674:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:46,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-17 23:57:46,805:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,808:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:46,809:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-17 23:57:46,934:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:46,937:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:47,074:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:47,076:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:47,081:INFO:Preparing preprocessing pipeline...
2024-04-17 23:57:47,081:INFO:Set up simple imputation.
2024-04-17 23:57:47,097:INFO:Set up encoding of categorical features.
2024-04-17 23:57:49,069:INFO:Finished creating preprocessing pipeline.
2024-04-17 23:57:49,081:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['VIN', 'manufacturer',
                                             'security_codes', 'model',
                                             'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent')...
                 TransformerWrapper(include=['manufacturer', 'model_year',
                                             'plant_code'],
                                    transformer=OneHotEncoder(cols=['manufacturer',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['VIN', 'security_codes', 'model',
                                             'engine'],
                                    transformer=TargetEncoder(cols=['VIN',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine'],
                                                              handle_missing='return_nan')))])
2024-04-17 23:57:49,081:INFO:Creating final display dataframe.
2024-04-17 23:57:51,321:INFO:Setup _display_container:                     Description             Value
0                    Session id               853
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 8)
4        Transformed data shape       (57507, 65)
5   Transformed train set shape       (46005, 65)
6    Transformed test set shape       (11502, 65)
7          Categorical features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding                25
13              Encoding method              None
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              fe9b
2024-04-17 23:57:51,494:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:51,498:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:51,629:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-17 23:57:51,631:INFO:Soft dependency imported: catboost: 1.2
2024-04-17 23:57:51,632:INFO:setup() successfully completed in 7.33s...............
2024-04-18 00:00:07,954:INFO:Initializing compare_models()
2024-04-18 00:00:07,954:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-18 00:00:07,954:INFO:Checking exceptions
2024-04-18 00:00:07,967:INFO:Preparing display monitor
2024-04-18 00:00:08,020:INFO:Initializing Linear Regression
2024-04-18 00:00:08,020:INFO:Total runtime is 0.0 minutes
2024-04-18 00:00:08,025:INFO:SubProcess create_model() called ==================================
2024-04-18 00:00:08,026:INFO:Initializing create_model()
2024-04-18 00:00:08,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:00:08,027:INFO:Checking exceptions
2024-04-18 00:00:08,027:INFO:Importing libraries
2024-04-18 00:00:08,027:INFO:Copying training dataset
2024-04-18 00:00:08,047:INFO:Defining folds
2024-04-18 00:00:08,048:INFO:Declaring metric variables
2024-04-18 00:00:08,058:INFO:Importing untrained model
2024-04-18 00:00:08,065:INFO:Linear Regression Imported successfully
2024-04-18 00:00:08,075:INFO:Starting cross validation
2024-04-18 00:00:08,094:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:00:29,433:INFO:Calculating mean and std
2024-04-18 00:00:29,436:INFO:Creating metrics dataframe
2024-04-18 00:00:29,439:INFO:Uploading results into container
2024-04-18 00:00:29,439:INFO:Uploading model into container now
2024-04-18 00:00:29,440:INFO:_master_model_container: 1
2024-04-18 00:00:29,440:INFO:_display_container: 2
2024-04-18 00:00:29,441:INFO:LinearRegression(n_jobs=-1)
2024-04-18 00:00:29,441:INFO:create_model() successfully completed......................................
2024-04-18 00:00:29,996:INFO:SubProcess create_model() end ==================================
2024-04-18 00:00:29,996:INFO:Creating metrics dataframe
2024-04-18 00:00:30,004:INFO:Initializing Lasso Regression
2024-04-18 00:00:30,005:INFO:Total runtime is 0.36642094055811564 minutes
2024-04-18 00:00:30,009:INFO:SubProcess create_model() called ==================================
2024-04-18 00:00:30,010:INFO:Initializing create_model()
2024-04-18 00:00:30,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:00:30,010:INFO:Checking exceptions
2024-04-18 00:00:30,010:INFO:Importing libraries
2024-04-18 00:00:30,010:INFO:Copying training dataset
2024-04-18 00:00:30,035:INFO:Defining folds
2024-04-18 00:00:30,035:INFO:Declaring metric variables
2024-04-18 00:00:30,042:INFO:Importing untrained model
2024-04-18 00:00:30,052:INFO:Lasso Regression Imported successfully
2024-04-18 00:00:30,076:INFO:Starting cross validation
2024-04-18 00:00:30,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:00:36,562:INFO:Calculating mean and std
2024-04-18 00:00:36,564:INFO:Creating metrics dataframe
2024-04-18 00:00:36,567:INFO:Uploading results into container
2024-04-18 00:00:36,568:INFO:Uploading model into container now
2024-04-18 00:00:36,568:INFO:_master_model_container: 2
2024-04-18 00:00:36,568:INFO:_display_container: 2
2024-04-18 00:00:36,570:INFO:Lasso(random_state=853)
2024-04-18 00:00:36,570:INFO:create_model() successfully completed......................................
2024-04-18 00:00:37,090:INFO:SubProcess create_model() end ==================================
2024-04-18 00:00:37,090:INFO:Creating metrics dataframe
2024-04-18 00:00:37,101:INFO:Initializing Ridge Regression
2024-04-18 00:00:37,101:INFO:Total runtime is 0.48469722270965576 minutes
2024-04-18 00:00:37,108:INFO:SubProcess create_model() called ==================================
2024-04-18 00:00:37,109:INFO:Initializing create_model()
2024-04-18 00:00:37,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:00:37,109:INFO:Checking exceptions
2024-04-18 00:00:37,109:INFO:Importing libraries
2024-04-18 00:00:37,109:INFO:Copying training dataset
2024-04-18 00:00:37,127:INFO:Defining folds
2024-04-18 00:00:37,127:INFO:Declaring metric variables
2024-04-18 00:00:37,133:INFO:Importing untrained model
2024-04-18 00:00:37,149:INFO:Ridge Regression Imported successfully
2024-04-18 00:00:37,169:INFO:Starting cross validation
2024-04-18 00:00:37,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:00:43,792:INFO:Calculating mean and std
2024-04-18 00:00:43,793:INFO:Creating metrics dataframe
2024-04-18 00:00:43,795:INFO:Uploading results into container
2024-04-18 00:00:43,796:INFO:Uploading model into container now
2024-04-18 00:00:43,796:INFO:_master_model_container: 3
2024-04-18 00:00:43,797:INFO:_display_container: 2
2024-04-18 00:00:43,798:INFO:Ridge(random_state=853)
2024-04-18 00:00:43,798:INFO:create_model() successfully completed......................................
2024-04-18 00:00:44,341:INFO:SubProcess create_model() end ==================================
2024-04-18 00:00:44,341:INFO:Creating metrics dataframe
2024-04-18 00:00:44,349:INFO:Initializing Elastic Net
2024-04-18 00:00:44,349:INFO:Total runtime is 0.6054906845092773 minutes
2024-04-18 00:00:44,356:INFO:SubProcess create_model() called ==================================
2024-04-18 00:00:44,357:INFO:Initializing create_model()
2024-04-18 00:00:44,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:00:44,357:INFO:Checking exceptions
2024-04-18 00:00:44,357:INFO:Importing libraries
2024-04-18 00:00:44,357:INFO:Copying training dataset
2024-04-18 00:00:44,382:INFO:Defining folds
2024-04-18 00:00:44,382:INFO:Declaring metric variables
2024-04-18 00:00:44,392:INFO:Importing untrained model
2024-04-18 00:00:44,405:INFO:Elastic Net Imported successfully
2024-04-18 00:00:44,425:INFO:Starting cross validation
2024-04-18 00:00:44,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:00:50,841:INFO:Calculating mean and std
2024-04-18 00:00:50,842:INFO:Creating metrics dataframe
2024-04-18 00:00:50,845:INFO:Uploading results into container
2024-04-18 00:00:50,845:INFO:Uploading model into container now
2024-04-18 00:00:50,846:INFO:_master_model_container: 4
2024-04-18 00:00:50,847:INFO:_display_container: 2
2024-04-18 00:00:50,847:INFO:ElasticNet(random_state=853)
2024-04-18 00:00:50,847:INFO:create_model() successfully completed......................................
2024-04-18 00:00:51,359:INFO:SubProcess create_model() end ==================================
2024-04-18 00:00:51,359:INFO:Creating metrics dataframe
2024-04-18 00:00:51,374:INFO:Initializing Least Angle Regression
2024-04-18 00:00:51,374:INFO:Total runtime is 0.7225767890612285 minutes
2024-04-18 00:00:51,379:INFO:SubProcess create_model() called ==================================
2024-04-18 00:00:51,380:INFO:Initializing create_model()
2024-04-18 00:00:51,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:00:51,381:INFO:Checking exceptions
2024-04-18 00:00:51,381:INFO:Importing libraries
2024-04-18 00:00:51,381:INFO:Copying training dataset
2024-04-18 00:00:51,405:INFO:Defining folds
2024-04-18 00:00:51,406:INFO:Declaring metric variables
2024-04-18 00:00:51,411:INFO:Importing untrained model
2024-04-18 00:00:51,420:INFO:Least Angle Regression Imported successfully
2024-04-18 00:00:51,441:INFO:Starting cross validation
2024-04-18 00:00:51,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:00:57,661:INFO:Calculating mean and std
2024-04-18 00:00:57,662:INFO:Creating metrics dataframe
2024-04-18 00:00:57,664:INFO:Uploading results into container
2024-04-18 00:00:57,665:INFO:Uploading model into container now
2024-04-18 00:00:57,665:INFO:_master_model_container: 5
2024-04-18 00:00:57,665:INFO:_display_container: 2
2024-04-18 00:00:57,667:INFO:Lars(random_state=853)
2024-04-18 00:00:57,668:INFO:create_model() successfully completed......................................
2024-04-18 00:00:58,167:INFO:SubProcess create_model() end ==================================
2024-04-18 00:00:58,167:INFO:Creating metrics dataframe
2024-04-18 00:00:58,178:INFO:Initializing Lasso Least Angle Regression
2024-04-18 00:00:58,178:INFO:Total runtime is 0.835965645313263 minutes
2024-04-18 00:00:58,181:INFO:SubProcess create_model() called ==================================
2024-04-18 00:00:58,183:INFO:Initializing create_model()
2024-04-18 00:00:58,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:00:58,183:INFO:Checking exceptions
2024-04-18 00:00:58,183:INFO:Importing libraries
2024-04-18 00:00:58,184:INFO:Copying training dataset
2024-04-18 00:00:58,254:INFO:Defining folds
2024-04-18 00:00:58,255:INFO:Declaring metric variables
2024-04-18 00:00:58,270:INFO:Importing untrained model
2024-04-18 00:00:58,282:INFO:Lasso Least Angle Regression Imported successfully
2024-04-18 00:00:58,326:INFO:Starting cross validation
2024-04-18 00:00:58,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:01:05,502:INFO:Calculating mean and std
2024-04-18 00:01:05,505:INFO:Creating metrics dataframe
2024-04-18 00:01:05,513:INFO:Uploading results into container
2024-04-18 00:01:05,514:INFO:Uploading model into container now
2024-04-18 00:01:05,514:INFO:_master_model_container: 6
2024-04-18 00:01:05,515:INFO:_display_container: 2
2024-04-18 00:01:05,515:INFO:LassoLars(random_state=853)
2024-04-18 00:01:05,515:INFO:create_model() successfully completed......................................
2024-04-18 00:01:06,069:INFO:SubProcess create_model() end ==================================
2024-04-18 00:01:06,069:INFO:Creating metrics dataframe
2024-04-18 00:01:06,093:INFO:Initializing Orthogonal Matching Pursuit
2024-04-18 00:01:06,094:INFO:Total runtime is 0.9679122487703959 minutes
2024-04-18 00:01:06,102:INFO:SubProcess create_model() called ==================================
2024-04-18 00:01:06,103:INFO:Initializing create_model()
2024-04-18 00:01:06,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:01:06,104:INFO:Checking exceptions
2024-04-18 00:01:06,106:INFO:Importing libraries
2024-04-18 00:01:06,106:INFO:Copying training dataset
2024-04-18 00:01:06,181:INFO:Defining folds
2024-04-18 00:01:06,185:INFO:Declaring metric variables
2024-04-18 00:01:06,199:INFO:Importing untrained model
2024-04-18 00:01:06,210:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-18 00:01:06,226:INFO:Starting cross validation
2024-04-18 00:01:06,242:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:01:08,612:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:08,669:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:08,689:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:08,694:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:11,013:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:11,079:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:11,113:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:11,114:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:12,507:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:12,533:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-04-18 00:01:12,638:INFO:Calculating mean and std
2024-04-18 00:01:12,640:INFO:Creating metrics dataframe
2024-04-18 00:01:12,642:INFO:Uploading results into container
2024-04-18 00:01:12,642:INFO:Uploading model into container now
2024-04-18 00:01:12,644:INFO:_master_model_container: 7
2024-04-18 00:01:12,644:INFO:_display_container: 2
2024-04-18 00:01:12,645:INFO:OrthogonalMatchingPursuit()
2024-04-18 00:01:12,645:INFO:create_model() successfully completed......................................
2024-04-18 00:01:13,168:INFO:SubProcess create_model() end ==================================
2024-04-18 00:01:13,168:INFO:Creating metrics dataframe
2024-04-18 00:01:13,179:INFO:Initializing Bayesian Ridge
2024-04-18 00:01:13,179:INFO:Total runtime is 1.0859952410062155 minutes
2024-04-18 00:01:13,184:INFO:SubProcess create_model() called ==================================
2024-04-18 00:01:13,185:INFO:Initializing create_model()
2024-04-18 00:01:13,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:01:13,185:INFO:Checking exceptions
2024-04-18 00:01:13,185:INFO:Importing libraries
2024-04-18 00:01:13,185:INFO:Copying training dataset
2024-04-18 00:01:13,228:INFO:Defining folds
2024-04-18 00:01:13,229:INFO:Declaring metric variables
2024-04-18 00:01:13,245:INFO:Importing untrained model
2024-04-18 00:01:13,255:INFO:Bayesian Ridge Imported successfully
2024-04-18 00:01:13,273:INFO:Starting cross validation
2024-04-18 00:01:13,284:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:01:28,963:INFO:Calculating mean and std
2024-04-18 00:01:28,965:INFO:Creating metrics dataframe
2024-04-18 00:01:28,967:INFO:Uploading results into container
2024-04-18 00:01:28,968:INFO:Uploading model into container now
2024-04-18 00:01:28,968:INFO:_master_model_container: 8
2024-04-18 00:01:28,968:INFO:_display_container: 2
2024-04-18 00:01:28,970:INFO:BayesianRidge()
2024-04-18 00:01:28,970:INFO:create_model() successfully completed......................................
2024-04-18 00:01:29,475:INFO:SubProcess create_model() end ==================================
2024-04-18 00:01:29,475:INFO:Creating metrics dataframe
2024-04-18 00:01:29,486:INFO:Initializing Passive Aggressive Regressor
2024-04-18 00:01:29,487:INFO:Total runtime is 1.3577845056851705 minutes
2024-04-18 00:01:29,493:INFO:SubProcess create_model() called ==================================
2024-04-18 00:01:29,493:INFO:Initializing create_model()
2024-04-18 00:01:29,493:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:01:29,493:INFO:Checking exceptions
2024-04-18 00:01:29,494:INFO:Importing libraries
2024-04-18 00:01:29,494:INFO:Copying training dataset
2024-04-18 00:01:29,513:INFO:Defining folds
2024-04-18 00:01:29,513:INFO:Declaring metric variables
2024-04-18 00:01:29,524:INFO:Importing untrained model
2024-04-18 00:01:29,533:INFO:Passive Aggressive Regressor Imported successfully
2024-04-18 00:01:29,552:INFO:Starting cross validation
2024-04-18 00:01:29,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:01:36,089:INFO:Calculating mean and std
2024-04-18 00:01:36,091:INFO:Creating metrics dataframe
2024-04-18 00:01:36,093:INFO:Uploading results into container
2024-04-18 00:01:36,094:INFO:Uploading model into container now
2024-04-18 00:01:36,095:INFO:_master_model_container: 9
2024-04-18 00:01:36,096:INFO:_display_container: 2
2024-04-18 00:01:36,097:INFO:PassiveAggressiveRegressor(random_state=853)
2024-04-18 00:01:36,097:INFO:create_model() successfully completed......................................
2024-04-18 00:01:36,580:INFO:SubProcess create_model() end ==================================
2024-04-18 00:01:36,580:INFO:Creating metrics dataframe
2024-04-18 00:01:36,591:INFO:Initializing Huber Regressor
2024-04-18 00:01:36,592:INFO:Total runtime is 1.4761945128440856 minutes
2024-04-18 00:01:36,595:INFO:SubProcess create_model() called ==================================
2024-04-18 00:01:36,596:INFO:Initializing create_model()
2024-04-18 00:01:36,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:01:36,597:INFO:Checking exceptions
2024-04-18 00:01:36,597:INFO:Importing libraries
2024-04-18 00:01:36,597:INFO:Copying training dataset
2024-04-18 00:01:36,617:INFO:Defining folds
2024-04-18 00:01:36,618:INFO:Declaring metric variables
2024-04-18 00:01:36,627:INFO:Importing untrained model
2024-04-18 00:01:36,634:INFO:Huber Regressor Imported successfully
2024-04-18 00:01:36,658:INFO:Starting cross validation
2024-04-18 00:01:36,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:01:48,770:INFO:Calculating mean and std
2024-04-18 00:01:48,771:INFO:Creating metrics dataframe
2024-04-18 00:01:48,775:INFO:Uploading results into container
2024-04-18 00:01:48,776:INFO:Uploading model into container now
2024-04-18 00:01:48,780:INFO:_master_model_container: 10
2024-04-18 00:01:48,780:INFO:_display_container: 2
2024-04-18 00:01:48,781:INFO:HuberRegressor()
2024-04-18 00:01:48,781:INFO:create_model() successfully completed......................................
2024-04-18 00:01:49,281:INFO:SubProcess create_model() end ==================================
2024-04-18 00:01:49,281:INFO:Creating metrics dataframe
2024-04-18 00:01:49,291:INFO:Initializing K Neighbors Regressor
2024-04-18 00:01:49,291:INFO:Total runtime is 1.6878649155298868 minutes
2024-04-18 00:01:49,299:INFO:SubProcess create_model() called ==================================
2024-04-18 00:01:49,299:INFO:Initializing create_model()
2024-04-18 00:01:49,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:01:49,300:INFO:Checking exceptions
2024-04-18 00:01:49,300:INFO:Importing libraries
2024-04-18 00:01:49,300:INFO:Copying training dataset
2024-04-18 00:01:49,319:INFO:Defining folds
2024-04-18 00:01:49,319:INFO:Declaring metric variables
2024-04-18 00:01:49,325:INFO:Importing untrained model
2024-04-18 00:01:49,336:INFO:K Neighbors Regressor Imported successfully
2024-04-18 00:01:49,351:INFO:Starting cross validation
2024-04-18 00:01:49,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:02:04,349:INFO:Calculating mean and std
2024-04-18 00:02:04,351:INFO:Creating metrics dataframe
2024-04-18 00:02:04,354:INFO:Uploading results into container
2024-04-18 00:02:04,355:INFO:Uploading model into container now
2024-04-18 00:02:04,356:INFO:_master_model_container: 11
2024-04-18 00:02:04,356:INFO:_display_container: 2
2024-04-18 00:02:04,357:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-18 00:02:04,357:INFO:create_model() successfully completed......................................
2024-04-18 00:02:04,890:INFO:SubProcess create_model() end ==================================
2024-04-18 00:02:04,890:INFO:Creating metrics dataframe
2024-04-18 00:02:04,905:INFO:Initializing Decision Tree Regressor
2024-04-18 00:02:04,905:INFO:Total runtime is 1.9480875492095946 minutes
2024-04-18 00:02:04,912:INFO:SubProcess create_model() called ==================================
2024-04-18 00:02:04,912:INFO:Initializing create_model()
2024-04-18 00:02:04,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:02:04,912:INFO:Checking exceptions
2024-04-18 00:02:04,913:INFO:Importing libraries
2024-04-18 00:02:04,913:INFO:Copying training dataset
2024-04-18 00:02:04,937:INFO:Defining folds
2024-04-18 00:02:04,938:INFO:Declaring metric variables
2024-04-18 00:02:04,944:INFO:Importing untrained model
2024-04-18 00:02:04,960:INFO:Decision Tree Regressor Imported successfully
2024-04-18 00:02:05,004:INFO:Starting cross validation
2024-04-18 00:02:05,009:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:02:12,281:INFO:Calculating mean and std
2024-04-18 00:02:12,283:INFO:Creating metrics dataframe
2024-04-18 00:02:12,285:INFO:Uploading results into container
2024-04-18 00:02:12,286:INFO:Uploading model into container now
2024-04-18 00:02:12,286:INFO:_master_model_container: 12
2024-04-18 00:02:12,286:INFO:_display_container: 2
2024-04-18 00:02:12,286:INFO:DecisionTreeRegressor(random_state=853)
2024-04-18 00:02:12,287:INFO:create_model() successfully completed......................................
2024-04-18 00:02:12,771:INFO:SubProcess create_model() end ==================================
2024-04-18 00:02:12,771:INFO:Creating metrics dataframe
2024-04-18 00:02:12,784:INFO:Initializing Random Forest Regressor
2024-04-18 00:02:12,784:INFO:Total runtime is 2.079412587483724 minutes
2024-04-18 00:02:12,792:INFO:SubProcess create_model() called ==================================
2024-04-18 00:02:12,792:INFO:Initializing create_model()
2024-04-18 00:02:12,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:02:12,793:INFO:Checking exceptions
2024-04-18 00:02:12,793:INFO:Importing libraries
2024-04-18 00:02:12,793:INFO:Copying training dataset
2024-04-18 00:02:12,813:INFO:Defining folds
2024-04-18 00:02:12,814:INFO:Declaring metric variables
2024-04-18 00:02:12,820:INFO:Importing untrained model
2024-04-18 00:02:12,828:INFO:Random Forest Regressor Imported successfully
2024-04-18 00:02:12,853:INFO:Starting cross validation
2024-04-18 00:02:12,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:03:34,479:INFO:Calculating mean and std
2024-04-18 00:03:34,480:INFO:Creating metrics dataframe
2024-04-18 00:03:34,488:INFO:Uploading results into container
2024-04-18 00:03:34,491:INFO:Uploading model into container now
2024-04-18 00:03:34,491:INFO:_master_model_container: 13
2024-04-18 00:03:34,492:INFO:_display_container: 2
2024-04-18 00:03:34,492:INFO:RandomForestRegressor(n_jobs=-1, random_state=853)
2024-04-18 00:03:34,492:INFO:create_model() successfully completed......................................
2024-04-18 00:03:34,980:INFO:SubProcess create_model() end ==================================
2024-04-18 00:03:34,980:INFO:Creating metrics dataframe
2024-04-18 00:03:34,992:INFO:Initializing Extra Trees Regressor
2024-04-18 00:03:34,992:INFO:Total runtime is 3.4495371103286745 minutes
2024-04-18 00:03:34,998:INFO:SubProcess create_model() called ==================================
2024-04-18 00:03:34,999:INFO:Initializing create_model()
2024-04-18 00:03:35,000:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:03:35,000:INFO:Checking exceptions
2024-04-18 00:03:35,000:INFO:Importing libraries
2024-04-18 00:03:35,000:INFO:Copying training dataset
2024-04-18 00:03:35,018:INFO:Defining folds
2024-04-18 00:03:35,018:INFO:Declaring metric variables
2024-04-18 00:03:35,025:INFO:Importing untrained model
2024-04-18 00:03:35,030:INFO:Extra Trees Regressor Imported successfully
2024-04-18 00:03:35,054:INFO:Starting cross validation
2024-04-18 00:03:35,058:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:05:49,428:INFO:Calculating mean and std
2024-04-18 00:05:49,430:INFO:Creating metrics dataframe
2024-04-18 00:05:49,434:INFO:Uploading results into container
2024-04-18 00:05:49,435:INFO:Uploading model into container now
2024-04-18 00:05:49,435:INFO:_master_model_container: 14
2024-04-18 00:05:49,436:INFO:_display_container: 2
2024-04-18 00:05:49,436:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=853)
2024-04-18 00:05:49,437:INFO:create_model() successfully completed......................................
2024-04-18 00:05:50,157:INFO:SubProcess create_model() end ==================================
2024-04-18 00:05:50,157:INFO:Creating metrics dataframe
2024-04-18 00:05:50,178:INFO:Initializing AdaBoost Regressor
2024-04-18 00:05:50,179:INFO:Total runtime is 5.702643700440724 minutes
2024-04-18 00:05:50,184:INFO:SubProcess create_model() called ==================================
2024-04-18 00:05:50,185:INFO:Initializing create_model()
2024-04-18 00:05:50,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:05:50,185:INFO:Checking exceptions
2024-04-18 00:05:50,185:INFO:Importing libraries
2024-04-18 00:05:50,185:INFO:Copying training dataset
2024-04-18 00:05:50,216:INFO:Defining folds
2024-04-18 00:05:50,216:INFO:Declaring metric variables
2024-04-18 00:05:50,224:INFO:Importing untrained model
2024-04-18 00:05:50,231:INFO:AdaBoost Regressor Imported successfully
2024-04-18 00:05:50,242:INFO:Starting cross validation
2024-04-18 00:05:50,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:06:49,551:INFO:Calculating mean and std
2024-04-18 00:06:49,552:INFO:Creating metrics dataframe
2024-04-18 00:06:49,555:INFO:Uploading results into container
2024-04-18 00:06:49,555:INFO:Uploading model into container now
2024-04-18 00:06:49,556:INFO:_master_model_container: 15
2024-04-18 00:06:49,556:INFO:_display_container: 2
2024-04-18 00:06:49,558:INFO:AdaBoostRegressor(random_state=853)
2024-04-18 00:06:49,559:INFO:create_model() successfully completed......................................
2024-04-18 00:06:50,255:INFO:SubProcess create_model() end ==================================
2024-04-18 00:06:50,256:INFO:Creating metrics dataframe
2024-04-18 00:06:50,271:INFO:Initializing Gradient Boosting Regressor
2024-04-18 00:06:50,272:INFO:Total runtime is 6.704185267289479 minutes
2024-04-18 00:06:50,281:INFO:SubProcess create_model() called ==================================
2024-04-18 00:06:50,282:INFO:Initializing create_model()
2024-04-18 00:06:50,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:06:50,282:INFO:Checking exceptions
2024-04-18 00:06:50,282:INFO:Importing libraries
2024-04-18 00:06:50,282:INFO:Copying training dataset
2024-04-18 00:06:50,302:INFO:Defining folds
2024-04-18 00:06:50,303:INFO:Declaring metric variables
2024-04-18 00:06:50,312:INFO:Importing untrained model
2024-04-18 00:06:50,323:INFO:Gradient Boosting Regressor Imported successfully
2024-04-18 00:06:50,341:INFO:Starting cross validation
2024-04-18 00:06:50,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:07:35,469:INFO:Calculating mean and std
2024-04-18 00:07:35,472:INFO:Creating metrics dataframe
2024-04-18 00:07:35,475:INFO:Uploading results into container
2024-04-18 00:07:35,476:INFO:Uploading model into container now
2024-04-18 00:07:35,477:INFO:_master_model_container: 16
2024-04-18 00:07:35,477:INFO:_display_container: 2
2024-04-18 00:07:35,477:INFO:GradientBoostingRegressor(random_state=853)
2024-04-18 00:07:35,478:INFO:create_model() successfully completed......................................
2024-04-18 00:07:36,512:INFO:SubProcess create_model() end ==================================
2024-04-18 00:07:36,513:INFO:Creating metrics dataframe
2024-04-18 00:07:36,540:INFO:Initializing Extreme Gradient Boosting
2024-04-18 00:07:36,540:INFO:Total runtime is 7.475336011250813 minutes
2024-04-18 00:07:36,547:INFO:SubProcess create_model() called ==================================
2024-04-18 00:07:36,548:INFO:Initializing create_model()
2024-04-18 00:07:36,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:07:36,550:INFO:Checking exceptions
2024-04-18 00:07:36,550:INFO:Importing libraries
2024-04-18 00:07:36,551:INFO:Copying training dataset
2024-04-18 00:07:36,584:INFO:Defining folds
2024-04-18 00:07:36,584:INFO:Declaring metric variables
2024-04-18 00:07:36,594:INFO:Importing untrained model
2024-04-18 00:07:36,609:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 00:07:36,635:INFO:Starting cross validation
2024-04-18 00:07:36,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:07:52,966:INFO:Calculating mean and std
2024-04-18 00:07:52,969:INFO:Creating metrics dataframe
2024-04-18 00:07:52,971:INFO:Uploading results into container
2024-04-18 00:07:52,972:INFO:Uploading model into container now
2024-04-18 00:07:52,972:INFO:_master_model_container: 17
2024-04-18 00:07:52,973:INFO:_display_container: 2
2024-04-18 00:07:52,975:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=853, ...)
2024-04-18 00:07:52,975:INFO:create_model() successfully completed......................................
2024-04-18 00:07:53,537:INFO:SubProcess create_model() end ==================================
2024-04-18 00:07:53,538:INFO:Creating metrics dataframe
2024-04-18 00:07:53,555:INFO:Initializing Light Gradient Boosting Machine
2024-04-18 00:07:53,555:INFO:Total runtime is 7.758917319774627 minutes
2024-04-18 00:07:53,561:INFO:SubProcess create_model() called ==================================
2024-04-18 00:07:53,561:INFO:Initializing create_model()
2024-04-18 00:07:53,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:07:53,562:INFO:Checking exceptions
2024-04-18 00:07:53,562:INFO:Importing libraries
2024-04-18 00:07:53,562:INFO:Copying training dataset
2024-04-18 00:07:53,593:INFO:Defining folds
2024-04-18 00:07:53,594:INFO:Declaring metric variables
2024-04-18 00:07:53,629:INFO:Importing untrained model
2024-04-18 00:07:53,646:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-18 00:07:53,683:INFO:Starting cross validation
2024-04-18 00:07:53,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:08:02,363:INFO:Calculating mean and std
2024-04-18 00:08:02,364:INFO:Creating metrics dataframe
2024-04-18 00:08:02,367:INFO:Uploading results into container
2024-04-18 00:08:02,368:INFO:Uploading model into container now
2024-04-18 00:08:02,368:INFO:_master_model_container: 18
2024-04-18 00:08:02,368:INFO:_display_container: 2
2024-04-18 00:08:02,369:INFO:LGBMRegressor(n_jobs=-1, random_state=853)
2024-04-18 00:08:02,369:INFO:create_model() successfully completed......................................
2024-04-18 00:08:02,884:INFO:SubProcess create_model() end ==================================
2024-04-18 00:08:02,885:INFO:Creating metrics dataframe
2024-04-18 00:08:02,898:INFO:Initializing CatBoost Regressor
2024-04-18 00:08:02,898:INFO:Total runtime is 7.914638221263885 minutes
2024-04-18 00:08:02,902:INFO:SubProcess create_model() called ==================================
2024-04-18 00:08:02,902:INFO:Initializing create_model()
2024-04-18 00:08:02,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:08:02,903:INFO:Checking exceptions
2024-04-18 00:08:02,903:INFO:Importing libraries
2024-04-18 00:08:02,903:INFO:Copying training dataset
2024-04-18 00:08:02,922:INFO:Defining folds
2024-04-18 00:08:02,922:INFO:Declaring metric variables
2024-04-18 00:08:02,930:INFO:Importing untrained model
2024-04-18 00:08:02,950:INFO:CatBoost Regressor Imported successfully
2024-04-18 00:08:02,970:INFO:Starting cross validation
2024-04-18 00:08:02,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:08:58,667:INFO:Calculating mean and std
2024-04-18 00:08:58,669:INFO:Creating metrics dataframe
2024-04-18 00:08:58,673:INFO:Uploading results into container
2024-04-18 00:08:58,674:INFO:Uploading model into container now
2024-04-18 00:08:58,675:INFO:_master_model_container: 19
2024-04-18 00:08:58,676:INFO:_display_container: 2
2024-04-18 00:08:58,676:INFO:<catboost.core.CatBoostRegressor object at 0x0000024BFA5F8370>
2024-04-18 00:08:58,677:INFO:create_model() successfully completed......................................
2024-04-18 00:08:59,380:WARNING:create_model() for <catboost.core.CatBoostRegressor object at 0x0000024BFA5F8370> raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-18 00:08:59,382:WARNING:Traceback (most recent call last):
  File "c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 798, in compare_models
    assert (
AssertionError

2024-04-18 00:08:59,383:INFO:Initializing create_model()
2024-04-18 00:08:59,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:08:59,383:INFO:Checking exceptions
2024-04-18 00:08:59,383:INFO:Importing libraries
2024-04-18 00:08:59,383:INFO:Copying training dataset
2024-04-18 00:08:59,416:INFO:Defining folds
2024-04-18 00:08:59,416:INFO:Declaring metric variables
2024-04-18 00:08:59,426:INFO:Importing untrained model
2024-04-18 00:08:59,436:INFO:CatBoost Regressor Imported successfully
2024-04-18 00:08:59,451:INFO:Starting cross validation
2024-04-18 00:08:59,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:10:01,683:INFO:Calculating mean and std
2024-04-18 00:10:01,684:INFO:Creating metrics dataframe
2024-04-18 00:10:01,688:INFO:Uploading results into container
2024-04-18 00:10:01,689:INFO:Uploading model into container now
2024-04-18 00:10:01,689:INFO:_master_model_container: 20
2024-04-18 00:10:01,689:INFO:_display_container: 2
2024-04-18 00:10:01,690:INFO:<catboost.core.CatBoostRegressor object at 0x0000024BFA3F8D60>
2024-04-18 00:10:01,690:INFO:create_model() successfully completed......................................
2024-04-18 00:10:02,253:INFO:SubProcess create_model() end ==================================
2024-04-18 00:10:02,253:INFO:Creating metrics dataframe
2024-04-18 00:10:02,266:INFO:Initializing Dummy Regressor
2024-04-18 00:10:02,266:INFO:Total runtime is 9.904114234447478 minutes
2024-04-18 00:10:02,273:INFO:SubProcess create_model() called ==================================
2024-04-18 00:10:02,273:INFO:Initializing create_model()
2024-04-18 00:10:02,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B0040>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:10:02,273:INFO:Checking exceptions
2024-04-18 00:10:02,273:INFO:Importing libraries
2024-04-18 00:10:02,273:INFO:Copying training dataset
2024-04-18 00:10:02,290:INFO:Defining folds
2024-04-18 00:10:02,291:INFO:Declaring metric variables
2024-04-18 00:10:02,295:INFO:Importing untrained model
2024-04-18 00:10:02,306:INFO:Dummy Regressor Imported successfully
2024-04-18 00:10:02,315:INFO:Starting cross validation
2024-04-18 00:10:02,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:10:09,009:INFO:Calculating mean and std
2024-04-18 00:10:09,018:INFO:Creating metrics dataframe
2024-04-18 00:10:09,024:INFO:Uploading results into container
2024-04-18 00:10:09,026:INFO:Uploading model into container now
2024-04-18 00:10:09,026:INFO:_master_model_container: 21
2024-04-18 00:10:09,027:INFO:_display_container: 2
2024-04-18 00:10:09,027:INFO:DummyRegressor()
2024-04-18 00:10:09,027:INFO:create_model() successfully completed......................................
2024-04-18 00:10:09,543:INFO:SubProcess create_model() end ==================================
2024-04-18 00:10:09,544:INFO:Creating metrics dataframe
2024-04-18 00:10:09,572:INFO:Initializing create_model()
2024-04-18 00:10:09,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF9845970>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:10:09,573:INFO:Checking exceptions
2024-04-18 00:10:09,576:INFO:Importing libraries
2024-04-18 00:10:09,576:INFO:Copying training dataset
2024-04-18 00:10:09,590:INFO:Defining folds
2024-04-18 00:10:09,590:INFO:Declaring metric variables
2024-04-18 00:10:09,591:INFO:Importing untrained model
2024-04-18 00:10:09,591:INFO:Declaring custom model
2024-04-18 00:10:09,591:INFO:Huber Regressor Imported successfully
2024-04-18 00:10:09,595:INFO:Cross validation set to False
2024-04-18 00:10:09,595:INFO:Fitting Model
2024-04-18 00:10:12,335:INFO:HuberRegressor()
2024-04-18 00:10:12,335:INFO:create_model() successfully completed......................................
2024-04-18 00:10:13,034:INFO:_master_model_container: 21
2024-04-18 00:10:13,034:INFO:_display_container: 2
2024-04-18 00:10:13,035:INFO:HuberRegressor()
2024-04-18 00:10:13,035:INFO:compare_models() successfully completed......................................
2024-04-18 00:13:21,213:INFO:PyCaret RegressionExperiment
2024-04-18 00:13:21,213:INFO:Logging name: reg-default-name
2024-04-18 00:13:21,213:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-18 00:13:21,213:INFO:version 3.1.0
2024-04-18 00:13:21,213:INFO:Initializing setup()
2024-04-18 00:13:21,213:INFO:self.USI: d0b9
2024-04-18 00:13:21,214:INFO:self._variable_keys: {'y_train', 'X_test', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'html_param', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'n_jobs_param', 'y_test', 'USI', 'data', 'idx', 'gpu_param', 'transform_target_param', 'logging_param', 'memory', 'X_train', 'fold_shuffle_param', 'seed', 'target_param', 'log_plots_param', 'X', 'exp_id', '_ml_usecase', 'y'}
2024-04-18 00:13:21,214:INFO:Checking environment
2024-04-18 00:13:21,214:INFO:python_version: 3.9.17
2024-04-18 00:13:21,214:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-18 00:13:21,214:INFO:machine: AMD64
2024-04-18 00:13:21,214:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-18 00:13:21,216:INFO:Memory: svmem(total=8435355648, available=1125249024, percent=86.7, used=7310106624, free=1125249024)
2024-04-18 00:13:21,217:INFO:Physical Core: 2
2024-04-18 00:13:21,217:INFO:Logical Core: 4
2024-04-18 00:13:21,217:INFO:Checking libraries
2024-04-18 00:13:21,217:INFO:System:
2024-04-18 00:13:21,217:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-18 00:13:21,217:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-18 00:13:21,217:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-18 00:13:21,217:INFO:PyCaret required dependencies:
2024-04-18 00:13:21,217:INFO:                 pip: 23.2.1
2024-04-18 00:13:21,217:INFO:          setuptools: 68.0.0
2024-04-18 00:13:21,217:INFO:             pycaret: 3.1.0
2024-04-18 00:13:21,217:INFO:             IPython: 8.14.0
2024-04-18 00:13:21,217:INFO:          ipywidgets: 8.1.0
2024-04-18 00:13:21,217:INFO:                tqdm: 4.66.1
2024-04-18 00:13:21,217:INFO:               numpy: 1.23.5
2024-04-18 00:13:21,218:INFO:              pandas: 1.5.3
2024-04-18 00:13:21,218:INFO:              jinja2: 3.1.2
2024-04-18 00:13:21,218:INFO:               scipy: 1.10.1
2024-04-18 00:13:21,218:INFO:              joblib: 1.3.2
2024-04-18 00:13:21,218:INFO:             sklearn: 1.2.2
2024-04-18 00:13:21,218:INFO:                pyod: 1.1.0
2024-04-18 00:13:21,218:INFO:            imblearn: 0.11.0
2024-04-18 00:13:21,218:INFO:   category_encoders: 2.6.2
2024-04-18 00:13:21,218:INFO:            lightgbm: 4.0.0
2024-04-18 00:13:21,218:INFO:               numba: 0.58.0
2024-04-18 00:13:21,218:INFO:            requests: 2.31.0
2024-04-18 00:13:21,218:INFO:          matplotlib: 3.3.4
2024-04-18 00:13:21,218:INFO:          scikitplot: 0.3.7
2024-04-18 00:13:21,218:INFO:         yellowbrick: 1.5
2024-04-18 00:13:21,218:INFO:              plotly: 5.17.0
2024-04-18 00:13:21,218:INFO:    plotly-resampler: Not installed
2024-04-18 00:13:21,218:INFO:             kaleido: 0.2.1
2024-04-18 00:13:21,218:INFO:           schemdraw: 0.15
2024-04-18 00:13:21,218:INFO:         statsmodels: 0.13.2
2024-04-18 00:13:21,218:INFO:              sktime: 0.21.1
2024-04-18 00:13:21,218:INFO:               tbats: 1.1.3
2024-04-18 00:13:21,219:INFO:            pmdarima: 2.0.3
2024-04-18 00:13:21,219:INFO:              psutil: 5.9.5
2024-04-18 00:13:21,219:INFO:          markupsafe: 2.1.3
2024-04-18 00:13:21,219:INFO:             pickle5: Not installed
2024-04-18 00:13:21,219:INFO:         cloudpickle: 2.2.1
2024-04-18 00:13:21,219:INFO:         deprecation: 2.1.0
2024-04-18 00:13:21,219:INFO:              xxhash: 3.4.1
2024-04-18 00:13:21,219:INFO:           wurlitzer: Not installed
2024-04-18 00:13:21,219:INFO:PyCaret optional dependencies:
2024-04-18 00:13:21,219:INFO:                shap: 0.44.1
2024-04-18 00:13:21,219:INFO:           interpret: Not installed
2024-04-18 00:13:21,219:INFO:                umap: Not installed
2024-04-18 00:13:21,219:INFO:     ydata_profiling: 4.5.1
2024-04-18 00:13:21,219:INFO:  explainerdashboard: Not installed
2024-04-18 00:13:21,219:INFO:             autoviz: Not installed
2024-04-18 00:13:21,219:INFO:           fairlearn: Not installed
2024-04-18 00:13:21,219:INFO:          deepchecks: Not installed
2024-04-18 00:13:21,219:INFO:             xgboost: 2.0.3
2024-04-18 00:13:21,219:INFO:            catboost: 1.2
2024-04-18 00:13:21,219:INFO:              kmodes: Not installed
2024-04-18 00:13:21,219:INFO:             mlxtend: Not installed
2024-04-18 00:13:21,219:INFO:       statsforecast: Not installed
2024-04-18 00:13:21,220:INFO:        tune_sklearn: Not installed
2024-04-18 00:13:21,220:INFO:                 ray: Not installed
2024-04-18 00:13:21,220:INFO:            hyperopt: Not installed
2024-04-18 00:13:21,220:INFO:              optuna: 3.3.0
2024-04-18 00:13:21,220:INFO:               skopt: Not installed
2024-04-18 00:13:21,220:INFO:              mlflow: Not installed
2024-04-18 00:13:21,220:INFO:              gradio: Not installed
2024-04-18 00:13:21,220:INFO:             fastapi: Not installed
2024-04-18 00:13:21,220:INFO:             uvicorn: Not installed
2024-04-18 00:13:21,220:INFO:              m2cgen: Not installed
2024-04-18 00:13:21,220:INFO:           evidently: Not installed
2024-04-18 00:13:21,220:INFO:               fugue: Not installed
2024-04-18 00:13:21,220:INFO:           streamlit: 1.25.0
2024-04-18 00:13:21,220:INFO:             prophet: Not installed
2024-04-18 00:13:21,220:INFO:None
2024-04-18 00:13:21,220:INFO:Set up data.
2024-04-18 00:13:21,316:INFO:Set up folding strategy.
2024-04-18 00:13:21,317:INFO:Set up train/test split.
2024-04-18 00:13:21,331:INFO:Set up index.
2024-04-18 00:13:21,338:INFO:Assigning column types.
2024-04-18 00:13:21,343:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 00:13:21,343:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,350:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,354:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,449:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,497:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:21,500:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:21,500:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,505:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,510:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,653:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:21,657:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:21,658:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-18 00:13:21,664:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,668:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,770:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,816:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:21,819:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:21,826:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,831:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,921:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:21,973:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:21,977:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:21,978:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-18 00:13:21,987:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,125:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:22,128:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:22,137:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,292:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:22,294:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:22,295:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-18 00:13:22,493:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,607:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,608:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:22,611:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:22,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,834:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:13:22,836:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:22,841:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:22,842:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 00:13:22,964:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:23,015:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:23,018:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:23,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:13:23,175:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:23,178:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:23,178:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-18 00:13:23,347:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:23,349:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:23,525:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:23,528:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:23,529:INFO:Preparing preprocessing pipeline...
2024-04-18 00:13:23,529:INFO:Set up simple imputation.
2024-04-18 00:13:23,529:INFO:Set up grouping of rare categories.
2024-04-18 00:13:23,566:INFO:Set up encoding of categorical features.
2024-04-18 00:13:26,148:INFO:Finished creating preprocessing pipeline.
2024-04-18 00:13:26,161:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model_year', 'plant_code'],
                                    transformer=OneHotEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['model', 'engine'],
                                    transformer=TargetEncoder(cols=['model',
                                                                    'engine'],
                                                              handle_missing='return_nan')))])
2024-04-18 00:13:26,161:INFO:Creating final display dataframe.
2024-04-18 00:13:29,372:INFO:Setup _display_container:                     Description             Value
0                    Session id              2715
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 7)
4        Transformed data shape       (57507, 85)
5   Transformed train set shape       (46005, 85)
6    Transformed test set shape       (11502, 85)
7          Categorical features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding                25
13              Encoding method              None
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              d0b9
2024-04-18 00:13:29,737:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:29,739:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:29,893:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:13:29,895:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:13:29,896:INFO:setup() successfully completed in 8.96s...............
2024-04-18 00:14:09,837:INFO:Initializing compare_models()
2024-04-18 00:14:09,838:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-18 00:14:09,839:INFO:Checking exceptions
2024-04-18 00:14:09,870:INFO:Preparing display monitor
2024-04-18 00:14:09,907:INFO:Initializing Linear Regression
2024-04-18 00:14:09,908:INFO:Total runtime is 1.66932741800944e-05 minutes
2024-04-18 00:14:09,917:INFO:SubProcess create_model() called ==================================
2024-04-18 00:14:09,918:INFO:Initializing create_model()
2024-04-18 00:14:09,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:14:09,918:INFO:Checking exceptions
2024-04-18 00:14:09,918:INFO:Importing libraries
2024-04-18 00:14:09,918:INFO:Copying training dataset
2024-04-18 00:14:10,060:INFO:Defining folds
2024-04-18 00:14:10,060:INFO:Declaring metric variables
2024-04-18 00:14:10,082:INFO:Importing untrained model
2024-04-18 00:14:10,090:INFO:Linear Regression Imported successfully
2024-04-18 00:14:10,157:INFO:Starting cross validation
2024-04-18 00:14:10,169:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:14:21,147:INFO:Calculating mean and std
2024-04-18 00:14:21,149:INFO:Creating metrics dataframe
2024-04-18 00:14:21,153:INFO:Uploading results into container
2024-04-18 00:14:21,155:INFO:Uploading model into container now
2024-04-18 00:14:21,155:INFO:_master_model_container: 1
2024-04-18 00:14:21,155:INFO:_display_container: 2
2024-04-18 00:14:21,156:INFO:LinearRegression(n_jobs=-1)
2024-04-18 00:14:21,156:INFO:create_model() successfully completed......................................
2024-04-18 00:14:21,815:INFO:SubProcess create_model() end ==================================
2024-04-18 00:14:21,815:INFO:Creating metrics dataframe
2024-04-18 00:14:21,823:INFO:Initializing Lasso Regression
2024-04-18 00:14:21,824:INFO:Total runtime is 0.1986218293507894 minutes
2024-04-18 00:14:21,829:INFO:SubProcess create_model() called ==================================
2024-04-18 00:14:21,829:INFO:Initializing create_model()
2024-04-18 00:14:21,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:14:21,830:INFO:Checking exceptions
2024-04-18 00:14:21,830:INFO:Importing libraries
2024-04-18 00:14:21,830:INFO:Copying training dataset
2024-04-18 00:14:21,900:INFO:Defining folds
2024-04-18 00:14:21,900:INFO:Declaring metric variables
2024-04-18 00:14:21,911:INFO:Importing untrained model
2024-04-18 00:14:21,917:INFO:Lasso Regression Imported successfully
2024-04-18 00:14:21,930:INFO:Starting cross validation
2024-04-18 00:14:21,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:14:54,587:INFO:Calculating mean and std
2024-04-18 00:14:54,588:INFO:Creating metrics dataframe
2024-04-18 00:14:54,594:INFO:Uploading results into container
2024-04-18 00:14:54,597:INFO:Uploading model into container now
2024-04-18 00:14:54,599:INFO:_master_model_container: 2
2024-04-18 00:14:54,599:INFO:_display_container: 2
2024-04-18 00:14:54,599:INFO:Lasso(random_state=2715)
2024-04-18 00:14:54,599:INFO:create_model() successfully completed......................................
2024-04-18 00:14:55,163:INFO:SubProcess create_model() end ==================================
2024-04-18 00:14:55,163:INFO:Creating metrics dataframe
2024-04-18 00:14:55,172:INFO:Initializing Ridge Regression
2024-04-18 00:14:55,173:INFO:Total runtime is 0.754437001546224 minutes
2024-04-18 00:14:55,181:INFO:SubProcess create_model() called ==================================
2024-04-18 00:14:55,181:INFO:Initializing create_model()
2024-04-18 00:14:55,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:14:55,182:INFO:Checking exceptions
2024-04-18 00:14:55,182:INFO:Importing libraries
2024-04-18 00:14:55,183:INFO:Copying training dataset
2024-04-18 00:14:55,264:INFO:Defining folds
2024-04-18 00:14:55,265:INFO:Declaring metric variables
2024-04-18 00:14:55,271:INFO:Importing untrained model
2024-04-18 00:14:55,280:INFO:Ridge Regression Imported successfully
2024-04-18 00:14:55,291:INFO:Starting cross validation
2024-04-18 00:14:55,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:01,718:INFO:Calculating mean and std
2024-04-18 00:15:01,719:INFO:Creating metrics dataframe
2024-04-18 00:15:01,721:INFO:Uploading results into container
2024-04-18 00:15:01,721:INFO:Uploading model into container now
2024-04-18 00:15:01,722:INFO:_master_model_container: 3
2024-04-18 00:15:01,722:INFO:_display_container: 2
2024-04-18 00:15:01,723:INFO:Ridge(random_state=2715)
2024-04-18 00:15:01,724:INFO:create_model() successfully completed......................................
2024-04-18 00:15:02,226:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:02,226:INFO:Creating metrics dataframe
2024-04-18 00:15:02,235:INFO:Initializing Elastic Net
2024-04-18 00:15:02,235:INFO:Total runtime is 0.8721436142921448 minutes
2024-04-18 00:15:02,240:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:02,241:INFO:Initializing create_model()
2024-04-18 00:15:02,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:02,241:INFO:Checking exceptions
2024-04-18 00:15:02,241:INFO:Importing libraries
2024-04-18 00:15:02,241:INFO:Copying training dataset
2024-04-18 00:15:02,311:INFO:Defining folds
2024-04-18 00:15:02,311:INFO:Declaring metric variables
2024-04-18 00:15:02,321:INFO:Importing untrained model
2024-04-18 00:15:02,328:INFO:Elastic Net Imported successfully
2024-04-18 00:15:02,342:INFO:Starting cross validation
2024-04-18 00:15:02,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:10,286:INFO:Calculating mean and std
2024-04-18 00:15:10,287:INFO:Creating metrics dataframe
2024-04-18 00:15:10,289:INFO:Uploading results into container
2024-04-18 00:15:10,290:INFO:Uploading model into container now
2024-04-18 00:15:10,290:INFO:_master_model_container: 4
2024-04-18 00:15:10,291:INFO:_display_container: 2
2024-04-18 00:15:10,293:INFO:ElasticNet(random_state=2715)
2024-04-18 00:15:10,293:INFO:create_model() successfully completed......................................
2024-04-18 00:15:10,864:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:10,864:INFO:Creating metrics dataframe
2024-04-18 00:15:10,881:INFO:Initializing Least Angle Regression
2024-04-18 00:15:10,881:INFO:Total runtime is 1.0162360548973084 minutes
2024-04-18 00:15:10,889:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:10,890:INFO:Initializing create_model()
2024-04-18 00:15:10,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:10,890:INFO:Checking exceptions
2024-04-18 00:15:10,890:INFO:Importing libraries
2024-04-18 00:15:10,890:INFO:Copying training dataset
2024-04-18 00:15:10,981:INFO:Defining folds
2024-04-18 00:15:10,982:INFO:Declaring metric variables
2024-04-18 00:15:10,988:INFO:Importing untrained model
2024-04-18 00:15:10,999:INFO:Least Angle Regression Imported successfully
2024-04-18 00:15:11,007:INFO:Starting cross validation
2024-04-18 00:15:11,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:13,268:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=6.569e+00, with an active set of 40 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,476:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 47 iterations, i.e. alpha=6.250e+00, with an active set of 45 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,493:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 100 iterations, i.e. alpha=1.026e+02, with an active set of 83 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,691:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=6.833e+00, with an active set of 42 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,695:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 59 iterations, i.e. alpha=3.871e+00, with an active set of 57 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,704:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 77 iterations, i.e. alpha=2.316e+00, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,705:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 78 iterations, i.e. alpha=2.304e+00, with an active set of 73 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:15,711:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 96 iterations, i.e. alpha=6.836e+03, with an active set of 83 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:17,332:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 48 iterations, i.e. alpha=6.255e+00, with an active set of 45 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:17,333:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 50 iterations, i.e. alpha=6.222e+00, with an active set of 47 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:17,467:INFO:Calculating mean and std
2024-04-18 00:15:17,468:INFO:Creating metrics dataframe
2024-04-18 00:15:17,474:INFO:Uploading results into container
2024-04-18 00:15:17,477:INFO:Uploading model into container now
2024-04-18 00:15:17,478:INFO:_master_model_container: 5
2024-04-18 00:15:17,478:INFO:_display_container: 2
2024-04-18 00:15:17,480:INFO:Lars(random_state=2715)
2024-04-18 00:15:17,480:INFO:create_model() successfully completed......................................
2024-04-18 00:15:18,000:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:18,000:INFO:Creating metrics dataframe
2024-04-18 00:15:18,011:INFO:Initializing Lasso Least Angle Regression
2024-04-18 00:15:18,011:INFO:Total runtime is 1.1350654443105062 minutes
2024-04-18 00:15:18,018:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:18,019:INFO:Initializing create_model()
2024-04-18 00:15:18,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:18,019:INFO:Checking exceptions
2024-04-18 00:15:18,020:INFO:Importing libraries
2024-04-18 00:15:18,020:INFO:Copying training dataset
2024-04-18 00:15:18,094:INFO:Defining folds
2024-04-18 00:15:18,094:INFO:Declaring metric variables
2024-04-18 00:15:18,102:INFO:Importing untrained model
2024-04-18 00:15:18,112:INFO:Lasso Least Angle Regression Imported successfully
2024-04-18 00:15:18,125:INFO:Starting cross validation
2024-04-18 00:15:18,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:20,406:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 49 iterations, alpha=6.390e+00, previous alpha=5.806e+00, with an active set of 48 regressors.
  warnings.warn(

2024-04-18 00:15:20,555:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 51 iterations, alpha=5.778e+00, previous alpha=5.422e+00, with an active set of 48 regressors.
  warnings.warn(

2024-04-18 00:15:20,596:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 51 iterations, alpha=4.849e+00, previous alpha=4.834e+00, with an active set of 48 regressors.
  warnings.warn(

2024-04-18 00:15:22,737:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 48 iterations, i.e. alpha=5.251e+00, with an active set of 46 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:22,745:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 67 iterations, i.e. alpha=2.281e+00, with an active set of 59 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:22,999:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 50 iterations, i.e. alpha=5.413e+00, with an active set of 46 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:23,001:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 53 iterations, i.e. alpha=4.715e+00, with an active set of 49 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:23,002:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 54 iterations, i.e. alpha=4.556e+00, with an active set of 50 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:23,005:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 68 iterations, i.e. alpha=2.046e+00, with an active set of 62 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:23,007:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 72 iterations, alpha=2.332e+00, previous alpha=1.847e+00, with an active set of 63 regressors.
  warnings.warn(

2024-04-18 00:15:23,013:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 83 iterations, i.e. alpha=1.044e+00, with an active set of 65 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-04-18 00:15:24,450:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 49 iterations, alpha=5.564e+00, previous alpha=5.171e+00, with an active set of 48 regressors.
  warnings.warn(

2024-04-18 00:15:24,460:WARNING:c:\Users\elpiz\anaconda3\envs\ds_practicum_env\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 83 iterations, alpha=1.254e+00, previous alpha=1.146e+00, with an active set of 66 regressors.
  warnings.warn(

2024-04-18 00:15:24,609:INFO:Calculating mean and std
2024-04-18 00:15:24,611:INFO:Creating metrics dataframe
2024-04-18 00:15:24,614:INFO:Uploading results into container
2024-04-18 00:15:24,615:INFO:Uploading model into container now
2024-04-18 00:15:24,616:INFO:_master_model_container: 6
2024-04-18 00:15:24,616:INFO:_display_container: 2
2024-04-18 00:15:24,618:INFO:LassoLars(random_state=2715)
2024-04-18 00:15:24,618:INFO:create_model() successfully completed......................................
2024-04-18 00:15:25,116:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:25,116:INFO:Creating metrics dataframe
2024-04-18 00:15:25,125:INFO:Initializing Orthogonal Matching Pursuit
2024-04-18 00:15:25,125:INFO:Total runtime is 1.2536396980285645 minutes
2024-04-18 00:15:25,132:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:25,132:INFO:Initializing create_model()
2024-04-18 00:15:25,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:25,133:INFO:Checking exceptions
2024-04-18 00:15:25,133:INFO:Importing libraries
2024-04-18 00:15:25,133:INFO:Copying training dataset
2024-04-18 00:15:25,206:INFO:Defining folds
2024-04-18 00:15:25,206:INFO:Declaring metric variables
2024-04-18 00:15:25,216:INFO:Importing untrained model
2024-04-18 00:15:25,225:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-18 00:15:25,238:INFO:Starting cross validation
2024-04-18 00:15:25,243:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:31,974:INFO:Calculating mean and std
2024-04-18 00:15:31,976:INFO:Creating metrics dataframe
2024-04-18 00:15:31,978:INFO:Uploading results into container
2024-04-18 00:15:31,979:INFO:Uploading model into container now
2024-04-18 00:15:31,979:INFO:_master_model_container: 7
2024-04-18 00:15:31,980:INFO:_display_container: 2
2024-04-18 00:15:31,980:INFO:OrthogonalMatchingPursuit()
2024-04-18 00:15:31,980:INFO:create_model() successfully completed......................................
2024-04-18 00:15:32,484:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:32,484:INFO:Creating metrics dataframe
2024-04-18 00:15:32,494:INFO:Initializing Bayesian Ridge
2024-04-18 00:15:32,495:INFO:Total runtime is 1.3764639337857565 minutes
2024-04-18 00:15:32,501:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:32,501:INFO:Initializing create_model()
2024-04-18 00:15:32,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:32,501:INFO:Checking exceptions
2024-04-18 00:15:32,501:INFO:Importing libraries
2024-04-18 00:15:32,502:INFO:Copying training dataset
2024-04-18 00:15:32,592:INFO:Defining folds
2024-04-18 00:15:32,592:INFO:Declaring metric variables
2024-04-18 00:15:32,599:INFO:Importing untrained model
2024-04-18 00:15:32,604:INFO:Bayesian Ridge Imported successfully
2024-04-18 00:15:32,616:INFO:Starting cross validation
2024-04-18 00:15:32,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:45,945:INFO:Calculating mean and std
2024-04-18 00:15:45,946:INFO:Creating metrics dataframe
2024-04-18 00:15:45,949:INFO:Uploading results into container
2024-04-18 00:15:45,949:INFO:Uploading model into container now
2024-04-18 00:15:45,950:INFO:_master_model_container: 8
2024-04-18 00:15:45,950:INFO:_display_container: 2
2024-04-18 00:15:45,951:INFO:BayesianRidge()
2024-04-18 00:15:45,952:INFO:create_model() successfully completed......................................
2024-04-18 00:15:46,447:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:46,448:INFO:Creating metrics dataframe
2024-04-18 00:15:46,458:INFO:Initializing Passive Aggressive Regressor
2024-04-18 00:15:46,458:INFO:Total runtime is 1.609185032049815 minutes
2024-04-18 00:15:46,467:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:46,467:INFO:Initializing create_model()
2024-04-18 00:15:46,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:46,467:INFO:Checking exceptions
2024-04-18 00:15:46,467:INFO:Importing libraries
2024-04-18 00:15:46,468:INFO:Copying training dataset
2024-04-18 00:15:46,632:INFO:Defining folds
2024-04-18 00:15:46,633:INFO:Declaring metric variables
2024-04-18 00:15:46,639:INFO:Importing untrained model
2024-04-18 00:15:46,650:INFO:Passive Aggressive Regressor Imported successfully
2024-04-18 00:15:46,663:INFO:Starting cross validation
2024-04-18 00:15:46,669:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:15:53,799:INFO:Calculating mean and std
2024-04-18 00:15:53,801:INFO:Creating metrics dataframe
2024-04-18 00:15:53,805:INFO:Uploading results into container
2024-04-18 00:15:53,809:INFO:Uploading model into container now
2024-04-18 00:15:53,810:INFO:_master_model_container: 9
2024-04-18 00:15:53,810:INFO:_display_container: 2
2024-04-18 00:15:53,811:INFO:PassiveAggressiveRegressor(random_state=2715)
2024-04-18 00:15:53,812:INFO:create_model() successfully completed......................................
2024-04-18 00:15:54,314:INFO:SubProcess create_model() end ==================================
2024-04-18 00:15:54,314:INFO:Creating metrics dataframe
2024-04-18 00:15:54,326:INFO:Initializing Huber Regressor
2024-04-18 00:15:54,326:INFO:Total runtime is 1.7403222799301148 minutes
2024-04-18 00:15:54,332:INFO:SubProcess create_model() called ==================================
2024-04-18 00:15:54,333:INFO:Initializing create_model()
2024-04-18 00:15:54,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:15:54,333:INFO:Checking exceptions
2024-04-18 00:15:54,333:INFO:Importing libraries
2024-04-18 00:15:54,333:INFO:Copying training dataset
2024-04-18 00:15:54,463:INFO:Defining folds
2024-04-18 00:15:54,463:INFO:Declaring metric variables
2024-04-18 00:15:54,472:INFO:Importing untrained model
2024-04-18 00:15:54,483:INFO:Huber Regressor Imported successfully
2024-04-18 00:15:54,505:INFO:Starting cross validation
2024-04-18 00:15:54,511:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:16:06,496:INFO:Calculating mean and std
2024-04-18 00:16:06,498:INFO:Creating metrics dataframe
2024-04-18 00:16:06,501:INFO:Uploading results into container
2024-04-18 00:16:06,502:INFO:Uploading model into container now
2024-04-18 00:16:06,503:INFO:_master_model_container: 10
2024-04-18 00:16:06,504:INFO:_display_container: 2
2024-04-18 00:16:06,505:INFO:HuberRegressor()
2024-04-18 00:16:06,505:INFO:create_model() successfully completed......................................
2024-04-18 00:16:07,114:INFO:SubProcess create_model() end ==================================
2024-04-18 00:16:07,114:INFO:Creating metrics dataframe
2024-04-18 00:16:07,126:INFO:Initializing K Neighbors Regressor
2024-04-18 00:16:07,127:INFO:Total runtime is 1.953666917483012 minutes
2024-04-18 00:16:07,133:INFO:SubProcess create_model() called ==================================
2024-04-18 00:16:07,134:INFO:Initializing create_model()
2024-04-18 00:16:07,134:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:16:07,134:INFO:Checking exceptions
2024-04-18 00:16:07,134:INFO:Importing libraries
2024-04-18 00:16:07,134:INFO:Copying training dataset
2024-04-18 00:16:07,206:INFO:Defining folds
2024-04-18 00:16:07,206:INFO:Declaring metric variables
2024-04-18 00:16:07,217:INFO:Importing untrained model
2024-04-18 00:16:07,223:INFO:K Neighbors Regressor Imported successfully
2024-04-18 00:16:07,238:INFO:Starting cross validation
2024-04-18 00:16:07,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:16:23,718:INFO:Calculating mean and std
2024-04-18 00:16:23,720:INFO:Creating metrics dataframe
2024-04-18 00:16:23,728:INFO:Uploading results into container
2024-04-18 00:16:23,732:INFO:Uploading model into container now
2024-04-18 00:16:23,734:INFO:_master_model_container: 11
2024-04-18 00:16:23,734:INFO:_display_container: 2
2024-04-18 00:16:23,734:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-18 00:16:23,734:INFO:create_model() successfully completed......................................
2024-04-18 00:16:24,265:INFO:SubProcess create_model() end ==================================
2024-04-18 00:16:24,265:INFO:Creating metrics dataframe
2024-04-18 00:16:24,278:INFO:Initializing Decision Tree Regressor
2024-04-18 00:16:24,278:INFO:Total runtime is 2.239513599872589 minutes
2024-04-18 00:16:24,282:INFO:SubProcess create_model() called ==================================
2024-04-18 00:16:24,283:INFO:Initializing create_model()
2024-04-18 00:16:24,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:16:24,283:INFO:Checking exceptions
2024-04-18 00:16:24,283:INFO:Importing libraries
2024-04-18 00:16:24,284:INFO:Copying training dataset
2024-04-18 00:16:24,353:INFO:Defining folds
2024-04-18 00:16:24,354:INFO:Declaring metric variables
2024-04-18 00:16:24,366:INFO:Importing untrained model
2024-04-18 00:16:24,372:INFO:Decision Tree Regressor Imported successfully
2024-04-18 00:16:24,388:INFO:Starting cross validation
2024-04-18 00:16:24,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:16:32,056:INFO:Calculating mean and std
2024-04-18 00:16:32,058:INFO:Creating metrics dataframe
2024-04-18 00:16:32,060:INFO:Uploading results into container
2024-04-18 00:16:32,061:INFO:Uploading model into container now
2024-04-18 00:16:32,061:INFO:_master_model_container: 12
2024-04-18 00:16:32,061:INFO:_display_container: 2
2024-04-18 00:16:32,062:INFO:DecisionTreeRegressor(random_state=2715)
2024-04-18 00:16:32,062:INFO:create_model() successfully completed......................................
2024-04-18 00:16:32,572:INFO:SubProcess create_model() end ==================================
2024-04-18 00:16:32,572:INFO:Creating metrics dataframe
2024-04-18 00:16:32,591:INFO:Initializing Random Forest Regressor
2024-04-18 00:16:32,591:INFO:Total runtime is 2.3780704299608866 minutes
2024-04-18 00:16:32,598:INFO:SubProcess create_model() called ==================================
2024-04-18 00:16:32,598:INFO:Initializing create_model()
2024-04-18 00:16:32,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:16:32,599:INFO:Checking exceptions
2024-04-18 00:16:32,599:INFO:Importing libraries
2024-04-18 00:16:32,599:INFO:Copying training dataset
2024-04-18 00:16:32,715:INFO:Defining folds
2024-04-18 00:16:32,716:INFO:Declaring metric variables
2024-04-18 00:16:32,726:INFO:Importing untrained model
2024-04-18 00:16:32,737:INFO:Random Forest Regressor Imported successfully
2024-04-18 00:16:32,748:INFO:Starting cross validation
2024-04-18 00:16:32,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:18:29,491:INFO:Calculating mean and std
2024-04-18 00:18:29,493:INFO:Creating metrics dataframe
2024-04-18 00:18:29,500:INFO:Uploading results into container
2024-04-18 00:18:29,502:INFO:Uploading model into container now
2024-04-18 00:18:29,504:INFO:_master_model_container: 13
2024-04-18 00:18:29,505:INFO:_display_container: 2
2024-04-18 00:18:29,506:INFO:RandomForestRegressor(n_jobs=-1, random_state=2715)
2024-04-18 00:18:29,507:INFO:create_model() successfully completed......................................
2024-04-18 00:18:30,269:INFO:SubProcess create_model() end ==================================
2024-04-18 00:18:30,269:INFO:Creating metrics dataframe
2024-04-18 00:18:30,281:INFO:Initializing Extra Trees Regressor
2024-04-18 00:18:30,281:INFO:Total runtime is 4.339573653539022 minutes
2024-04-18 00:18:30,287:INFO:SubProcess create_model() called ==================================
2024-04-18 00:18:30,287:INFO:Initializing create_model()
2024-04-18 00:18:30,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:18:30,288:INFO:Checking exceptions
2024-04-18 00:18:30,288:INFO:Importing libraries
2024-04-18 00:18:30,288:INFO:Copying training dataset
2024-04-18 00:18:30,366:INFO:Defining folds
2024-04-18 00:18:30,366:INFO:Declaring metric variables
2024-04-18 00:18:30,371:INFO:Importing untrained model
2024-04-18 00:18:30,382:INFO:Extra Trees Regressor Imported successfully
2024-04-18 00:18:30,392:INFO:Starting cross validation
2024-04-18 00:18:30,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:20:53,280:INFO:Calculating mean and std
2024-04-18 00:20:53,282:INFO:Creating metrics dataframe
2024-04-18 00:20:53,286:INFO:Uploading results into container
2024-04-18 00:20:53,286:INFO:Uploading model into container now
2024-04-18 00:20:53,287:INFO:_master_model_container: 14
2024-04-18 00:20:53,287:INFO:_display_container: 2
2024-04-18 00:20:53,289:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2715)
2024-04-18 00:20:53,289:INFO:create_model() successfully completed......................................
2024-04-18 00:20:53,934:INFO:SubProcess create_model() end ==================================
2024-04-18 00:20:53,934:INFO:Creating metrics dataframe
2024-04-18 00:20:53,948:INFO:Initializing AdaBoost Regressor
2024-04-18 00:20:53,948:INFO:Total runtime is 6.734027425448099 minutes
2024-04-18 00:20:53,957:INFO:SubProcess create_model() called ==================================
2024-04-18 00:20:53,957:INFO:Initializing create_model()
2024-04-18 00:20:53,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:20:53,958:INFO:Checking exceptions
2024-04-18 00:20:53,958:INFO:Importing libraries
2024-04-18 00:20:53,959:INFO:Copying training dataset
2024-04-18 00:20:54,047:INFO:Defining folds
2024-04-18 00:20:54,047:INFO:Declaring metric variables
2024-04-18 00:20:54,058:INFO:Importing untrained model
2024-04-18 00:20:54,065:INFO:AdaBoost Regressor Imported successfully
2024-04-18 00:20:54,081:INFO:Starting cross validation
2024-04-18 00:20:54,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:21:24,497:INFO:Calculating mean and std
2024-04-18 00:21:24,499:INFO:Creating metrics dataframe
2024-04-18 00:21:24,501:INFO:Uploading results into container
2024-04-18 00:21:24,502:INFO:Uploading model into container now
2024-04-18 00:21:24,503:INFO:_master_model_container: 15
2024-04-18 00:21:24,503:INFO:_display_container: 2
2024-04-18 00:21:24,503:INFO:AdaBoostRegressor(random_state=2715)
2024-04-18 00:21:24,503:INFO:create_model() successfully completed......................................
2024-04-18 00:21:25,031:INFO:SubProcess create_model() end ==================================
2024-04-18 00:21:25,031:INFO:Creating metrics dataframe
2024-04-18 00:21:25,043:INFO:Initializing Gradient Boosting Regressor
2024-04-18 00:21:25,043:INFO:Total runtime is 7.252275530497233 minutes
2024-04-18 00:21:25,049:INFO:SubProcess create_model() called ==================================
2024-04-18 00:21:25,050:INFO:Initializing create_model()
2024-04-18 00:21:25,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:21:25,050:INFO:Checking exceptions
2024-04-18 00:21:25,050:INFO:Importing libraries
2024-04-18 00:21:25,050:INFO:Copying training dataset
2024-04-18 00:21:25,118:INFO:Defining folds
2024-04-18 00:21:25,118:INFO:Declaring metric variables
2024-04-18 00:21:25,130:INFO:Importing untrained model
2024-04-18 00:21:25,135:INFO:Gradient Boosting Regressor Imported successfully
2024-04-18 00:21:25,148:INFO:Starting cross validation
2024-04-18 00:21:25,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:22:08,657:INFO:Calculating mean and std
2024-04-18 00:22:08,659:INFO:Creating metrics dataframe
2024-04-18 00:22:08,661:INFO:Uploading results into container
2024-04-18 00:22:08,662:INFO:Uploading model into container now
2024-04-18 00:22:08,663:INFO:_master_model_container: 16
2024-04-18 00:22:08,663:INFO:_display_container: 2
2024-04-18 00:22:08,665:INFO:GradientBoostingRegressor(random_state=2715)
2024-04-18 00:22:08,665:INFO:create_model() successfully completed......................................
2024-04-18 00:22:09,218:INFO:SubProcess create_model() end ==================================
2024-04-18 00:22:09,218:INFO:Creating metrics dataframe
2024-04-18 00:22:09,230:INFO:Initializing Extreme Gradient Boosting
2024-04-18 00:22:09,230:INFO:Total runtime is 7.988724144299825 minutes
2024-04-18 00:22:09,237:INFO:SubProcess create_model() called ==================================
2024-04-18 00:22:09,237:INFO:Initializing create_model()
2024-04-18 00:22:09,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:22:09,238:INFO:Checking exceptions
2024-04-18 00:22:09,238:INFO:Importing libraries
2024-04-18 00:22:09,238:INFO:Copying training dataset
2024-04-18 00:22:09,321:INFO:Defining folds
2024-04-18 00:22:09,321:INFO:Declaring metric variables
2024-04-18 00:22:09,331:INFO:Importing untrained model
2024-04-18 00:22:09,340:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 00:22:09,353:INFO:Starting cross validation
2024-04-18 00:22:09,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:22:20,831:INFO:Calculating mean and std
2024-04-18 00:22:20,833:INFO:Creating metrics dataframe
2024-04-18 00:22:20,837:INFO:Uploading results into container
2024-04-18 00:22:20,838:INFO:Uploading model into container now
2024-04-18 00:22:20,840:INFO:_master_model_container: 17
2024-04-18 00:22:20,840:INFO:_display_container: 2
2024-04-18 00:22:20,843:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=2715, ...)
2024-04-18 00:22:20,843:INFO:create_model() successfully completed......................................
2024-04-18 00:22:21,384:INFO:SubProcess create_model() end ==================================
2024-04-18 00:22:21,384:INFO:Creating metrics dataframe
2024-04-18 00:22:21,397:INFO:Initializing Light Gradient Boosting Machine
2024-04-18 00:22:21,397:INFO:Total runtime is 8.191509874661763 minutes
2024-04-18 00:22:21,403:INFO:SubProcess create_model() called ==================================
2024-04-18 00:22:21,403:INFO:Initializing create_model()
2024-04-18 00:22:21,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:22:21,404:INFO:Checking exceptions
2024-04-18 00:22:21,404:INFO:Importing libraries
2024-04-18 00:22:21,404:INFO:Copying training dataset
2024-04-18 00:22:21,481:INFO:Defining folds
2024-04-18 00:22:21,481:INFO:Declaring metric variables
2024-04-18 00:22:21,489:INFO:Importing untrained model
2024-04-18 00:22:21,498:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-18 00:22:21,510:INFO:Starting cross validation
2024-04-18 00:22:21,515:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:22:29,791:INFO:Calculating mean and std
2024-04-18 00:22:29,793:INFO:Creating metrics dataframe
2024-04-18 00:22:29,801:INFO:Uploading results into container
2024-04-18 00:22:29,803:INFO:Uploading model into container now
2024-04-18 00:22:29,804:INFO:_master_model_container: 18
2024-04-18 00:22:29,804:INFO:_display_container: 2
2024-04-18 00:22:29,804:INFO:LGBMRegressor(n_jobs=-1, random_state=2715)
2024-04-18 00:22:29,804:INFO:create_model() successfully completed......................................
2024-04-18 00:22:30,322:INFO:SubProcess create_model() end ==================================
2024-04-18 00:22:30,322:INFO:Creating metrics dataframe
2024-04-18 00:22:30,334:INFO:Initializing CatBoost Regressor
2024-04-18 00:22:30,334:INFO:Total runtime is 8.340460328261058 minutes
2024-04-18 00:22:30,338:INFO:SubProcess create_model() called ==================================
2024-04-18 00:22:30,339:INFO:Initializing create_model()
2024-04-18 00:22:30,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:22:30,340:INFO:Checking exceptions
2024-04-18 00:22:30,340:INFO:Importing libraries
2024-04-18 00:22:30,340:INFO:Copying training dataset
2024-04-18 00:22:30,417:INFO:Defining folds
2024-04-18 00:22:30,417:INFO:Declaring metric variables
2024-04-18 00:22:30,427:INFO:Importing untrained model
2024-04-18 00:22:30,437:INFO:CatBoost Regressor Imported successfully
2024-04-18 00:22:30,451:INFO:Starting cross validation
2024-04-18 00:22:30,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:23:22,771:INFO:Calculating mean and std
2024-04-18 00:23:22,772:INFO:Creating metrics dataframe
2024-04-18 00:23:22,774:INFO:Uploading results into container
2024-04-18 00:23:22,775:INFO:Uploading model into container now
2024-04-18 00:23:22,775:INFO:_master_model_container: 19
2024-04-18 00:23:22,776:INFO:_display_container: 2
2024-04-18 00:23:22,776:INFO:<catboost.core.CatBoostRegressor object at 0x0000024BF56C0FD0>
2024-04-18 00:23:22,776:INFO:create_model() successfully completed......................................
2024-04-18 00:23:23,271:INFO:SubProcess create_model() end ==================================
2024-04-18 00:23:23,271:INFO:Creating metrics dataframe
2024-04-18 00:23:23,284:INFO:Initializing Dummy Regressor
2024-04-18 00:23:23,285:INFO:Total runtime is 9.222974693775177 minutes
2024-04-18 00:23:23,291:INFO:SubProcess create_model() called ==================================
2024-04-18 00:23:23,292:INFO:Initializing create_model()
2024-04-18 00:23:23,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B8C300BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:23:23,292:INFO:Checking exceptions
2024-04-18 00:23:23,292:INFO:Importing libraries
2024-04-18 00:23:23,292:INFO:Copying training dataset
2024-04-18 00:23:23,366:INFO:Defining folds
2024-04-18 00:23:23,367:INFO:Declaring metric variables
2024-04-18 00:23:23,376:INFO:Importing untrained model
2024-04-18 00:23:23,384:INFO:Dummy Regressor Imported successfully
2024-04-18 00:23:23,396:INFO:Starting cross validation
2024-04-18 00:23:23,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:23:29,426:INFO:Calculating mean and std
2024-04-18 00:23:29,427:INFO:Creating metrics dataframe
2024-04-18 00:23:29,433:INFO:Uploading results into container
2024-04-18 00:23:29,435:INFO:Uploading model into container now
2024-04-18 00:23:29,436:INFO:_master_model_container: 20
2024-04-18 00:23:29,436:INFO:_display_container: 2
2024-04-18 00:23:29,436:INFO:DummyRegressor()
2024-04-18 00:23:29,436:INFO:create_model() successfully completed......................................
2024-04-18 00:23:29,948:INFO:SubProcess create_model() end ==================================
2024-04-18 00:23:29,948:INFO:Creating metrics dataframe
2024-04-18 00:23:29,980:INFO:Initializing create_model()
2024-04-18 00:23:29,980:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, estimator=<catboost.core.CatBoostRegressor object at 0x0000024BF56C0FD0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:23:29,980:INFO:Checking exceptions
2024-04-18 00:23:29,985:INFO:Importing libraries
2024-04-18 00:23:29,985:INFO:Copying training dataset
2024-04-18 00:23:30,065:INFO:Defining folds
2024-04-18 00:23:30,065:INFO:Declaring metric variables
2024-04-18 00:23:30,065:INFO:Importing untrained model
2024-04-18 00:23:30,065:INFO:Declaring custom model
2024-04-18 00:23:30,066:INFO:CatBoost Regressor Imported successfully
2024-04-18 00:23:30,068:INFO:Cross validation set to False
2024-04-18 00:23:30,069:INFO:Fitting Model
2024-04-18 00:23:38,417:INFO:<catboost.core.CatBoostRegressor object at 0x0000024B8E2E5CA0>
2024-04-18 00:23:38,417:INFO:create_model() successfully completed......................................
2024-04-18 00:23:38,958:INFO:_master_model_container: 20
2024-04-18 00:23:38,958:INFO:_display_container: 2
2024-04-18 00:23:38,958:INFO:<catboost.core.CatBoostRegressor object at 0x0000024B8E2E5CA0>
2024-04-18 00:23:38,959:INFO:compare_models() successfully completed......................................
2024-04-18 00:53:10,196:INFO:Initializing plot_model()
2024-04-18 00:53:10,196:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000024B8E2E5CA0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, system=True)
2024-04-18 00:53:10,196:INFO:Checking exceptions
2024-04-18 00:53:10,234:INFO:Preloading libraries
2024-04-18 00:53:10,237:INFO:Copying training dataset
2024-04-18 00:53:10,237:INFO:Plot type: feature
2024-04-18 00:53:10,239:WARNING:No coef_ found. Trying feature_importances_
2024-04-18 00:53:10,814:INFO:Visual Rendered Successfully
2024-04-18 00:53:11,316:INFO:plot_model() successfully completed......................................
2024-04-18 00:53:49,168:INFO:Initializing plot_model()
2024-04-18 00:53:49,168:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000024B8E2E5CA0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024B8C324B20>, system=True)
2024-04-18 00:53:49,168:INFO:Checking exceptions
2024-04-18 00:53:49,206:INFO:Preloading libraries
2024-04-18 00:53:49,209:INFO:Copying training dataset
2024-04-18 00:53:49,209:INFO:Plot type: feature
2024-04-18 00:53:49,209:WARNING:No coef_ found. Trying feature_importances_
2024-04-18 00:53:49,805:INFO:Visual Rendered Successfully
2024-04-18 00:53:50,611:INFO:plot_model() successfully completed......................................
2024-04-18 00:53:59,657:INFO:PyCaret RegressionExperiment
2024-04-18 00:53:59,657:INFO:Logging name: reg-default-name
2024-04-18 00:53:59,657:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-18 00:53:59,657:INFO:version 3.1.0
2024-04-18 00:53:59,657:INFO:Initializing setup()
2024-04-18 00:53:59,657:INFO:self.USI: c887
2024-04-18 00:53:59,657:INFO:self._variable_keys: {'y_train', 'X_test', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'html_param', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'n_jobs_param', 'y_test', 'USI', 'data', 'idx', 'gpu_param', 'transform_target_param', 'logging_param', 'memory', 'X_train', 'fold_shuffle_param', 'seed', 'target_param', 'log_plots_param', 'X', 'exp_id', '_ml_usecase', 'y'}
2024-04-18 00:53:59,657:INFO:Checking environment
2024-04-18 00:53:59,657:INFO:python_version: 3.9.17
2024-04-18 00:53:59,657:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-18 00:53:59,657:INFO:machine: AMD64
2024-04-18 00:53:59,657:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-18 00:53:59,663:INFO:Memory: svmem(total=8435355648, available=1284718592, percent=84.8, used=7150637056, free=1284718592)
2024-04-18 00:53:59,663:INFO:Physical Core: 2
2024-04-18 00:53:59,663:INFO:Logical Core: 4
2024-04-18 00:53:59,663:INFO:Checking libraries
2024-04-18 00:53:59,664:INFO:System:
2024-04-18 00:53:59,664:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-18 00:53:59,664:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-18 00:53:59,664:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-18 00:53:59,664:INFO:PyCaret required dependencies:
2024-04-18 00:53:59,665:INFO:                 pip: 23.2.1
2024-04-18 00:53:59,665:INFO:          setuptools: 68.0.0
2024-04-18 00:53:59,665:INFO:             pycaret: 3.1.0
2024-04-18 00:53:59,665:INFO:             IPython: 8.14.0
2024-04-18 00:53:59,665:INFO:          ipywidgets: 8.1.0
2024-04-18 00:53:59,665:INFO:                tqdm: 4.66.1
2024-04-18 00:53:59,665:INFO:               numpy: 1.23.5
2024-04-18 00:53:59,665:INFO:              pandas: 1.5.3
2024-04-18 00:53:59,665:INFO:              jinja2: 3.1.2
2024-04-18 00:53:59,665:INFO:               scipy: 1.10.1
2024-04-18 00:53:59,665:INFO:              joblib: 1.3.2
2024-04-18 00:53:59,665:INFO:             sklearn: 1.2.2
2024-04-18 00:53:59,665:INFO:                pyod: 1.1.0
2024-04-18 00:53:59,665:INFO:            imblearn: 0.11.0
2024-04-18 00:53:59,665:INFO:   category_encoders: 2.6.2
2024-04-18 00:53:59,665:INFO:            lightgbm: 4.0.0
2024-04-18 00:53:59,665:INFO:               numba: 0.58.0
2024-04-18 00:53:59,666:INFO:            requests: 2.31.0
2024-04-18 00:53:59,666:INFO:          matplotlib: 3.3.4
2024-04-18 00:53:59,666:INFO:          scikitplot: 0.3.7
2024-04-18 00:53:59,666:INFO:         yellowbrick: 1.5
2024-04-18 00:53:59,666:INFO:              plotly: 5.17.0
2024-04-18 00:53:59,666:INFO:    plotly-resampler: Not installed
2024-04-18 00:53:59,666:INFO:             kaleido: 0.2.1
2024-04-18 00:53:59,666:INFO:           schemdraw: 0.15
2024-04-18 00:53:59,666:INFO:         statsmodels: 0.13.2
2024-04-18 00:53:59,666:INFO:              sktime: 0.21.1
2024-04-18 00:53:59,666:INFO:               tbats: 1.1.3
2024-04-18 00:53:59,666:INFO:            pmdarima: 2.0.3
2024-04-18 00:53:59,666:INFO:              psutil: 5.9.5
2024-04-18 00:53:59,666:INFO:          markupsafe: 2.1.3
2024-04-18 00:53:59,666:INFO:             pickle5: Not installed
2024-04-18 00:53:59,666:INFO:         cloudpickle: 2.2.1
2024-04-18 00:53:59,666:INFO:         deprecation: 2.1.0
2024-04-18 00:53:59,666:INFO:              xxhash: 3.4.1
2024-04-18 00:53:59,666:INFO:           wurlitzer: Not installed
2024-04-18 00:53:59,666:INFO:PyCaret optional dependencies:
2024-04-18 00:53:59,666:INFO:                shap: 0.44.1
2024-04-18 00:53:59,667:INFO:           interpret: Not installed
2024-04-18 00:53:59,667:INFO:                umap: Not installed
2024-04-18 00:53:59,667:INFO:     ydata_profiling: 4.5.1
2024-04-18 00:53:59,667:INFO:  explainerdashboard: Not installed
2024-04-18 00:53:59,667:INFO:             autoviz: Not installed
2024-04-18 00:53:59,667:INFO:           fairlearn: Not installed
2024-04-18 00:53:59,667:INFO:          deepchecks: Not installed
2024-04-18 00:53:59,667:INFO:             xgboost: 2.0.3
2024-04-18 00:53:59,667:INFO:            catboost: 1.2
2024-04-18 00:53:59,667:INFO:              kmodes: Not installed
2024-04-18 00:53:59,667:INFO:             mlxtend: Not installed
2024-04-18 00:53:59,667:INFO:       statsforecast: Not installed
2024-04-18 00:53:59,667:INFO:        tune_sklearn: Not installed
2024-04-18 00:53:59,667:INFO:                 ray: Not installed
2024-04-18 00:53:59,667:INFO:            hyperopt: Not installed
2024-04-18 00:53:59,667:INFO:              optuna: 3.3.0
2024-04-18 00:53:59,667:INFO:               skopt: Not installed
2024-04-18 00:53:59,667:INFO:              mlflow: Not installed
2024-04-18 00:53:59,667:INFO:              gradio: Not installed
2024-04-18 00:53:59,667:INFO:             fastapi: Not installed
2024-04-18 00:53:59,667:INFO:             uvicorn: Not installed
2024-04-18 00:53:59,668:INFO:              m2cgen: Not installed
2024-04-18 00:53:59,668:INFO:           evidently: Not installed
2024-04-18 00:53:59,668:INFO:               fugue: Not installed
2024-04-18 00:53:59,668:INFO:           streamlit: 1.25.0
2024-04-18 00:53:59,668:INFO:             prophet: Not installed
2024-04-18 00:53:59,668:INFO:None
2024-04-18 00:53:59,668:INFO:Set up data.
2024-04-18 00:53:59,763:INFO:Set up folding strategy.
2024-04-18 00:53:59,763:INFO:Set up train/test split.
2024-04-18 00:53:59,775:INFO:Set up index.
2024-04-18 00:53:59,783:INFO:Assigning column types.
2024-04-18 00:53:59,788:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 00:53:59,788:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,794:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,939:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:53:59,943:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:53:59,944:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,949:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:53:59,954:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,048:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,097:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,098:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:00,100:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:00,101:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-18 00:54:00,105:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,111:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,250:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:00,254:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:00,260:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,264:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,387:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,474:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:00,478:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:00,479:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-18 00:54:00,490:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,633:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:00,636:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:00,647:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,798:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:00,799:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:00,835:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:00,836:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-18 00:54:00,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:01,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:01,028:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:01,030:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:01,186:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:01,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:54:01,239:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:01,244:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:01,244:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 00:54:01,346:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:01,396:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:01,398:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:01,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:54:01,546:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:01,548:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:01,549:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-18 00:54:01,750:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:01,753:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:01,915:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:01,918:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:01,919:INFO:Preparing preprocessing pipeline...
2024-04-18 00:54:01,919:INFO:Set up simple imputation.
2024-04-18 00:54:01,919:INFO:Set up grouping of rare categories.
2024-04-18 00:54:01,960:INFO:Set up encoding of categorical features.
2024-04-18 00:54:04,919:INFO:Finished creating preprocessing pipeline.
2024-04-18 00:54:04,947:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'engine', 'model_year',
                                             'plant_code'],
                                    transformer=OneHotEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['model'],
                                    transformer=TargetEncoder(cols=['model'],
                                                              handle_missing='return_nan')))])
2024-04-18 00:54:04,947:INFO:Creating final display dataframe.
2024-04-18 00:54:08,043:INFO:Setup _display_container:                     Description             Value
0                    Session id            100500
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 7)
4        Transformed data shape      (57507, 116)
5   Transformed train set shape      (46005, 116)
6    Transformed test set shape      (11502, 116)
7          Categorical features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding               200
13              Encoding method              None
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              c887
2024-04-18 00:54:08,216:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:08,219:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:08,365:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:54:08,368:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:54:08,369:INFO:setup() successfully completed in 9.03s...............
2024-04-18 00:55:55,451:INFO:PyCaret RegressionExperiment
2024-04-18 00:55:55,451:INFO:Logging name: reg-default-name
2024-04-18 00:55:55,451:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-18 00:55:55,451:INFO:version 3.1.0
2024-04-18 00:55:55,451:INFO:Initializing setup()
2024-04-18 00:55:55,451:INFO:self.USI: 9704
2024-04-18 00:55:55,451:INFO:self._variable_keys: {'y_train', 'X_test', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'html_param', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'n_jobs_param', 'y_test', 'USI', 'data', 'idx', 'gpu_param', 'transform_target_param', 'logging_param', 'memory', 'X_train', 'fold_shuffle_param', 'seed', 'target_param', 'log_plots_param', 'X', 'exp_id', '_ml_usecase', 'y'}
2024-04-18 00:55:55,451:INFO:Checking environment
2024-04-18 00:55:55,451:INFO:python_version: 3.9.17
2024-04-18 00:55:55,451:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-18 00:55:55,451:INFO:machine: AMD64
2024-04-18 00:55:55,451:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-18 00:55:55,454:INFO:Memory: svmem(total=8435355648, available=1161646080, percent=86.2, used=7273709568, free=1161646080)
2024-04-18 00:55:55,454:INFO:Physical Core: 2
2024-04-18 00:55:55,454:INFO:Logical Core: 4
2024-04-18 00:55:55,454:INFO:Checking libraries
2024-04-18 00:55:55,454:INFO:System:
2024-04-18 00:55:55,454:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-18 00:55:55,454:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-18 00:55:55,454:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-18 00:55:55,454:INFO:PyCaret required dependencies:
2024-04-18 00:55:55,455:INFO:                 pip: 23.2.1
2024-04-18 00:55:55,455:INFO:          setuptools: 68.0.0
2024-04-18 00:55:55,455:INFO:             pycaret: 3.1.0
2024-04-18 00:55:55,455:INFO:             IPython: 8.14.0
2024-04-18 00:55:55,455:INFO:          ipywidgets: 8.1.0
2024-04-18 00:55:55,455:INFO:                tqdm: 4.66.1
2024-04-18 00:55:55,455:INFO:               numpy: 1.23.5
2024-04-18 00:55:55,455:INFO:              pandas: 1.5.3
2024-04-18 00:55:55,455:INFO:              jinja2: 3.1.2
2024-04-18 00:55:55,455:INFO:               scipy: 1.10.1
2024-04-18 00:55:55,455:INFO:              joblib: 1.3.2
2024-04-18 00:55:55,455:INFO:             sklearn: 1.2.2
2024-04-18 00:55:55,455:INFO:                pyod: 1.1.0
2024-04-18 00:55:55,455:INFO:            imblearn: 0.11.0
2024-04-18 00:55:55,455:INFO:   category_encoders: 2.6.2
2024-04-18 00:55:55,455:INFO:            lightgbm: 4.0.0
2024-04-18 00:55:55,455:INFO:               numba: 0.58.0
2024-04-18 00:55:55,455:INFO:            requests: 2.31.0
2024-04-18 00:55:55,455:INFO:          matplotlib: 3.3.4
2024-04-18 00:55:55,456:INFO:          scikitplot: 0.3.7
2024-04-18 00:55:55,460:INFO:         yellowbrick: 1.5
2024-04-18 00:55:55,460:INFO:              plotly: 5.17.0
2024-04-18 00:55:55,460:INFO:    plotly-resampler: Not installed
2024-04-18 00:55:55,460:INFO:             kaleido: 0.2.1
2024-04-18 00:55:55,461:INFO:           schemdraw: 0.15
2024-04-18 00:55:55,461:INFO:         statsmodels: 0.13.2
2024-04-18 00:55:55,461:INFO:              sktime: 0.21.1
2024-04-18 00:55:55,461:INFO:               tbats: 1.1.3
2024-04-18 00:55:55,461:INFO:            pmdarima: 2.0.3
2024-04-18 00:55:55,461:INFO:              psutil: 5.9.5
2024-04-18 00:55:55,461:INFO:          markupsafe: 2.1.3
2024-04-18 00:55:55,461:INFO:             pickle5: Not installed
2024-04-18 00:55:55,461:INFO:         cloudpickle: 2.2.1
2024-04-18 00:55:55,461:INFO:         deprecation: 2.1.0
2024-04-18 00:55:55,461:INFO:              xxhash: 3.4.1
2024-04-18 00:55:55,461:INFO:           wurlitzer: Not installed
2024-04-18 00:55:55,461:INFO:PyCaret optional dependencies:
2024-04-18 00:55:55,461:INFO:                shap: 0.44.1
2024-04-18 00:55:55,461:INFO:           interpret: Not installed
2024-04-18 00:55:55,461:INFO:                umap: Not installed
2024-04-18 00:55:55,461:INFO:     ydata_profiling: 4.5.1
2024-04-18 00:55:55,462:INFO:  explainerdashboard: Not installed
2024-04-18 00:55:55,462:INFO:             autoviz: Not installed
2024-04-18 00:55:55,462:INFO:           fairlearn: Not installed
2024-04-18 00:55:55,462:INFO:          deepchecks: Not installed
2024-04-18 00:55:55,462:INFO:             xgboost: 2.0.3
2024-04-18 00:55:55,462:INFO:            catboost: 1.2
2024-04-18 00:55:55,462:INFO:              kmodes: Not installed
2024-04-18 00:55:55,462:INFO:             mlxtend: Not installed
2024-04-18 00:55:55,462:INFO:       statsforecast: Not installed
2024-04-18 00:55:55,462:INFO:        tune_sklearn: Not installed
2024-04-18 00:55:55,462:INFO:                 ray: Not installed
2024-04-18 00:55:55,462:INFO:            hyperopt: Not installed
2024-04-18 00:55:55,462:INFO:              optuna: 3.3.0
2024-04-18 00:55:55,463:INFO:               skopt: Not installed
2024-04-18 00:55:55,463:INFO:              mlflow: Not installed
2024-04-18 00:55:55,463:INFO:              gradio: Not installed
2024-04-18 00:55:55,463:INFO:             fastapi: Not installed
2024-04-18 00:55:55,463:INFO:             uvicorn: Not installed
2024-04-18 00:55:55,463:INFO:              m2cgen: Not installed
2024-04-18 00:55:55,463:INFO:           evidently: Not installed
2024-04-18 00:55:55,463:INFO:               fugue: Not installed
2024-04-18 00:55:55,463:INFO:           streamlit: 1.25.0
2024-04-18 00:55:55,463:INFO:             prophet: Not installed
2024-04-18 00:55:55,463:INFO:None
2024-04-18 00:55:55,463:INFO:Set up data.
2024-04-18 00:55:55,585:INFO:Set up folding strategy.
2024-04-18 00:55:55,585:INFO:Set up train/test split.
2024-04-18 00:55:55,600:INFO:Set up index.
2024-04-18 00:55:55,609:INFO:Assigning column types.
2024-04-18 00:55:55,614:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 00:55:55,614:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,619:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,624:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,796:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:55,799:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:55,799:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,804:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,814:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,983:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,983:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:55,986:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:55,987:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-18 00:55:55,993:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:55:55,998:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,096:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,144:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:56,146:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:56,151:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,157:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,412:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:56,416:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:56,417:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-18 00:55:56,459:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,636:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,694:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,695:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:56,697:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:56,709:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:56,881:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:56,884:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:56,884:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-18 00:55:57,003:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:57,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:57,054:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:57,058:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:57,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:57,210:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 00:55:57,211:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:57,213:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:57,214:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 00:55:57,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:57,364:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:57,367:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:57,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 00:55:57,564:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:57,568:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:57,569:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-18 00:55:57,761:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:57,764:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:57,926:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:55:57,929:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:55:57,931:INFO:Preparing preprocessing pipeline...
2024-04-18 00:55:57,931:INFO:Set up simple imputation.
2024-04-18 00:55:57,931:INFO:Set up grouping of rare categories.
2024-04-18 00:55:57,969:INFO:Set up encoding of categorical features.
2024-04-18 00:56:00,241:INFO:Finished creating preprocessing pipeline.
2024-04-18 00:56:00,249:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                                             'plant_code'],
                                    transformer=RareCategoryGrouping(rare_to_value=0.0001))),
                ('onehot_encoding',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=OneHotEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-04-18 00:56:00,249:INFO:Creating final display dataframe.
2024-04-18 00:56:06,407:INFO:Setup _display_container:                     Description             Value
0                    Session id            100500
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 7)
4        Transformed data shape      (57507, 410)
5   Transformed train set shape      (46005, 410)
6    Transformed test set shape      (11502, 410)
7          Categorical features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding               300
13              Encoding method              None
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              9704
2024-04-18 00:56:06,673:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:56:06,675:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:56:06,823:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 00:56:06,825:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 00:56:06,826:INFO:setup() successfully completed in 11.81s...............
2024-04-18 00:56:17,724:INFO:Initializing compare_models()
2024-04-18 00:56:17,725:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, include=['dummy', 'lightgbm', 'xgboost', 'catboost', 'et', 'rf'], fold=None, round=4, cross_validation=True, sort=MAPE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, 'include': ['dummy', 'lightgbm', 'xgboost', 'catboost', 'et', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-18 00:56:17,725:INFO:Checking exceptions
2024-04-18 00:56:17,752:INFO:Preparing display monitor
2024-04-18 00:56:17,785:INFO:Initializing Dummy Regressor
2024-04-18 00:56:17,785:INFO:Total runtime is 0.0 minutes
2024-04-18 00:56:17,790:INFO:SubProcess create_model() called ==================================
2024-04-18 00:56:17,790:INFO:Initializing create_model()
2024-04-18 00:56:17,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B4250>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:56:17,791:INFO:Checking exceptions
2024-04-18 00:56:17,791:INFO:Importing libraries
2024-04-18 00:56:17,791:INFO:Copying training dataset
2024-04-18 00:56:17,871:INFO:Defining folds
2024-04-18 00:56:17,872:INFO:Declaring metric variables
2024-04-18 00:56:17,878:INFO:Importing untrained model
2024-04-18 00:56:17,886:INFO:Dummy Regressor Imported successfully
2024-04-18 00:56:17,906:INFO:Starting cross validation
2024-04-18 00:56:17,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:56:39,768:INFO:Calculating mean and std
2024-04-18 00:56:39,772:INFO:Creating metrics dataframe
2024-04-18 00:56:39,787:INFO:Uploading results into container
2024-04-18 00:56:39,790:INFO:Uploading model into container now
2024-04-18 00:56:39,792:INFO:_master_model_container: 1
2024-04-18 00:56:39,792:INFO:_display_container: 2
2024-04-18 00:56:39,792:INFO:DummyRegressor()
2024-04-18 00:56:39,792:INFO:create_model() successfully completed......................................
2024-04-18 00:56:40,944:INFO:SubProcess create_model() end ==================================
2024-04-18 00:56:40,944:INFO:Creating metrics dataframe
2024-04-18 00:56:40,953:INFO:Initializing Light Gradient Boosting Machine
2024-04-18 00:56:40,953:INFO:Total runtime is 0.38612420558929444 minutes
2024-04-18 00:56:40,958:INFO:SubProcess create_model() called ==================================
2024-04-18 00:56:40,959:INFO:Initializing create_model()
2024-04-18 00:56:40,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B4250>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:56:40,959:INFO:Checking exceptions
2024-04-18 00:56:40,959:INFO:Importing libraries
2024-04-18 00:56:40,959:INFO:Copying training dataset
2024-04-18 00:56:41,026:INFO:Defining folds
2024-04-18 00:56:41,026:INFO:Declaring metric variables
2024-04-18 00:56:41,033:INFO:Importing untrained model
2024-04-18 00:56:41,043:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-18 00:56:41,055:INFO:Starting cross validation
2024-04-18 00:56:41,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:56:58,359:INFO:Calculating mean and std
2024-04-18 00:56:58,361:INFO:Creating metrics dataframe
2024-04-18 00:56:58,364:INFO:Uploading results into container
2024-04-18 00:56:58,365:INFO:Uploading model into container now
2024-04-18 00:56:58,365:INFO:_master_model_container: 2
2024-04-18 00:56:58,365:INFO:_display_container: 2
2024-04-18 00:56:58,366:INFO:LGBMRegressor(n_jobs=-1, random_state=100500)
2024-04-18 00:56:58,366:INFO:create_model() successfully completed......................................
2024-04-18 00:56:59,012:INFO:SubProcess create_model() end ==================================
2024-04-18 00:56:59,013:INFO:Creating metrics dataframe
2024-04-18 00:56:59,022:INFO:Initializing Extreme Gradient Boosting
2024-04-18 00:56:59,022:INFO:Total runtime is 0.6872787038485209 minutes
2024-04-18 00:56:59,026:INFO:SubProcess create_model() called ==================================
2024-04-18 00:56:59,027:INFO:Initializing create_model()
2024-04-18 00:56:59,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B4250>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:56:59,027:INFO:Checking exceptions
2024-04-18 00:56:59,028:INFO:Importing libraries
2024-04-18 00:56:59,028:INFO:Copying training dataset
2024-04-18 00:56:59,093:INFO:Defining folds
2024-04-18 00:56:59,094:INFO:Declaring metric variables
2024-04-18 00:56:59,103:INFO:Importing untrained model
2024-04-18 00:56:59,109:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 00:56:59,121:INFO:Starting cross validation
2024-04-18 00:56:59,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:57:33,883:INFO:Calculating mean and std
2024-04-18 00:57:33,885:INFO:Creating metrics dataframe
2024-04-18 00:57:33,892:INFO:Uploading results into container
2024-04-18 00:57:33,894:INFO:Uploading model into container now
2024-04-18 00:57:33,895:INFO:_master_model_container: 3
2024-04-18 00:57:33,896:INFO:_display_container: 2
2024-04-18 00:57:33,897:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 00:57:33,897:INFO:create_model() successfully completed......................................
2024-04-18 00:57:34,521:INFO:SubProcess create_model() end ==================================
2024-04-18 00:57:34,521:INFO:Creating metrics dataframe
2024-04-18 00:57:34,530:INFO:Initializing CatBoost Regressor
2024-04-18 00:57:34,531:INFO:Total runtime is 1.279095506668091 minutes
2024-04-18 00:57:34,537:INFO:SubProcess create_model() called ==================================
2024-04-18 00:57:34,538:INFO:Initializing create_model()
2024-04-18 00:57:34,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B4250>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:57:34,539:INFO:Checking exceptions
2024-04-18 00:57:34,539:INFO:Importing libraries
2024-04-18 00:57:34,539:INFO:Copying training dataset
2024-04-18 00:57:34,609:INFO:Defining folds
2024-04-18 00:57:34,609:INFO:Declaring metric variables
2024-04-18 00:57:34,616:INFO:Importing untrained model
2024-04-18 00:57:34,622:INFO:CatBoost Regressor Imported successfully
2024-04-18 00:57:34,640:INFO:Starting cross validation
2024-04-18 00:57:34,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 00:58:42,545:INFO:Calculating mean and std
2024-04-18 00:58:42,547:INFO:Creating metrics dataframe
2024-04-18 00:58:42,552:INFO:Uploading results into container
2024-04-18 00:58:42,553:INFO:Uploading model into container now
2024-04-18 00:58:42,555:INFO:_master_model_container: 4
2024-04-18 00:58:42,556:INFO:_display_container: 2
2024-04-18 00:58:42,556:INFO:<catboost.core.CatBoostRegressor object at 0x0000024BFFE54790>
2024-04-18 00:58:42,557:INFO:create_model() successfully completed......................................
2024-04-18 00:58:43,254:INFO:SubProcess create_model() end ==================================
2024-04-18 00:58:43,255:INFO:Creating metrics dataframe
2024-04-18 00:58:43,265:INFO:Initializing Extra Trees Regressor
2024-04-18 00:58:43,265:INFO:Total runtime is 2.4246684273084007 minutes
2024-04-18 00:58:43,270:INFO:SubProcess create_model() called ==================================
2024-04-18 00:58:43,271:INFO:Initializing create_model()
2024-04-18 00:58:43,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B4250>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 00:58:43,271:INFO:Checking exceptions
2024-04-18 00:58:43,271:INFO:Importing libraries
2024-04-18 00:58:43,271:INFO:Copying training dataset
2024-04-18 00:58:43,363:INFO:Defining folds
2024-04-18 00:58:43,363:INFO:Declaring metric variables
2024-04-18 00:58:43,370:INFO:Importing untrained model
2024-04-18 00:58:43,379:INFO:Extra Trees Regressor Imported successfully
2024-04-18 00:58:43,390:INFO:Starting cross validation
2024-04-18 00:58:43,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:07:36,155:INFO:Calculating mean and std
2024-04-18 01:07:36,159:INFO:Creating metrics dataframe
2024-04-18 01:07:36,166:INFO:Uploading results into container
2024-04-18 01:07:36,168:INFO:Uploading model into container now
2024-04-18 01:07:36,169:INFO:_master_model_container: 5
2024-04-18 01:07:36,170:INFO:_display_container: 2
2024-04-18 01:07:36,170:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:07:36,172:INFO:create_model() successfully completed......................................
2024-04-18 01:07:36,880:INFO:SubProcess create_model() end ==================================
2024-04-18 01:07:36,881:INFO:Creating metrics dataframe
2024-04-18 01:07:36,891:INFO:Initializing Random Forest Regressor
2024-04-18 01:07:36,891:INFO:Total runtime is 11.318424312273661 minutes
2024-04-18 01:07:36,898:INFO:SubProcess create_model() called ==================================
2024-04-18 01:07:36,898:INFO:Initializing create_model()
2024-04-18 01:07:36,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BFA5B4250>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:07:36,899:INFO:Checking exceptions
2024-04-18 01:07:36,899:INFO:Importing libraries
2024-04-18 01:07:36,899:INFO:Copying training dataset
2024-04-18 01:07:37,015:INFO:Defining folds
2024-04-18 01:07:37,015:INFO:Declaring metric variables
2024-04-18 01:07:37,022:INFO:Importing untrained model
2024-04-18 01:07:37,034:INFO:Random Forest Regressor Imported successfully
2024-04-18 01:07:37,046:INFO:Starting cross validation
2024-04-18 01:07:37,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:13:44,506:INFO:Calculating mean and std
2024-04-18 01:13:44,508:INFO:Creating metrics dataframe
2024-04-18 01:13:44,513:INFO:Uploading results into container
2024-04-18 01:13:44,514:INFO:Uploading model into container now
2024-04-18 01:13:44,516:INFO:_master_model_container: 6
2024-04-18 01:13:44,516:INFO:_display_container: 2
2024-04-18 01:13:44,517:INFO:RandomForestRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:13:44,518:INFO:create_model() successfully completed......................................
2024-04-18 01:13:45,359:INFO:SubProcess create_model() end ==================================
2024-04-18 01:13:45,359:INFO:Creating metrics dataframe
2024-04-18 01:13:45,417:INFO:Initializing create_model()
2024-04-18 01:13:45,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=100500), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:13:45,418:INFO:Checking exceptions
2024-04-18 01:13:45,426:INFO:Importing libraries
2024-04-18 01:13:45,426:INFO:Copying training dataset
2024-04-18 01:13:45,524:INFO:Defining folds
2024-04-18 01:13:45,524:INFO:Declaring metric variables
2024-04-18 01:13:45,524:INFO:Importing untrained model
2024-04-18 01:13:45,524:INFO:Declaring custom model
2024-04-18 01:13:45,526:INFO:Random Forest Regressor Imported successfully
2024-04-18 01:13:45,536:INFO:Cross validation set to False
2024-04-18 01:13:45,536:INFO:Fitting Model
2024-04-18 01:14:30,020:INFO:RandomForestRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:14:30,020:INFO:create_model() successfully completed......................................
2024-04-18 01:14:30,656:INFO:_master_model_container: 6
2024-04-18 01:14:30,656:INFO:_display_container: 2
2024-04-18 01:14:30,657:INFO:RandomForestRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:14:30,657:INFO:compare_models() successfully completed......................................
2024-04-18 01:14:31,729:INFO:PyCaret RegressionExperiment
2024-04-18 01:14:31,729:INFO:Logging name: reg-default-name
2024-04-18 01:14:31,729:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-18 01:14:31,729:INFO:version 3.1.0
2024-04-18 01:14:31,729:INFO:Initializing setup()
2024-04-18 01:14:31,729:INFO:self.USI: 5819
2024-04-18 01:14:31,729:INFO:self._variable_keys: {'y_train', 'X_test', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'html_param', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'n_jobs_param', 'y_test', 'USI', 'data', 'idx', 'gpu_param', 'transform_target_param', 'logging_param', 'memory', 'X_train', 'fold_shuffle_param', 'seed', 'target_param', 'log_plots_param', 'X', 'exp_id', '_ml_usecase', 'y'}
2024-04-18 01:14:31,729:INFO:Checking environment
2024-04-18 01:14:31,730:INFO:python_version: 3.9.17
2024-04-18 01:14:31,730:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-18 01:14:31,730:INFO:machine: AMD64
2024-04-18 01:14:31,730:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-18 01:14:31,739:INFO:Memory: svmem(total=8435355648, available=2865963008, percent=66.0, used=5569392640, free=2865963008)
2024-04-18 01:14:31,740:INFO:Physical Core: 2
2024-04-18 01:14:31,740:INFO:Logical Core: 4
2024-04-18 01:14:31,740:INFO:Checking libraries
2024-04-18 01:14:31,740:INFO:System:
2024-04-18 01:14:31,740:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-18 01:14:31,740:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-18 01:14:31,740:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-18 01:14:31,740:INFO:PyCaret required dependencies:
2024-04-18 01:14:31,740:INFO:                 pip: 23.2.1
2024-04-18 01:14:31,740:INFO:          setuptools: 68.0.0
2024-04-18 01:14:31,740:INFO:             pycaret: 3.1.0
2024-04-18 01:14:31,745:INFO:             IPython: 8.14.0
2024-04-18 01:14:31,751:INFO:          ipywidgets: 8.1.0
2024-04-18 01:14:31,751:INFO:                tqdm: 4.66.1
2024-04-18 01:14:31,752:INFO:               numpy: 1.23.5
2024-04-18 01:14:31,770:INFO:              pandas: 1.5.3
2024-04-18 01:14:31,771:INFO:              jinja2: 3.1.2
2024-04-18 01:14:31,772:INFO:               scipy: 1.10.1
2024-04-18 01:14:31,772:INFO:              joblib: 1.3.2
2024-04-18 01:14:31,773:INFO:             sklearn: 1.2.2
2024-04-18 01:14:31,773:INFO:                pyod: 1.1.0
2024-04-18 01:14:31,773:INFO:            imblearn: 0.11.0
2024-04-18 01:14:31,773:INFO:   category_encoders: 2.6.2
2024-04-18 01:14:31,773:INFO:            lightgbm: 4.0.0
2024-04-18 01:14:31,773:INFO:               numba: 0.58.0
2024-04-18 01:14:31,773:INFO:            requests: 2.31.0
2024-04-18 01:14:31,774:INFO:          matplotlib: 3.3.4
2024-04-18 01:14:31,774:INFO:          scikitplot: 0.3.7
2024-04-18 01:14:31,774:INFO:         yellowbrick: 1.5
2024-04-18 01:14:31,774:INFO:              plotly: 5.17.0
2024-04-18 01:14:31,774:INFO:    plotly-resampler: Not installed
2024-04-18 01:14:31,774:INFO:             kaleido: 0.2.1
2024-04-18 01:14:31,774:INFO:           schemdraw: 0.15
2024-04-18 01:14:31,774:INFO:         statsmodels: 0.13.2
2024-04-18 01:14:31,774:INFO:              sktime: 0.21.1
2024-04-18 01:14:31,774:INFO:               tbats: 1.1.3
2024-04-18 01:14:31,774:INFO:            pmdarima: 2.0.3
2024-04-18 01:14:31,774:INFO:              psutil: 5.9.5
2024-04-18 01:14:31,774:INFO:          markupsafe: 2.1.3
2024-04-18 01:14:31,775:INFO:             pickle5: Not installed
2024-04-18 01:14:31,782:INFO:         cloudpickle: 2.2.1
2024-04-18 01:14:31,783:INFO:         deprecation: 2.1.0
2024-04-18 01:14:31,784:INFO:              xxhash: 3.4.1
2024-04-18 01:14:31,785:INFO:           wurlitzer: Not installed
2024-04-18 01:14:31,786:INFO:PyCaret optional dependencies:
2024-04-18 01:14:31,786:INFO:                shap: 0.44.1
2024-04-18 01:14:31,786:INFO:           interpret: Not installed
2024-04-18 01:14:31,786:INFO:                umap: Not installed
2024-04-18 01:14:31,786:INFO:     ydata_profiling: 4.5.1
2024-04-18 01:14:31,786:INFO:  explainerdashboard: Not installed
2024-04-18 01:14:31,786:INFO:             autoviz: Not installed
2024-04-18 01:14:31,786:INFO:           fairlearn: Not installed
2024-04-18 01:14:31,786:INFO:          deepchecks: Not installed
2024-04-18 01:14:31,786:INFO:             xgboost: 2.0.3
2024-04-18 01:14:31,787:INFO:            catboost: 1.2
2024-04-18 01:14:31,787:INFO:              kmodes: Not installed
2024-04-18 01:14:31,787:INFO:             mlxtend: Not installed
2024-04-18 01:14:31,787:INFO:       statsforecast: Not installed
2024-04-18 01:14:31,787:INFO:        tune_sklearn: Not installed
2024-04-18 01:14:31,787:INFO:                 ray: Not installed
2024-04-18 01:14:31,787:INFO:            hyperopt: Not installed
2024-04-18 01:14:31,787:INFO:              optuna: 3.3.0
2024-04-18 01:14:31,787:INFO:               skopt: Not installed
2024-04-18 01:14:31,787:INFO:              mlflow: Not installed
2024-04-18 01:14:31,787:INFO:              gradio: Not installed
2024-04-18 01:14:31,787:INFO:             fastapi: Not installed
2024-04-18 01:14:31,787:INFO:             uvicorn: Not installed
2024-04-18 01:14:31,788:INFO:              m2cgen: Not installed
2024-04-18 01:14:31,788:INFO:           evidently: Not installed
2024-04-18 01:14:31,788:INFO:               fugue: Not installed
2024-04-18 01:14:31,788:INFO:           streamlit: 1.25.0
2024-04-18 01:14:31,788:INFO:             prophet: Not installed
2024-04-18 01:14:31,788:INFO:None
2024-04-18 01:14:31,788:INFO:Set up data.
2024-04-18 01:14:32,454:INFO:Set up folding strategy.
2024-04-18 01:14:32,455:INFO:Set up train/test split.
2024-04-18 01:14:32,473:INFO:Set up index.
2024-04-18 01:14:32,486:INFO:Assigning column types.
2024-04-18 01:14:32,496:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 01:14:32,496:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,501:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,506:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,656:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,656:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:32,661:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:32,662:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,666:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,837:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:32,841:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:32,843:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-18 01:14:32,848:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,853:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,948:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:32,997:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:33,000:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:33,005:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,011:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,158:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,160:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:33,162:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:33,163:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-18 01:14:33,172:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,271:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,320:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,320:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:33,323:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:33,335:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,484:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:33,487:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:33,488:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-18 01:14:33,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,644:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:33,648:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:33,756:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,821:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 01:14:33,823:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:33,830:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:33,831:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 01:14:34,013:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:34,067:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:34,069:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:34,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 01:14:34,231:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:34,233:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:34,234:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-18 01:14:34,405:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:34,410:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:34,570:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:34,572:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:34,577:INFO:Preparing preprocessing pipeline...
2024-04-18 01:14:34,577:INFO:Set up simple imputation.
2024-04-18 01:14:34,577:INFO:Set up grouping of rare categories.
2024-04-18 01:14:34,616:INFO:Set up encoding of categorical features.
2024-04-18 01:14:35,916:INFO:Finished creating preprocessing pipeline.
2024-04-18 01:14:35,927:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=RareCategoryGrouping(rare_to_value=0.0001))),
                ('rest_encoding',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=TargetEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan')))])
2024-04-18 01:14:35,927:INFO:Creating final display dataframe.
2024-04-18 01:14:38,756:INFO:Setup _display_container:                     Description             Value
0                    Session id            100500
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 7)
4        Transformed data shape        (57507, 7)
5   Transformed train set shape        (46005, 7)
6    Transformed test set shape        (11502, 7)
7          Categorical features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding                 3
13              Encoding method              None
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              5819
2024-04-18 01:14:38,964:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:38,966:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:39,142:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 01:14:39,144:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 01:14:39,146:INFO:setup() successfully completed in 8.19s...............
2024-04-18 01:14:39,146:INFO:Initializing compare_models()
2024-04-18 01:14:39,146:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, include=['dummy', 'lightgbm', 'xgboost', 'catboost', 'et', 'rf'], fold=None, round=4, cross_validation=True, sort=MAPE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, 'include': ['dummy', 'lightgbm', 'xgboost', 'catboost', 'et', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-18 01:14:39,146:INFO:Checking exceptions
2024-04-18 01:14:39,166:INFO:Preparing display monitor
2024-04-18 01:14:39,213:INFO:Initializing Dummy Regressor
2024-04-18 01:14:39,213:INFO:Total runtime is 0.0 minutes
2024-04-18 01:14:39,222:INFO:SubProcess create_model() called ==================================
2024-04-18 01:14:39,223:INFO:Initializing create_model()
2024-04-18 01:14:39,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BF9865BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:14:39,224:INFO:Checking exceptions
2024-04-18 01:14:39,224:INFO:Importing libraries
2024-04-18 01:14:39,224:INFO:Copying training dataset
2024-04-18 01:14:39,500:INFO:Defining folds
2024-04-18 01:14:39,500:INFO:Declaring metric variables
2024-04-18 01:14:39,508:INFO:Importing untrained model
2024-04-18 01:14:39,512:INFO:Dummy Regressor Imported successfully
2024-04-18 01:14:39,525:INFO:Starting cross validation
2024-04-18 01:14:39,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:14:43,026:INFO:Calculating mean and std
2024-04-18 01:14:43,027:INFO:Creating metrics dataframe
2024-04-18 01:14:43,029:INFO:Uploading results into container
2024-04-18 01:14:43,030:INFO:Uploading model into container now
2024-04-18 01:14:43,030:INFO:_master_model_container: 1
2024-04-18 01:14:43,031:INFO:_display_container: 2
2024-04-18 01:14:43,031:INFO:DummyRegressor()
2024-04-18 01:14:43,032:INFO:create_model() successfully completed......................................
2024-04-18 01:14:43,579:INFO:SubProcess create_model() end ==================================
2024-04-18 01:14:43,580:INFO:Creating metrics dataframe
2024-04-18 01:14:43,591:INFO:Initializing Light Gradient Boosting Machine
2024-04-18 01:14:43,591:INFO:Total runtime is 0.07297465801239014 minutes
2024-04-18 01:14:43,596:INFO:SubProcess create_model() called ==================================
2024-04-18 01:14:43,597:INFO:Initializing create_model()
2024-04-18 01:14:43,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BF9865BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:14:43,597:INFO:Checking exceptions
2024-04-18 01:14:43,597:INFO:Importing libraries
2024-04-18 01:14:43,597:INFO:Copying training dataset
2024-04-18 01:14:43,671:INFO:Defining folds
2024-04-18 01:14:43,671:INFO:Declaring metric variables
2024-04-18 01:14:43,680:INFO:Importing untrained model
2024-04-18 01:14:43,690:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-18 01:14:43,703:INFO:Starting cross validation
2024-04-18 01:14:43,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:14:48,924:INFO:Calculating mean and std
2024-04-18 01:14:48,926:INFO:Creating metrics dataframe
2024-04-18 01:14:48,930:INFO:Uploading results into container
2024-04-18 01:14:48,931:INFO:Uploading model into container now
2024-04-18 01:14:48,934:INFO:_master_model_container: 2
2024-04-18 01:14:48,935:INFO:_display_container: 2
2024-04-18 01:14:48,937:INFO:LGBMRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:14:48,937:INFO:create_model() successfully completed......................................
2024-04-18 01:14:49,556:INFO:SubProcess create_model() end ==================================
2024-04-18 01:14:49,556:INFO:Creating metrics dataframe
2024-04-18 01:14:49,572:INFO:Initializing Extreme Gradient Boosting
2024-04-18 01:14:49,572:INFO:Total runtime is 0.17265186309814454 minutes
2024-04-18 01:14:49,579:INFO:SubProcess create_model() called ==================================
2024-04-18 01:14:49,580:INFO:Initializing create_model()
2024-04-18 01:14:49,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BF9865BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:14:49,580:INFO:Checking exceptions
2024-04-18 01:14:49,580:INFO:Importing libraries
2024-04-18 01:14:49,580:INFO:Copying training dataset
2024-04-18 01:14:49,689:INFO:Defining folds
2024-04-18 01:14:49,689:INFO:Declaring metric variables
2024-04-18 01:14:49,698:INFO:Importing untrained model
2024-04-18 01:14:49,705:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 01:14:49,717:INFO:Starting cross validation
2024-04-18 01:14:49,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:14:54,875:INFO:Calculating mean and std
2024-04-18 01:14:54,876:INFO:Creating metrics dataframe
2024-04-18 01:14:54,882:INFO:Uploading results into container
2024-04-18 01:14:54,883:INFO:Uploading model into container now
2024-04-18 01:14:54,884:INFO:_master_model_container: 3
2024-04-18 01:14:54,884:INFO:_display_container: 2
2024-04-18 01:14:54,886:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 01:14:54,886:INFO:create_model() successfully completed......................................
2024-04-18 01:14:55,587:INFO:SubProcess create_model() end ==================================
2024-04-18 01:14:55,588:INFO:Creating metrics dataframe
2024-04-18 01:14:55,598:INFO:Initializing CatBoost Regressor
2024-04-18 01:14:55,598:INFO:Total runtime is 0.2730915109316508 minutes
2024-04-18 01:14:55,603:INFO:SubProcess create_model() called ==================================
2024-04-18 01:14:55,604:INFO:Initializing create_model()
2024-04-18 01:14:55,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BF9865BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:14:55,605:INFO:Checking exceptions
2024-04-18 01:14:55,606:INFO:Importing libraries
2024-04-18 01:14:55,607:INFO:Copying training dataset
2024-04-18 01:14:55,709:INFO:Defining folds
2024-04-18 01:14:55,710:INFO:Declaring metric variables
2024-04-18 01:14:55,718:INFO:Importing untrained model
2024-04-18 01:14:55,727:INFO:CatBoost Regressor Imported successfully
2024-04-18 01:14:55,738:INFO:Starting cross validation
2024-04-18 01:14:55,742:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:15:46,884:INFO:Calculating mean and std
2024-04-18 01:15:46,886:INFO:Creating metrics dataframe
2024-04-18 01:15:46,890:INFO:Uploading results into container
2024-04-18 01:15:46,891:INFO:Uploading model into container now
2024-04-18 01:15:46,891:INFO:_master_model_container: 4
2024-04-18 01:15:46,892:INFO:_display_container: 2
2024-04-18 01:15:46,892:INFO:<catboost.core.CatBoostRegressor object at 0x0000024BF5894E50>
2024-04-18 01:15:46,892:INFO:create_model() successfully completed......................................
2024-04-18 01:15:47,475:INFO:SubProcess create_model() end ==================================
2024-04-18 01:15:47,475:INFO:Creating metrics dataframe
2024-04-18 01:15:47,487:INFO:Initializing Extra Trees Regressor
2024-04-18 01:15:47,487:INFO:Total runtime is 1.137912929058075 minutes
2024-04-18 01:15:47,496:INFO:SubProcess create_model() called ==================================
2024-04-18 01:15:47,496:INFO:Initializing create_model()
2024-04-18 01:15:47,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BF9865BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:15:47,497:INFO:Checking exceptions
2024-04-18 01:15:47,497:INFO:Importing libraries
2024-04-18 01:15:47,497:INFO:Copying training dataset
2024-04-18 01:15:47,569:INFO:Defining folds
2024-04-18 01:15:47,569:INFO:Declaring metric variables
2024-04-18 01:15:47,574:INFO:Importing untrained model
2024-04-18 01:15:47,584:INFO:Extra Trees Regressor Imported successfully
2024-04-18 01:15:47,615:INFO:Starting cross validation
2024-04-18 01:15:47,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:16:04,014:INFO:Calculating mean and std
2024-04-18 01:16:04,015:INFO:Creating metrics dataframe
2024-04-18 01:16:04,018:INFO:Uploading results into container
2024-04-18 01:16:04,018:INFO:Uploading model into container now
2024-04-18 01:16:04,019:INFO:_master_model_container: 5
2024-04-18 01:16:04,019:INFO:_display_container: 2
2024-04-18 01:16:04,020:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:16:04,020:INFO:create_model() successfully completed......................................
2024-04-18 01:16:04,510:INFO:SubProcess create_model() end ==================================
2024-04-18 01:16:04,511:INFO:Creating metrics dataframe
2024-04-18 01:16:04,521:INFO:Initializing Random Forest Regressor
2024-04-18 01:16:04,521:INFO:Total runtime is 1.4218016783396403 minutes
2024-04-18 01:16:04,526:INFO:SubProcess create_model() called ==================================
2024-04-18 01:16:04,527:INFO:Initializing create_model()
2024-04-18 01:16:04,527:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BF9865BE0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:16:04,527:INFO:Checking exceptions
2024-04-18 01:16:04,528:INFO:Importing libraries
2024-04-18 01:16:04,529:INFO:Copying training dataset
2024-04-18 01:16:04,599:INFO:Defining folds
2024-04-18 01:16:04,600:INFO:Declaring metric variables
2024-04-18 01:16:04,604:INFO:Importing untrained model
2024-04-18 01:16:04,614:INFO:Random Forest Regressor Imported successfully
2024-04-18 01:16:04,625:INFO:Starting cross validation
2024-04-18 01:16:04,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 01:16:26,347:INFO:Calculating mean and std
2024-04-18 01:16:26,350:INFO:Creating metrics dataframe
2024-04-18 01:16:26,354:INFO:Uploading results into container
2024-04-18 01:16:26,354:INFO:Uploading model into container now
2024-04-18 01:16:26,355:INFO:_master_model_container: 6
2024-04-18 01:16:26,355:INFO:_display_container: 2
2024-04-18 01:16:26,356:INFO:RandomForestRegressor(n_jobs=-1, random_state=100500)
2024-04-18 01:16:26,356:INFO:create_model() successfully completed......................................
2024-04-18 01:16:26,881:INFO:SubProcess create_model() end ==================================
2024-04-18 01:16:26,881:INFO:Creating metrics dataframe
2024-04-18 01:16:26,914:INFO:Initializing create_model()
2024-04-18 01:16:26,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 01:16:26,914:INFO:Checking exceptions
2024-04-18 01:16:26,918:INFO:Importing libraries
2024-04-18 01:16:26,918:INFO:Copying training dataset
2024-04-18 01:16:26,990:INFO:Defining folds
2024-04-18 01:16:26,990:INFO:Declaring metric variables
2024-04-18 01:16:26,990:INFO:Importing untrained model
2024-04-18 01:16:26,990:INFO:Declaring custom model
2024-04-18 01:16:26,994:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 01:16:26,997:INFO:Cross validation set to False
2024-04-18 01:16:26,997:INFO:Fitting Model
2024-04-18 01:16:28,455:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 01:16:28,455:INFO:create_model() successfully completed......................................
2024-04-18 01:16:29,038:INFO:_master_model_container: 6
2024-04-18 01:16:29,038:INFO:_display_container: 2
2024-04-18 01:16:29,041:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 01:16:29,041:INFO:compare_models() successfully completed......................................
2024-04-18 02:11:30,079:INFO:Initializing plot_model()
2024-04-18 02:11:30,080:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=100500), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, system=True)
2024-04-18 02:11:30,080:INFO:Checking exceptions
2024-04-18 02:11:30,173:INFO:Preloading libraries
2024-04-18 02:11:30,248:INFO:Copying training dataset
2024-04-18 02:11:30,248:INFO:Plot type: feature
2024-04-18 02:11:30,249:WARNING:No coef_ found. Trying feature_importances_
2024-04-18 02:11:42,758:INFO:Initializing plot_model()
2024-04-18 02:11:42,759:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, system=True)
2024-04-18 02:11:42,759:INFO:Checking exceptions
2024-04-18 02:11:42,804:INFO:Preloading libraries
2024-04-18 02:11:42,815:INFO:Copying training dataset
2024-04-18 02:11:42,815:INFO:Plot type: feature
2024-04-18 02:11:42,816:WARNING:No coef_ found. Trying feature_importances_
2024-04-18 02:11:43,578:INFO:Visual Rendered Successfully
2024-04-18 02:11:44,280:INFO:plot_model() successfully completed......................................
2024-04-18 02:12:14,201:INFO:Initializing plot_model()
2024-04-18 02:12:14,202:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=100500), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BF2117D90>, system=True)
2024-04-18 02:12:14,202:INFO:Checking exceptions
2024-04-18 02:12:14,289:INFO:Preloading libraries
2024-04-18 02:12:14,344:INFO:Copying training dataset
2024-04-18 02:12:14,345:INFO:Plot type: feature
2024-04-18 02:12:14,345:WARNING:No coef_ found. Trying feature_importances_
2024-04-18 02:12:15,614:INFO:Visual Rendered Successfully
2024-04-18 02:12:16,245:INFO:plot_model() successfully completed......................................
2024-04-18 02:15:55,947:INFO:Initializing tune_model()
2024-04-18 02:15:55,948:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=None, round=4, n_iter=30, custom_grid=None, optimize=MAPE, custom_scorer=None, search_library=optuna, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>)
2024-04-18 02:15:55,948:INFO:Checking exceptions
2024-04-18 02:15:55,948:INFO:Soft dependency imported: optuna: 3.3.0
2024-04-18 02:15:57,124:INFO:Copying training dataset
2024-04-18 02:15:57,208:INFO:Checking base model
2024-04-18 02:15:57,209:INFO:Base model : Extreme Gradient Boosting
2024-04-18 02:15:57,218:INFO:Declaring metric variables
2024-04-18 02:15:57,222:INFO:Defining Hyperparameters
2024-04-18 02:15:57,804:INFO:Tuning with n_jobs=-1
2024-04-18 02:15:57,805:INFO:Initializing optuna.integration.OptunaSearchCV
2024-04-18 02:21:56,675:INFO:best_params: {'actual_estimator__learning_rate': 0.08229745343846576, 'actual_estimator__n_estimators': 269, 'actual_estimator__subsample': 0.8003017125167528, 'actual_estimator__max_depth': 7, 'actual_estimator__colsample_bytree': 0.6895304375880836, 'actual_estimator__min_child_weight': 4, 'actual_estimator__reg_alpha': 1.809677578895833e-07, 'actual_estimator__reg_lambda': 2.288006172673766e-06, 'actual_estimator__scale_pos_weight': 38.397666269557966}
2024-04-18 02:21:56,681:INFO:Hyperparameter search completed
2024-04-18 02:21:56,682:INFO:SubProcess create_model() called ==================================
2024-04-18 02:21:56,684:INFO:Initializing create_model()
2024-04-18 02:21:56,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B9028FD90>, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.08229745343846576, 'n_estimators': 269, 'subsample': 0.8003017125167528, 'max_depth': 7, 'colsample_bytree': 0.6895304375880836, 'min_child_weight': 4, 'reg_alpha': 1.809677578895833e-07, 'reg_lambda': 2.288006172673766e-06, 'scale_pos_weight': 38.397666269557966})
2024-04-18 02:21:56,685:INFO:Checking exceptions
2024-04-18 02:21:56,685:INFO:Importing libraries
2024-04-18 02:21:56,685:INFO:Copying training dataset
2024-04-18 02:21:56,775:INFO:Defining folds
2024-04-18 02:21:56,775:INFO:Declaring metric variables
2024-04-18 02:21:56,781:INFO:Importing untrained model
2024-04-18 02:21:56,782:INFO:Declaring custom model
2024-04-18 02:21:56,787:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 02:21:56,805:INFO:Starting cross validation
2024-04-18 02:21:56,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 02:22:16,536:INFO:Calculating mean and std
2024-04-18 02:22:16,538:INFO:Creating metrics dataframe
2024-04-18 02:22:16,547:INFO:Finalizing model
2024-04-18 02:22:18,123:INFO:Uploading results into container
2024-04-18 02:22:18,127:INFO:Uploading model into container now
2024-04-18 02:22:18,129:INFO:_master_model_container: 7
2024-04-18 02:22:18,129:INFO:_display_container: 3
2024-04-18 02:22:18,132:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 02:22:18,132:INFO:create_model() successfully completed......................................
2024-04-18 02:22:18,761:INFO:SubProcess create_model() end ==================================
2024-04-18 02:22:18,761:INFO:choose_better activated
2024-04-18 02:22:18,765:INFO:SubProcess create_model() called ==================================
2024-04-18 02:22:18,766:INFO:Initializing create_model()
2024-04-18 02:22:18,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 02:22:18,766:INFO:Checking exceptions
2024-04-18 02:22:18,769:INFO:Importing libraries
2024-04-18 02:22:18,770:INFO:Copying training dataset
2024-04-18 02:22:18,845:INFO:Defining folds
2024-04-18 02:22:18,845:INFO:Declaring metric variables
2024-04-18 02:22:18,845:INFO:Importing untrained model
2024-04-18 02:22:18,845:INFO:Declaring custom model
2024-04-18 02:22:18,846:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 02:22:18,847:INFO:Starting cross validation
2024-04-18 02:22:18,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 02:22:23,986:INFO:Calculating mean and std
2024-04-18 02:22:23,987:INFO:Creating metrics dataframe
2024-04-18 02:22:23,990:INFO:Finalizing model
2024-04-18 02:22:24,741:INFO:Uploading results into container
2024-04-18 02:22:24,742:INFO:Uploading model into container now
2024-04-18 02:22:24,742:INFO:_master_model_container: 8
2024-04-18 02:22:24,742:INFO:_display_container: 4
2024-04-18 02:22:24,743:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 02:22:24,744:INFO:create_model() successfully completed......................................
2024-04-18 02:22:25,336:INFO:SubProcess create_model() end ==================================
2024-04-18 02:22:25,337:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...) result for MAPE is 0.2002
2024-04-18 02:22:25,338:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...) result for MAPE is 0.1999
2024-04-18 02:22:25,339:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...) is best model
2024-04-18 02:22:25,339:INFO:choose_better completed
2024-04-18 02:22:25,350:INFO:_master_model_container: 8
2024-04-18 02:22:25,352:INFO:_display_container: 3
2024-04-18 02:22:25,353:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 02:22:25,353:INFO:tune_model() successfully completed......................................
2024-04-18 02:27:11,026:INFO:Initializing tune_model()
2024-04-18 02:27:11,027:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=None, round=4, n_iter=100, custom_grid=None, optimize=MAPE, custom_scorer=None, search_library=optuna, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>)
2024-04-18 02:27:11,028:INFO:Checking exceptions
2024-04-18 02:27:11,028:INFO:Soft dependency imported: optuna: 3.3.0
2024-04-18 02:27:11,076:INFO:Copying training dataset
2024-04-18 02:27:11,124:INFO:Checking base model
2024-04-18 02:27:11,124:INFO:Base model : Extreme Gradient Boosting
2024-04-18 02:27:11,129:INFO:Declaring metric variables
2024-04-18 02:27:11,134:INFO:Defining Hyperparameters
2024-04-18 02:27:12,153:INFO:Tuning with n_jobs=-1
2024-04-18 02:27:12,154:INFO:Initializing optuna.integration.OptunaSearchCV
2024-04-18 02:53:19,603:INFO:best_params: {'actual_estimator__learning_rate': 0.07235752899247931, 'actual_estimator__n_estimators': 250, 'actual_estimator__subsample': 0.6548988384558498, 'actual_estimator__max_depth': 11, 'actual_estimator__colsample_bytree': 0.7033636419144419, 'actual_estimator__min_child_weight': 3, 'actual_estimator__reg_alpha': 7.309249848951331e-09, 'actual_estimator__reg_lambda': 2.5497165498557512, 'actual_estimator__scale_pos_weight': 27.082870524727273}
2024-04-18 02:53:19,622:INFO:Hyperparameter search completed
2024-04-18 02:53:19,622:INFO:SubProcess create_model() called ==================================
2024-04-18 02:53:19,624:INFO:Initializing create_model()
2024-04-18 02:53:19,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024B90293A30>, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.07235752899247931, 'n_estimators': 250, 'subsample': 0.6548988384558498, 'max_depth': 11, 'colsample_bytree': 0.7033636419144419, 'min_child_weight': 3, 'reg_alpha': 7.309249848951331e-09, 'reg_lambda': 2.5497165498557512, 'scale_pos_weight': 27.082870524727273})
2024-04-18 02:53:19,625:INFO:Checking exceptions
2024-04-18 02:53:19,625:INFO:Importing libraries
2024-04-18 02:53:19,626:INFO:Copying training dataset
2024-04-18 02:53:19,716:INFO:Defining folds
2024-04-18 02:53:19,717:INFO:Declaring metric variables
2024-04-18 02:53:19,724:INFO:Importing untrained model
2024-04-18 02:53:19,724:INFO:Declaring custom model
2024-04-18 02:53:19,733:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 02:53:19,792:INFO:Starting cross validation
2024-04-18 02:53:19,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 02:53:39,954:INFO:Calculating mean and std
2024-04-18 02:53:39,956:INFO:Creating metrics dataframe
2024-04-18 02:53:39,966:INFO:Finalizing model
2024-04-18 02:53:42,030:INFO:Uploading results into container
2024-04-18 02:53:42,032:INFO:Uploading model into container now
2024-04-18 02:53:42,034:INFO:_master_model_container: 9
2024-04-18 02:53:42,034:INFO:_display_container: 4
2024-04-18 02:53:42,036:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7033636419144419, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.07235752899247931, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=11, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=250, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 02:53:42,036:INFO:create_model() successfully completed......................................
2024-04-18 02:53:42,652:INFO:SubProcess create_model() end ==================================
2024-04-18 02:53:42,652:INFO:choose_better activated
2024-04-18 02:53:42,656:INFO:SubProcess create_model() called ==================================
2024-04-18 02:53:42,657:INFO:Initializing create_model()
2024-04-18 02:53:42,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024BEEEC9BB0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 02:53:42,657:INFO:Checking exceptions
2024-04-18 02:53:42,661:INFO:Importing libraries
2024-04-18 02:53:42,661:INFO:Copying training dataset
2024-04-18 02:53:42,719:INFO:Defining folds
2024-04-18 02:53:42,720:INFO:Declaring metric variables
2024-04-18 02:53:42,720:INFO:Importing untrained model
2024-04-18 02:53:42,720:INFO:Declaring custom model
2024-04-18 02:53:42,721:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 02:53:42,721:INFO:Starting cross validation
2024-04-18 02:53:42,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 02:53:53,913:INFO:Calculating mean and std
2024-04-18 02:53:53,914:INFO:Creating metrics dataframe
2024-04-18 02:53:53,918:INFO:Finalizing model
2024-04-18 02:53:55,441:INFO:Uploading results into container
2024-04-18 02:53:55,442:INFO:Uploading model into container now
2024-04-18 02:53:55,442:INFO:_master_model_container: 10
2024-04-18 02:53:55,442:INFO:_display_container: 5
2024-04-18 02:53:55,443:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 02:53:55,444:INFO:create_model() successfully completed......................................
2024-04-18 02:53:56,063:INFO:SubProcess create_model() end ==================================
2024-04-18 02:53:56,065:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.6895304375880836, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.08229745343846576, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=269, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...) result for MAPE is 0.1999
2024-04-18 02:53:56,066:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7033636419144419, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.07235752899247931, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=11, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=250, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...) result for MAPE is 0.1994
2024-04-18 02:53:56,067:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7033636419144419, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.07235752899247931, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=11, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=250, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...) is best model
2024-04-18 02:53:56,067:INFO:choose_better completed
2024-04-18 02:53:56,079:INFO:_master_model_container: 10
2024-04-18 02:53:56,079:INFO:_display_container: 4
2024-04-18 02:53:56,082:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7033636419144419, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.07235752899247931, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=11, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=250, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 02:53:56,082:INFO:tune_model() successfully completed......................................
2024-04-18 03:11:36,518:INFO:Initializing save_model()
2024-04-18 03:11:36,519:INFO:save_model(model=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7033636419144419, device=None,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, feature_types=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=0.07235752899247931, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=11, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=250, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), model_name=tuned_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=RareCategoryGrouping(rare_to_value=0.0001))),
                ('rest_encoding',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=TargetEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-18 03:11:36,519:INFO:Adding model into prep_pipe
2024-04-18 03:11:36,563:INFO:tuned_model.pkl saved in current working directory
2024-04-18 03:11:36,582:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))])
2024-04-18 03:11:36,583:INFO:save_model() successfully completed......................................
2024-04-18 11:23:30,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 11:23:30,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 11:23:30,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 11:23:30,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 11:28:10,467:INFO:Initializing load_model()
2024-04-18 11:28:10,467:INFO:load_model(model_name=tuned_model.pkl, platform=None, authentication=None, verbose=True)
2024-04-18 11:28:20,562:INFO:Initializing load_model()
2024-04-18 11:28:20,562:INFO:load_model(model_name=tuned_model, platform=None, authentication=None, verbose=True)
2024-04-18 11:30:41,751:INFO:Initializing load_model()
2024-04-18 11:30:41,751:INFO:load_model(model_name=tuned_model, platform=None, authentication=None, verbose=True)
2024-04-18 11:30:42,167:INFO:PyCaret RegressionExperiment
2024-04-18 11:30:42,167:INFO:Logging name: reg-default-name
2024-04-18 11:30:42,167:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-18 11:30:42,167:INFO:version 3.1.0
2024-04-18 11:30:42,167:INFO:Initializing setup()
2024-04-18 11:30:42,167:INFO:self.USI: da94
2024-04-18 11:30:42,167:INFO:self._variable_keys: {'log_plots_param', 'X_train', 'exp_name_log', 'html_param', 'fold_groups_param', 'X_test', 'memory', 'data', 'fold_shuffle_param', 'seed', 'y_train', '_ml_usecase', 'logging_param', 'X', 'fold_generator', 'target_param', 'idx', '_available_plots', 'n_jobs_param', 'transform_target_param', 'exp_id', 'gpu_n_jobs_param', 'y', 'pipeline', 'gpu_param', 'USI', 'y_test'}
2024-04-18 11:30:42,167:INFO:Checking environment
2024-04-18 11:30:42,167:INFO:python_version: 3.9.17
2024-04-18 11:30:42,167:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-18 11:30:42,167:INFO:machine: AMD64
2024-04-18 11:30:42,167:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-18 11:30:42,170:INFO:Memory: svmem(total=8435355648, available=1311309824, percent=84.5, used=7124045824, free=1311309824)
2024-04-18 11:30:42,170:INFO:Physical Core: 2
2024-04-18 11:30:42,170:INFO:Logical Core: 4
2024-04-18 11:30:42,170:INFO:Checking libraries
2024-04-18 11:30:42,170:INFO:System:
2024-04-18 11:30:42,170:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-18 11:30:42,170:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-18 11:30:42,170:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-18 11:30:42,170:INFO:PyCaret required dependencies:
2024-04-18 11:30:42,171:INFO:                 pip: 23.2.1
2024-04-18 11:30:42,171:INFO:          setuptools: 68.0.0
2024-04-18 11:30:42,171:INFO:             pycaret: 3.1.0
2024-04-18 11:30:42,171:INFO:             IPython: 8.14.0
2024-04-18 11:30:42,171:INFO:          ipywidgets: 8.1.0
2024-04-18 11:30:42,171:INFO:                tqdm: 4.66.1
2024-04-18 11:30:42,171:INFO:               numpy: 1.23.5
2024-04-18 11:30:42,171:INFO:              pandas: 1.5.3
2024-04-18 11:30:42,171:INFO:              jinja2: 3.1.2
2024-04-18 11:30:42,171:INFO:               scipy: 1.10.1
2024-04-18 11:30:42,171:INFO:              joblib: 1.3.2
2024-04-18 11:30:42,171:INFO:             sklearn: 1.2.2
2024-04-18 11:30:42,171:INFO:                pyod: 1.1.0
2024-04-18 11:30:42,171:INFO:            imblearn: 0.11.0
2024-04-18 11:30:42,171:INFO:   category_encoders: 2.6.2
2024-04-18 11:30:42,172:INFO:            lightgbm: 4.0.0
2024-04-18 11:30:42,172:INFO:               numba: 0.58.0
2024-04-18 11:30:42,172:INFO:            requests: 2.31.0
2024-04-18 11:30:42,172:INFO:          matplotlib: 3.3.4
2024-04-18 11:30:42,172:INFO:          scikitplot: 0.3.7
2024-04-18 11:30:42,172:INFO:         yellowbrick: 1.5
2024-04-18 11:30:42,172:INFO:              plotly: 5.17.0
2024-04-18 11:30:42,172:INFO:    plotly-resampler: Not installed
2024-04-18 11:30:42,172:INFO:             kaleido: 0.2.1
2024-04-18 11:30:42,172:INFO:           schemdraw: 0.15
2024-04-18 11:30:42,172:INFO:         statsmodels: 0.13.2
2024-04-18 11:30:42,172:INFO:              sktime: 0.21.1
2024-04-18 11:30:42,172:INFO:               tbats: 1.1.3
2024-04-18 11:30:42,172:INFO:            pmdarima: 2.0.3
2024-04-18 11:30:42,172:INFO:              psutil: 5.9.5
2024-04-18 11:30:42,172:INFO:          markupsafe: 2.1.3
2024-04-18 11:30:42,172:INFO:             pickle5: Not installed
2024-04-18 11:30:42,172:INFO:         cloudpickle: 2.2.1
2024-04-18 11:30:42,172:INFO:         deprecation: 2.1.0
2024-04-18 11:30:42,172:INFO:              xxhash: 3.4.1
2024-04-18 11:30:42,172:INFO:           wurlitzer: Not installed
2024-04-18 11:30:42,172:INFO:PyCaret optional dependencies:
2024-04-18 11:30:42,187:INFO:                shap: 0.44.1
2024-04-18 11:30:42,187:INFO:           interpret: Not installed
2024-04-18 11:30:42,187:INFO:                umap: Not installed
2024-04-18 11:30:42,187:INFO:     ydata_profiling: 4.5.1
2024-04-18 11:30:42,187:INFO:  explainerdashboard: Not installed
2024-04-18 11:30:42,188:INFO:             autoviz: Not installed
2024-04-18 11:30:42,188:INFO:           fairlearn: Not installed
2024-04-18 11:30:42,188:INFO:          deepchecks: Not installed
2024-04-18 11:30:42,188:INFO:             xgboost: 2.0.3
2024-04-18 11:30:42,188:INFO:            catboost: 1.2
2024-04-18 11:30:42,188:INFO:              kmodes: Not installed
2024-04-18 11:30:42,188:INFO:             mlxtend: Not installed
2024-04-18 11:30:42,188:INFO:       statsforecast: Not installed
2024-04-18 11:30:42,188:INFO:        tune_sklearn: Not installed
2024-04-18 11:30:42,188:INFO:                 ray: Not installed
2024-04-18 11:30:42,188:INFO:            hyperopt: Not installed
2024-04-18 11:30:42,188:INFO:              optuna: 3.3.0
2024-04-18 11:30:42,188:INFO:               skopt: Not installed
2024-04-18 11:30:42,188:INFO:              mlflow: Not installed
2024-04-18 11:30:42,188:INFO:              gradio: Not installed
2024-04-18 11:30:42,188:INFO:             fastapi: Not installed
2024-04-18 11:30:42,188:INFO:             uvicorn: Not installed
2024-04-18 11:30:42,188:INFO:              m2cgen: Not installed
2024-04-18 11:30:42,188:INFO:           evidently: Not installed
2024-04-18 11:30:42,188:INFO:               fugue: Not installed
2024-04-18 11:30:42,188:INFO:           streamlit: 1.25.0
2024-04-18 11:30:42,189:INFO:             prophet: Not installed
2024-04-18 11:30:42,189:INFO:None
2024-04-18 11:30:42,189:INFO:Set up data.
2024-04-18 11:30:42,277:INFO:Set up folding strategy.
2024-04-18 11:30:42,277:INFO:Set up train/test split.
2024-04-18 11:30:42,293:INFO:Set up index.
2024-04-18 11:30:42,301:INFO:Assigning column types.
2024-04-18 11:30:42,306:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 11:30:42,456:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:42,459:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:42,609:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:42,612:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:42,614:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-18 11:30:42,767:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:42,770:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:42,935:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:42,941:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:42,942:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-18 11:30:43,264:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:43,267:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:43,419:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:43,422:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:43,422:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-18 11:30:43,581:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:43,584:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:43,740:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:43,742:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:43,743:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 11:30:43,895:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:43,900:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:44,063:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:44,065:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:44,066:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-18 11:30:44,216:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:44,221:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:44,383:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:44,385:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:44,387:INFO:Preparing preprocessing pipeline...
2024-04-18 11:30:44,387:INFO:Set up simple imputation.
2024-04-18 11:30:44,387:INFO:Set up grouping of rare categories.
2024-04-18 11:30:44,433:INFO:Set up encoding of categorical features.
2024-04-18 11:30:45,388:INFO:Finished creating preprocessing pipeline.
2024-04-18 11:30:45,410:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=RareCategoryGrouping(rare_to_value=0.0001))),
                ('rest_encoding',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=TargetEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan')))])
2024-04-18 11:30:45,410:INFO:Creating final display dataframe.
2024-04-18 11:30:48,038:INFO:Setup _display_container:                     Description             Value
0                    Session id            100500
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 7)
4        Transformed data shape        (57507, 7)
5   Transformed train set shape        (46005, 7)
6    Transformed test set shape        (11502, 7)
7          Categorical features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding                 3
13              Encoding method              None
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              da94
2024-04-18 11:30:48,234:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:48,239:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:48,433:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:30:48,435:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:30:48,436:INFO:setup() successfully completed in 6.55s...............
2024-04-18 11:31:27,302:INFO:Initializing finalize_model()
2024-04-18 11:31:27,302:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7BCBEF1C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-18 11:31:27,332:INFO:Finalizing Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))])
2024-04-18 11:31:27,385:INFO:Initializing create_model()
2024-04-18 11:31:27,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7BCBEF1C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2024-04-18 11:31:27,385:INFO:Checking exceptions
2024-04-18 11:31:27,388:INFO:Importing libraries
2024-04-18 11:31:27,389:INFO:Copying training dataset
2024-04-18 11:31:27,390:INFO:Defining folds
2024-04-18 11:31:27,391:INFO:Declaring metric variables
2024-04-18 11:31:27,391:INFO:Importing untrained model
2024-04-18 11:31:27,392:INFO:Declaring custom model
2024-04-18 11:31:27,397:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 11:31:27,401:INFO:Cross validation set to False
2024-04-18 11:31:27,401:INFO:Fitting Model
2024-04-18 11:31:29,788:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))])
2024-04-18 11:31:29,788:INFO:create_model() successfully completed......................................
2024-04-18 11:31:30,105:INFO:_master_model_container: 10
2024-04-18 11:31:30,105:INFO:_display_container: 4
2024-04-18 11:31:30,118:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))])
2024-04-18 11:31:30,118:INFO:finalize_model() successfully completed......................................
2024-04-18 11:32:25,463:INFO:Initializing save_model()
2024-04-18 11:32:25,465:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), model_name=final_model, prep_pipe_=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=RareCategoryGrouping(rare_to_value=0.0001))),
                ('rest_encoding',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=TargetEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-18 11:32:25,466:INFO:Adding model into prep_pipe
2024-04-18 11:32:25,466:WARNING:Only Model saved as it was a pipeline.
2024-04-18 11:32:25,562:INFO:final_model.pkl saved in current working directory
2024-04-18 11:32:25,592:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))])
2024-04-18 11:32:25,592:INFO:save_model() successfully completed......................................
2024-04-18 11:48:06,855:INFO:PyCaret RegressionExperiment
2024-04-18 11:48:06,856:INFO:Logging name: reg-default-name
2024-04-18 11:48:06,856:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-18 11:48:06,856:INFO:version 3.1.0
2024-04-18 11:48:06,856:INFO:Initializing setup()
2024-04-18 11:48:06,856:INFO:self.USI: b098
2024-04-18 11:48:06,856:INFO:self._variable_keys: {'log_plots_param', '_ml_usecase', 'logging_param', 'X', 'fold_generator', 'X_train', 'exp_name_log', 'target_param', 'idx', 'html_param', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'transform_target_param', 'exp_id', 'X_test', 'memory', 'gpu_n_jobs_param', 'data', 'fold_shuffle_param', 'seed', 'y', 'y_train', 'pipeline', 'gpu_param', 'USI', 'y_test'}
2024-04-18 11:48:06,856:INFO:Checking environment
2024-04-18 11:48:06,856:INFO:python_version: 3.9.17
2024-04-18 11:48:06,856:INFO:python_build: ('main', 'Aug 10 2023 06:55:58')
2024-04-18 11:48:06,856:INFO:machine: AMD64
2024-04-18 11:48:06,856:INFO:platform: Windows-10-10.0.19042-SP0
2024-04-18 11:48:06,860:INFO:Memory: svmem(total=8435355648, available=1286103040, percent=84.8, used=7149252608, free=1286103040)
2024-04-18 11:48:06,860:INFO:Physical Core: 2
2024-04-18 11:48:06,860:INFO:Logical Core: 4
2024-04-18 11:48:06,860:INFO:Checking libraries
2024-04-18 11:48:06,861:INFO:System:
2024-04-18 11:48:06,861:INFO:    python: 3.9.17 | packaged by conda-forge | (main, Aug 10 2023, 06:55:58) [MSC v.1929 64 bit (AMD64)]
2024-04-18 11:48:06,861:INFO:executable: c:\Users\elpiz\anaconda3\envs\ds_practicum_env\python.exe
2024-04-18 11:48:06,861:INFO:   machine: Windows-10-10.0.19042-SP0
2024-04-18 11:48:06,861:INFO:PyCaret required dependencies:
2024-04-18 11:48:06,861:INFO:                 pip: 23.2.1
2024-04-18 11:48:06,861:INFO:          setuptools: 68.0.0
2024-04-18 11:48:06,861:INFO:             pycaret: 3.1.0
2024-04-18 11:48:06,861:INFO:             IPython: 8.14.0
2024-04-18 11:48:06,861:INFO:          ipywidgets: 8.1.0
2024-04-18 11:48:06,861:INFO:                tqdm: 4.66.1
2024-04-18 11:48:06,861:INFO:               numpy: 1.23.5
2024-04-18 11:48:06,861:INFO:              pandas: 1.5.3
2024-04-18 11:48:06,861:INFO:              jinja2: 3.1.2
2024-04-18 11:48:06,862:INFO:               scipy: 1.10.1
2024-04-18 11:48:06,862:INFO:              joblib: 1.3.2
2024-04-18 11:48:06,862:INFO:             sklearn: 1.2.2
2024-04-18 11:48:06,862:INFO:                pyod: 1.1.0
2024-04-18 11:48:06,862:INFO:            imblearn: 0.11.0
2024-04-18 11:48:06,862:INFO:   category_encoders: 2.6.2
2024-04-18 11:48:06,862:INFO:            lightgbm: 4.0.0
2024-04-18 11:48:06,862:INFO:               numba: 0.58.0
2024-04-18 11:48:06,862:INFO:            requests: 2.31.0
2024-04-18 11:48:06,862:INFO:          matplotlib: 3.3.4
2024-04-18 11:48:06,862:INFO:          scikitplot: 0.3.7
2024-04-18 11:48:06,862:INFO:         yellowbrick: 1.5
2024-04-18 11:48:06,862:INFO:              plotly: 5.17.0
2024-04-18 11:48:06,862:INFO:    plotly-resampler: Not installed
2024-04-18 11:48:06,862:INFO:             kaleido: 0.2.1
2024-04-18 11:48:06,862:INFO:           schemdraw: 0.15
2024-04-18 11:48:06,862:INFO:         statsmodels: 0.13.2
2024-04-18 11:48:06,862:INFO:              sktime: 0.21.1
2024-04-18 11:48:06,862:INFO:               tbats: 1.1.3
2024-04-18 11:48:06,862:INFO:            pmdarima: 2.0.3
2024-04-18 11:48:06,862:INFO:              psutil: 5.9.5
2024-04-18 11:48:06,862:INFO:          markupsafe: 2.1.3
2024-04-18 11:48:06,863:INFO:             pickle5: Not installed
2024-04-18 11:48:06,863:INFO:         cloudpickle: 2.2.1
2024-04-18 11:48:06,863:INFO:         deprecation: 2.1.0
2024-04-18 11:48:06,863:INFO:              xxhash: 3.4.1
2024-04-18 11:48:06,863:INFO:           wurlitzer: Not installed
2024-04-18 11:48:06,863:INFO:PyCaret optional dependencies:
2024-04-18 11:48:06,863:INFO:                shap: 0.44.1
2024-04-18 11:48:06,863:INFO:           interpret: Not installed
2024-04-18 11:48:06,863:INFO:                umap: Not installed
2024-04-18 11:48:06,863:INFO:     ydata_profiling: 4.5.1
2024-04-18 11:48:06,863:INFO:  explainerdashboard: Not installed
2024-04-18 11:48:06,863:INFO:             autoviz: Not installed
2024-04-18 11:48:06,863:INFO:           fairlearn: Not installed
2024-04-18 11:48:06,863:INFO:          deepchecks: Not installed
2024-04-18 11:48:06,863:INFO:             xgboost: 2.0.3
2024-04-18 11:48:06,863:INFO:            catboost: 1.2
2024-04-18 11:48:06,863:INFO:              kmodes: Not installed
2024-04-18 11:48:06,863:INFO:             mlxtend: Not installed
2024-04-18 11:48:06,863:INFO:       statsforecast: Not installed
2024-04-18 11:48:06,863:INFO:        tune_sklearn: Not installed
2024-04-18 11:48:06,863:INFO:                 ray: Not installed
2024-04-18 11:48:06,864:INFO:            hyperopt: Not installed
2024-04-18 11:48:06,864:INFO:              optuna: 3.3.0
2024-04-18 11:48:06,864:INFO:               skopt: Not installed
2024-04-18 11:48:06,864:INFO:              mlflow: Not installed
2024-04-18 11:48:06,864:INFO:              gradio: Not installed
2024-04-18 11:48:06,864:INFO:             fastapi: Not installed
2024-04-18 11:48:06,864:INFO:             uvicorn: Not installed
2024-04-18 11:48:06,864:INFO:              m2cgen: Not installed
2024-04-18 11:48:06,864:INFO:           evidently: Not installed
2024-04-18 11:48:06,864:INFO:               fugue: Not installed
2024-04-18 11:48:06,864:INFO:           streamlit: 1.25.0
2024-04-18 11:48:06,864:INFO:             prophet: Not installed
2024-04-18 11:48:06,864:INFO:None
2024-04-18 11:48:06,864:INFO:Set up data.
2024-04-18 11:48:06,950:INFO:Set up folding strategy.
2024-04-18 11:48:06,950:INFO:Set up train/test split.
2024-04-18 11:48:06,963:INFO:Set up index.
2024-04-18 11:48:06,970:INFO:Assigning column types.
2024-04-18 11:48:06,976:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 11:48:06,976:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 11:48:06,981:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 11:48:06,985:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,082:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,128:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,129:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:07,132:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:07,132:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,137:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,281:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:07,284:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:07,285:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-18 11:48:07,291:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,298:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,439:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:07,443:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:07,448:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,453:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,568:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,718:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,719:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:07,728:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:07,731:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-18 11:48:07,763:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 11:48:07,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,030:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:08,033:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:08,045:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,254:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:08,258:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:08,259:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-18 11:48:08,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,439:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,441:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:08,444:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:08,615:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:08,666:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:08,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 11:48:08,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:08,843:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:08,846:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:08,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-18 11:48:09,022:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:09,025:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:09,026:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-18 11:48:09,195:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:09,198:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:09,398:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:09,401:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:09,402:INFO:Preparing preprocessing pipeline...
2024-04-18 11:48:09,402:INFO:Set up simple imputation.
2024-04-18 11:48:09,402:INFO:Set up grouping of rare categories.
2024-04-18 11:48:09,442:INFO:Set up encoding of categorical features.
2024-04-18 11:48:09,443:INFO:Set up feature normalization.
2024-04-18 11:48:10,683:INFO:Finished creating preprocessing pipeline.
2024-04-18 11:48:10,693:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                                    transformer=RareCategoryGrouping(rare_to_value=0.0001))),
                ('rest_encoding',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=TargetEncoder(cols=['manufacturer',
                                                                    'security_codes',
                                                                    'model',
                                                                    'engine',
                                                                    'model_year',
                                                                    'plant_code'],
                                                              handle_missing='return_nan'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-04-18 11:48:10,693:INFO:Creating final display dataframe.
2024-04-18 11:48:13,382:INFO:Setup _display_container:                     Description             Value
0                    Session id            100500
1                        Target             Price
2                   Target type        Regression
3           Original data shape        (57507, 7)
4        Transformed data shape        (57507, 7)
5   Transformed train set shape        (46005, 7)
6    Transformed test set shape        (11502, 7)
7          Categorical features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding                 3
13              Encoding method              None
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              b098
2024-04-18 11:48:13,567:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:13,571:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:13,758:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-18 11:48:13,761:INFO:Soft dependency imported: catboost: 1.2
2024-04-18 11:48:13,762:INFO:setup() successfully completed in 7.18s...............
2024-04-18 11:48:13,762:INFO:Initializing compare_models()
2024-04-18 11:48:13,762:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, include=['dummy', 'lightgbm', 'xgboost', 'catboost', 'et', 'rf'], fold=None, round=4, cross_validation=True, sort=MAPE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, 'include': ['dummy', 'lightgbm', 'xgboost', 'catboost', 'et', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-18 11:48:13,762:INFO:Checking exceptions
2024-04-18 11:48:13,787:INFO:Preparing display monitor
2024-04-18 11:48:13,824:INFO:Initializing Dummy Regressor
2024-04-18 11:48:13,824:INFO:Total runtime is 0.0 minutes
2024-04-18 11:48:13,832:INFO:SubProcess create_model() called ==================================
2024-04-18 11:48:13,832:INFO:Initializing create_model()
2024-04-18 11:48:13,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7C596F1F0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:48:13,833:INFO:Checking exceptions
2024-04-18 11:48:13,833:INFO:Importing libraries
2024-04-18 11:48:13,833:INFO:Copying training dataset
2024-04-18 11:48:14,052:INFO:Defining folds
2024-04-18 11:48:14,053:INFO:Declaring metric variables
2024-04-18 11:48:14,061:INFO:Importing untrained model
2024-04-18 11:48:14,066:INFO:Dummy Regressor Imported successfully
2024-04-18 11:48:14,078:INFO:Starting cross validation
2024-04-18 11:48:14,092:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 11:48:26,411:INFO:Calculating mean and std
2024-04-18 11:48:26,413:INFO:Creating metrics dataframe
2024-04-18 11:48:26,414:INFO:Uploading results into container
2024-04-18 11:48:26,415:INFO:Uploading model into container now
2024-04-18 11:48:26,416:INFO:_master_model_container: 1
2024-04-18 11:48:26,416:INFO:_display_container: 2
2024-04-18 11:48:26,416:INFO:DummyRegressor()
2024-04-18 11:48:26,416:INFO:create_model() successfully completed......................................
2024-04-18 11:48:26,772:INFO:SubProcess create_model() end ==================================
2024-04-18 11:48:26,772:INFO:Creating metrics dataframe
2024-04-18 11:48:26,783:INFO:Initializing Light Gradient Boosting Machine
2024-04-18 11:48:26,784:INFO:Total runtime is 0.21599777936935424 minutes
2024-04-18 11:48:26,789:INFO:SubProcess create_model() called ==================================
2024-04-18 11:48:26,790:INFO:Initializing create_model()
2024-04-18 11:48:26,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7C596F1F0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:48:26,790:INFO:Checking exceptions
2024-04-18 11:48:26,791:INFO:Importing libraries
2024-04-18 11:48:26,791:INFO:Copying training dataset
2024-04-18 11:48:26,853:INFO:Defining folds
2024-04-18 11:48:26,854:INFO:Declaring metric variables
2024-04-18 11:48:26,862:INFO:Importing untrained model
2024-04-18 11:48:26,867:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-18 11:48:26,879:INFO:Starting cross validation
2024-04-18 11:48:26,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 11:48:31,935:INFO:Calculating mean and std
2024-04-18 11:48:31,937:INFO:Creating metrics dataframe
2024-04-18 11:48:31,941:INFO:Uploading results into container
2024-04-18 11:48:31,943:INFO:Uploading model into container now
2024-04-18 11:48:31,944:INFO:_master_model_container: 2
2024-04-18 11:48:31,945:INFO:_display_container: 2
2024-04-18 11:48:31,946:INFO:LGBMRegressor(n_jobs=-1, random_state=100500)
2024-04-18 11:48:31,946:INFO:create_model() successfully completed......................................
2024-04-18 11:48:32,269:INFO:SubProcess create_model() end ==================================
2024-04-18 11:48:32,269:INFO:Creating metrics dataframe
2024-04-18 11:48:32,278:INFO:Initializing Extreme Gradient Boosting
2024-04-18 11:48:32,278:INFO:Total runtime is 0.3075681408246358 minutes
2024-04-18 11:48:32,282:INFO:SubProcess create_model() called ==================================
2024-04-18 11:48:32,283:INFO:Initializing create_model()
2024-04-18 11:48:32,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7C596F1F0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:48:32,283:INFO:Checking exceptions
2024-04-18 11:48:32,283:INFO:Importing libraries
2024-04-18 11:48:32,283:INFO:Copying training dataset
2024-04-18 11:48:32,356:INFO:Defining folds
2024-04-18 11:48:32,357:INFO:Declaring metric variables
2024-04-18 11:48:32,364:INFO:Importing untrained model
2024-04-18 11:48:32,371:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 11:48:32,380:INFO:Starting cross validation
2024-04-18 11:48:32,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 11:48:38,870:INFO:Calculating mean and std
2024-04-18 11:48:38,872:INFO:Creating metrics dataframe
2024-04-18 11:48:38,876:INFO:Uploading results into container
2024-04-18 11:48:38,878:INFO:Uploading model into container now
2024-04-18 11:48:38,882:INFO:_master_model_container: 3
2024-04-18 11:48:38,883:INFO:_display_container: 2
2024-04-18 11:48:38,886:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 11:48:38,886:INFO:create_model() successfully completed......................................
2024-04-18 11:48:39,239:INFO:SubProcess create_model() end ==================================
2024-04-18 11:48:39,240:INFO:Creating metrics dataframe
2024-04-18 11:48:39,249:INFO:Initializing CatBoost Regressor
2024-04-18 11:48:39,249:INFO:Total runtime is 0.42375222841898597 minutes
2024-04-18 11:48:39,254:INFO:SubProcess create_model() called ==================================
2024-04-18 11:48:39,255:INFO:Initializing create_model()
2024-04-18 11:48:39,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7C596F1F0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:48:39,255:INFO:Checking exceptions
2024-04-18 11:48:39,255:INFO:Importing libraries
2024-04-18 11:48:39,255:INFO:Copying training dataset
2024-04-18 11:48:39,336:INFO:Defining folds
2024-04-18 11:48:39,337:INFO:Declaring metric variables
2024-04-18 11:48:39,346:INFO:Importing untrained model
2024-04-18 11:48:39,357:INFO:CatBoost Regressor Imported successfully
2024-04-18 11:48:39,369:INFO:Starting cross validation
2024-04-18 11:48:39,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 11:49:41,033:INFO:Calculating mean and std
2024-04-18 11:49:41,035:INFO:Creating metrics dataframe
2024-04-18 11:49:41,039:INFO:Uploading results into container
2024-04-18 11:49:41,040:INFO:Uploading model into container now
2024-04-18 11:49:41,041:INFO:_master_model_container: 4
2024-04-18 11:49:41,042:INFO:_display_container: 2
2024-04-18 11:49:41,042:INFO:<catboost.core.CatBoostRegressor object at 0x000001F7C43901F0>
2024-04-18 11:49:41,043:INFO:create_model() successfully completed......................................
2024-04-18 11:49:41,515:INFO:SubProcess create_model() end ==================================
2024-04-18 11:49:41,515:INFO:Creating metrics dataframe
2024-04-18 11:49:41,529:INFO:Initializing Extra Trees Regressor
2024-04-18 11:49:41,530:INFO:Total runtime is 1.4617666403452554 minutes
2024-04-18 11:49:41,535:INFO:SubProcess create_model() called ==================================
2024-04-18 11:49:41,535:INFO:Initializing create_model()
2024-04-18 11:49:41,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7C596F1F0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:49:41,536:INFO:Checking exceptions
2024-04-18 11:49:41,536:INFO:Importing libraries
2024-04-18 11:49:41,536:INFO:Copying training dataset
2024-04-18 11:49:41,639:INFO:Defining folds
2024-04-18 11:49:41,639:INFO:Declaring metric variables
2024-04-18 11:49:41,650:INFO:Importing untrained model
2024-04-18 11:49:41,656:INFO:Extra Trees Regressor Imported successfully
2024-04-18 11:49:41,673:INFO:Starting cross validation
2024-04-18 11:49:41,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 11:49:58,020:INFO:Calculating mean and std
2024-04-18 11:49:58,022:INFO:Creating metrics dataframe
2024-04-18 11:49:58,025:INFO:Uploading results into container
2024-04-18 11:49:58,026:INFO:Uploading model into container now
2024-04-18 11:49:58,028:INFO:_master_model_container: 5
2024-04-18 11:49:58,029:INFO:_display_container: 2
2024-04-18 11:49:58,031:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=100500)
2024-04-18 11:49:58,031:INFO:create_model() successfully completed......................................
2024-04-18 11:49:58,499:INFO:SubProcess create_model() end ==================================
2024-04-18 11:49:58,500:INFO:Creating metrics dataframe
2024-04-18 11:49:58,509:INFO:Initializing Random Forest Regressor
2024-04-18 11:49:58,509:INFO:Total runtime is 1.744761033852895 minutes
2024-04-18 11:49:58,516:INFO:SubProcess create_model() called ==================================
2024-04-18 11:49:58,516:INFO:Initializing create_model()
2024-04-18 11:49:58,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7C596F1F0>, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:49:58,516:INFO:Checking exceptions
2024-04-18 11:49:58,517:INFO:Importing libraries
2024-04-18 11:49:58,517:INFO:Copying training dataset
2024-04-18 11:49:58,606:INFO:Defining folds
2024-04-18 11:49:58,606:INFO:Declaring metric variables
2024-04-18 11:49:58,613:INFO:Importing untrained model
2024-04-18 11:49:58,623:INFO:Random Forest Regressor Imported successfully
2024-04-18 11:49:58,636:INFO:Starting cross validation
2024-04-18 11:49:58,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-18 11:50:21,207:INFO:Calculating mean and std
2024-04-18 11:50:21,209:INFO:Creating metrics dataframe
2024-04-18 11:50:21,213:INFO:Uploading results into container
2024-04-18 11:50:21,214:INFO:Uploading model into container now
2024-04-18 11:50:21,215:INFO:_master_model_container: 6
2024-04-18 11:50:21,215:INFO:_display_container: 2
2024-04-18 11:50:21,215:INFO:RandomForestRegressor(n_jobs=-1, random_state=100500)
2024-04-18 11:50:21,215:INFO:create_model() successfully completed......................................
2024-04-18 11:50:21,699:INFO:SubProcess create_model() end ==================================
2024-04-18 11:50:21,699:INFO:Creating metrics dataframe
2024-04-18 11:50:21,741:INFO:Initializing create_model()
2024-04-18 11:50:21,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-04-18 11:50:21,742:INFO:Checking exceptions
2024-04-18 11:50:21,757:INFO:Importing libraries
2024-04-18 11:50:21,757:INFO:Copying training dataset
2024-04-18 11:50:21,881:INFO:Defining folds
2024-04-18 11:50:21,882:INFO:Declaring metric variables
2024-04-18 11:50:21,882:INFO:Importing untrained model
2024-04-18 11:50:21,882:INFO:Declaring custom model
2024-04-18 11:50:21,885:INFO:Extreme Gradient Boosting Imported successfully
2024-04-18 11:50:21,888:INFO:Cross validation set to False
2024-04-18 11:50:21,888:INFO:Fitting Model
2024-04-18 11:50:23,149:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 11:50:23,149:INFO:create_model() successfully completed......................................
2024-04-18 11:50:23,784:INFO:_master_model_container: 6
2024-04-18 11:50:23,784:INFO:_display_container: 2
2024-04-18 11:50:23,786:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=100500, ...)
2024-04-18 11:50:23,786:INFO:compare_models() successfully completed......................................
2024-04-18 12:11:23,565:INFO:Initializing load_model()
2024-04-18 12:11:23,566:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-04-18 12:11:23,634:INFO:Initializing predict_model()
2024-04-18 12:11:23,635:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7BCCD3B80>)
2024-04-18 12:11:23,635:INFO:Checking exceptions
2024-04-18 12:11:23,635:INFO:Preloading libraries
2024-04-18 12:11:23,638:INFO:Set up data.
2024-04-18 12:11:23,645:INFO:Set up index.
2024-04-18 12:11:56,445:INFO:Initializing load_model()
2024-04-18 12:11:56,446:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-04-18 12:11:56,523:INFO:Initializing predict_model()
2024-04-18 12:11:56,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C8FCF3A0>)
2024-04-18 12:11:56,524:INFO:Checking exceptions
2024-04-18 12:11:56,525:INFO:Preloading libraries
2024-04-18 12:11:56,532:INFO:Set up data.
2024-04-18 12:11:56,537:INFO:Set up index.
2024-04-18 12:12:49,504:INFO:Initializing load_model()
2024-04-18 12:12:49,504:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-04-18 12:12:49,569:INFO:Initializing predict_model()
2024-04-18 12:12:49,570:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C3E054C0>)
2024-04-18 12:12:49,570:INFO:Checking exceptions
2024-04-18 12:12:49,570:INFO:Preloading libraries
2024-04-18 12:12:49,573:INFO:Set up data.
2024-04-18 12:12:49,581:INFO:Set up index.
2024-04-18 12:14:18,885:INFO:Initializing load_model()
2024-04-18 12:14:18,885:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-04-18 12:14:18,958:INFO:Initializing predict_model()
2024-04-18 12:14:18,958:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C41D2EE0>)
2024-04-18 12:14:18,958:INFO:Checking exceptions
2024-04-18 12:14:18,958:INFO:Preloading libraries
2024-04-18 12:14:18,961:INFO:Set up data.
2024-04-18 12:14:18,966:INFO:Set up index.
2024-04-18 12:14:35,436:INFO:Initializing load_model()
2024-04-18 12:14:35,436:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-04-18 12:14:35,499:INFO:Initializing predict_model()
2024-04-18 12:14:35,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C3E054C0>)
2024-04-18 12:14:35,499:INFO:Checking exceptions
2024-04-18 12:14:35,500:INFO:Preloading libraries
2024-04-18 12:14:35,503:INFO:Set up data.
2024-04-18 12:14:35,510:INFO:Set up index.
2024-04-18 12:15:18,440:INFO:Initializing load_model()
2024-04-18 12:15:18,440:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:15:18,776:INFO:Initializing predict_model()
2024-04-18 12:15:18,777:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C3E054C0>)
2024-04-18 12:15:18,777:INFO:Checking exceptions
2024-04-18 12:15:18,777:INFO:Preloading libraries
2024-04-18 12:15:18,779:INFO:Set up data.
2024-04-18 12:15:18,782:INFO:Set up index.
2024-04-18 12:15:27,028:INFO:Initializing load_model()
2024-04-18 12:15:27,030:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:15:27,091:INFO:Initializing predict_model()
2024-04-18 12:15:27,091:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C5978160>)
2024-04-18 12:15:27,092:INFO:Checking exceptions
2024-04-18 12:15:27,092:INFO:Preloading libraries
2024-04-18 12:15:27,095:INFO:Set up data.
2024-04-18 12:15:27,100:INFO:Set up index.
2024-04-18 12:20:28,728:INFO:Initializing load_model()
2024-04-18 12:20:28,729:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:20:28,793:INFO:Initializing predict_model()
2024-04-18 12:20:28,793:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C3FBCEE0>)
2024-04-18 12:20:28,794:INFO:Checking exceptions
2024-04-18 12:20:28,794:INFO:Preloading libraries
2024-04-18 12:20:28,797:INFO:Set up data.
2024-04-18 12:20:28,802:INFO:Set up index.
2024-04-18 12:22:34,762:INFO:Initializing load_model()
2024-04-18 12:22:34,763:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:22:34,837:INFO:Initializing predict_model()
2024-04-18 12:22:34,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C624FD30>)
2024-04-18 12:22:34,837:INFO:Checking exceptions
2024-04-18 12:22:34,837:INFO:Preloading libraries
2024-04-18 12:22:34,840:INFO:Set up data.
2024-04-18 12:22:34,846:INFO:Set up index.
2024-04-18 12:23:09,133:INFO:Initializing load_model()
2024-04-18 12:23:09,134:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:23:09,198:INFO:Initializing predict_model()
2024-04-18 12:23:09,198:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7CA65EC10>)
2024-04-18 12:23:09,198:INFO:Checking exceptions
2024-04-18 12:23:09,199:INFO:Preloading libraries
2024-04-18 12:23:09,201:INFO:Set up data.
2024-04-18 12:23:09,206:INFO:Set up index.
2024-04-18 12:24:03,033:INFO:Initializing load_model()
2024-04-18 12:24:03,033:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:24:03,091:INFO:Initializing predict_model()
2024-04-18 12:24:03,091:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7CA64F820>)
2024-04-18 12:24:03,091:INFO:Checking exceptions
2024-04-18 12:24:03,091:INFO:Preloading libraries
2024-04-18 12:24:03,094:INFO:Set up data.
2024-04-18 12:24:03,099:INFO:Set up index.
2024-04-18 12:25:13,695:INFO:Initializing load_model()
2024-04-18 12:25:13,695:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:25:13,765:INFO:Initializing predict_model()
2024-04-18 12:25:13,765:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7D384B9D0>)
2024-04-18 12:25:13,765:INFO:Checking exceptions
2024-04-18 12:25:13,766:INFO:Preloading libraries
2024-04-18 12:25:13,768:INFO:Set up data.
2024-04-18 12:25:13,773:INFO:Set up index.
2024-04-18 12:26:24,644:INFO:Initializing load_model()
2024-04-18 12:26:24,644:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:26:24,950:INFO:Initializing predict_model()
2024-04-18 12:26:24,951:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7CA6690D0>)
2024-04-18 12:26:24,951:INFO:Checking exceptions
2024-04-18 12:26:24,951:INFO:Preloading libraries
2024-04-18 12:26:24,954:INFO:Set up data.
2024-04-18 12:26:24,957:INFO:Set up index.
2024-04-18 12:27:45,964:INFO:Initializing load_model()
2024-04-18 12:27:45,965:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:27:46,018:INFO:Initializing predict_model()
2024-04-18 12:27:46,018:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F7C34053A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\elpiz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('r...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7C470BA60>)
2024-04-18 12:27:46,018:INFO:Checking exceptions
2024-04-18 12:27:46,018:INFO:Preloading libraries
2024-04-18 12:27:46,021:INFO:Set up data.
2024-04-18 12:27:46,026:INFO:Set up index.
2024-04-18 12:32:31,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:32:31,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:32:31,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:32:31,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:37:03,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:37:03,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:37:03,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:37:03,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:38:33,719:INFO:Initializing load_model()
2024-04-18 12:38:33,719:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:40:41,085:INFO:Initializing predict_model()
2024-04-18 12:40:41,086:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0AC58760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-18 12:40:41,086:INFO:Checking exceptions
2024-04-18 12:40:41,087:INFO:Preloading libraries
2024-04-18 12:40:41,087:INFO:Set up data.
2024-04-18 12:40:41,097:INFO:Set up index.
2024-04-18 12:41:11,334:INFO:Initializing load_model()
2024-04-18 12:41:11,335:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-18 12:41:11,392:INFO:Initializing predict_model()
2024-04-18 12:41:11,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B108718B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B15A52310>)
2024-04-18 12:41:11,392:INFO:Checking exceptions
2024-04-18 12:41:11,392:INFO:Preloading libraries
2024-04-18 12:41:11,393:INFO:Set up data.
2024-04-18 12:41:11,399:INFO:Set up index.
2024-04-18 12:41:26,339:INFO:Initializing load_model()
2024-04-18 12:41:26,339:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:32:44,177:INFO:Initializing load_model()
2024-04-19 15:32:44,177:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:33:28,161:INFO:Initializing load_model()
2024-04-19 15:33:28,162:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:33:48,433:INFO:Initializing load_model()
2024-04-19 15:33:48,433:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:33:48,497:INFO:Initializing predict_model()
2024-04-19 15:33:48,498:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B13270070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13287D30>)
2024-04-19 15:33:48,498:INFO:Checking exceptions
2024-04-19 15:33:48,498:INFO:Preloading libraries
2024-04-19 15:33:48,499:INFO:Set up data.
2024-04-19 15:33:48,505:INFO:Set up index.
2024-04-19 15:34:55,454:INFO:Initializing load_model()
2024-04-19 15:34:55,455:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:34:55,514:INFO:Initializing predict_model()
2024-04-19 15:34:55,514:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0AD83A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1280>)
2024-04-19 15:34:55,514:INFO:Checking exceptions
2024-04-19 15:34:55,514:INFO:Preloading libraries
2024-04-19 15:34:55,515:INFO:Set up data.
2024-04-19 15:34:55,520:INFO:Set up index.
2024-04-19 15:35:42,540:INFO:Initializing load_model()
2024-04-19 15:35:42,541:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:35:42,604:INFO:Initializing predict_model()
2024-04-19 15:35:42,604:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0ACFCD00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0FFF9D30>)
2024-04-19 15:35:42,604:INFO:Checking exceptions
2024-04-19 15:35:42,604:INFO:Preloading libraries
2024-04-19 15:35:42,605:INFO:Set up data.
2024-04-19 15:35:42,609:INFO:Set up index.
2024-04-19 15:36:33,787:INFO:Initializing load_model()
2024-04-19 15:36:33,788:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:36:33,866:INFO:Initializing predict_model()
2024-04-19 15:36:33,867:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B141903D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12C7D820>)
2024-04-19 15:36:33,867:INFO:Checking exceptions
2024-04-19 15:36:33,867:INFO:Preloading libraries
2024-04-19 15:36:33,868:INFO:Set up data.
2024-04-19 15:36:33,875:INFO:Set up index.
2024-04-19 15:36:42,879:INFO:Initializing load_model()
2024-04-19 15:36:42,879:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 15:36:42,950:INFO:Initializing predict_model()
2024-04-19 15:36:42,951:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0AC4E340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809D30>)
2024-04-19 15:36:42,951:INFO:Checking exceptions
2024-04-19 15:36:42,951:INFO:Preloading libraries
2024-04-19 15:36:42,951:INFO:Set up data.
2024-04-19 15:36:42,956:INFO:Set up index.
2024-04-19 16:56:02,352:INFO:Initializing load_model()
2024-04-19 16:56:02,353:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:58:22,268:INFO:Initializing load_model()
2024-04-19 16:58:22,268:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:58:22,334:INFO:Initializing predict_model()
2024-04-19 16:58:22,334:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B128E39D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13924D30>)
2024-04-19 16:58:22,334:INFO:Checking exceptions
2024-04-19 16:58:22,335:INFO:Preloading libraries
2024-04-19 16:58:22,335:INFO:Set up data.
2024-04-19 16:58:22,340:INFO:Set up index.
2024-04-19 16:58:33,119:INFO:Initializing load_model()
2024-04-19 16:58:33,120:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:58:33,216:INFO:Initializing predict_model()
2024-04-19 16:58:33,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0ACF2F40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0DED7940>)
2024-04-19 16:58:33,217:INFO:Checking exceptions
2024-04-19 16:58:33,217:INFO:Preloading libraries
2024-04-19 16:58:33,249:INFO:Set up data.
2024-04-19 16:58:33,268:INFO:Set up index.
2024-04-19 16:59:19,498:INFO:Initializing load_model()
2024-04-19 16:59:19,498:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:59:19,555:INFO:Initializing predict_model()
2024-04-19 16:59:19,555:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B128EBD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B131D1EE0>)
2024-04-19 16:59:19,555:INFO:Checking exceptions
2024-04-19 16:59:19,555:INFO:Preloading libraries
2024-04-19 16:59:19,555:INFO:Set up data.
2024-04-19 16:59:19,562:INFO:Set up index.
2024-04-19 16:59:22,970:INFO:Initializing load_model()
2024-04-19 16:59:22,970:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:59:23,038:INFO:Initializing predict_model()
2024-04-19 16:59:23,038:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B133569A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13924EE0>)
2024-04-19 16:59:23,038:INFO:Checking exceptions
2024-04-19 16:59:23,038:INFO:Preloading libraries
2024-04-19 16:59:23,039:INFO:Set up data.
2024-04-19 16:59:23,045:INFO:Set up index.
2024-04-19 16:59:31,523:INFO:Initializing load_model()
2024-04-19 16:59:31,523:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:59:31,589:INFO:Initializing predict_model()
2024-04-19 16:59:31,589:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14190FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0DED7940>)
2024-04-19 16:59:31,590:INFO:Checking exceptions
2024-04-19 16:59:31,590:INFO:Preloading libraries
2024-04-19 16:59:31,591:INFO:Set up data.
2024-04-19 16:59:31,597:INFO:Set up index.
2024-04-19 16:59:55,846:INFO:Initializing load_model()
2024-04-19 16:59:55,847:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 16:59:55,919:INFO:Initializing predict_model()
2024-04-19 16:59:55,919:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B141803D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-19 16:59:55,919:INFO:Checking exceptions
2024-04-19 16:59:55,919:INFO:Preloading libraries
2024-04-19 16:59:55,920:INFO:Set up data.
2024-04-19 16:59:55,928:INFO:Set up index.
2024-04-19 17:00:22,362:INFO:Initializing load_model()
2024-04-19 17:00:22,362:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:00:22,433:INFO:Initializing predict_model()
2024-04-19 17:00:22,433:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B133B8A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0DED7940>)
2024-04-19 17:00:22,433:INFO:Checking exceptions
2024-04-19 17:00:22,433:INFO:Preloading libraries
2024-04-19 17:00:22,433:INFO:Set up data.
2024-04-19 17:00:22,441:INFO:Set up index.
2024-04-19 17:00:38,469:INFO:Initializing load_model()
2024-04-19 17:00:38,470:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:00:38,532:INFO:Initializing predict_model()
2024-04-19 17:00:38,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B129A7700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3B80>)
2024-04-19 17:00:38,533:INFO:Checking exceptions
2024-04-19 17:00:38,533:INFO:Preloading libraries
2024-04-19 17:00:38,533:INFO:Set up data.
2024-04-19 17:00:38,540:INFO:Set up index.
2024-04-19 17:00:50,121:INFO:Initializing load_model()
2024-04-19 17:00:50,121:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:00:50,197:INFO:Initializing predict_model()
2024-04-19 17:00:50,197:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15945D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B10DD30>)
2024-04-19 17:00:50,197:INFO:Checking exceptions
2024-04-19 17:00:50,197:INFO:Preloading libraries
2024-04-19 17:00:50,197:INFO:Set up data.
2024-04-19 17:00:50,202:INFO:Set up index.
2024-04-19 17:01:21,979:INFO:Initializing load_model()
2024-04-19 17:01:21,979:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:01:22,039:INFO:Initializing predict_model()
2024-04-19 17:01:22,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1428B5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B10DD30>)
2024-04-19 17:01:22,040:INFO:Checking exceptions
2024-04-19 17:01:22,040:INFO:Preloading libraries
2024-04-19 17:01:22,040:INFO:Set up data.
2024-04-19 17:01:22,046:INFO:Set up index.
2024-04-19 17:01:55,210:INFO:Initializing load_model()
2024-04-19 17:01:55,210:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:01:55,275:INFO:Initializing predict_model()
2024-04-19 17:01:55,275:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1418AEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13C87EE0>)
2024-04-19 17:01:55,275:INFO:Checking exceptions
2024-04-19 17:01:55,275:INFO:Preloading libraries
2024-04-19 17:01:55,276:INFO:Set up data.
2024-04-19 17:01:55,281:INFO:Set up index.
2024-04-19 17:04:18,897:INFO:Initializing load_model()
2024-04-19 17:04:18,898:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:04:18,969:INFO:Initializing predict_model()
2024-04-19 17:04:18,969:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B4BBB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B131D1F70>)
2024-04-19 17:04:18,969:INFO:Checking exceptions
2024-04-19 17:04:18,970:INFO:Preloading libraries
2024-04-19 17:04:18,970:INFO:Set up data.
2024-04-19 17:04:18,974:INFO:Set up index.
2024-04-19 17:04:32,826:INFO:Initializing load_model()
2024-04-19 17:04:32,826:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:04:32,887:INFO:Initializing predict_model()
2024-04-19 17:04:32,887:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1418ADF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B131D1F70>)
2024-04-19 17:04:32,887:INFO:Checking exceptions
2024-04-19 17:04:32,887:INFO:Preloading libraries
2024-04-19 17:04:32,888:INFO:Set up data.
2024-04-19 17:04:32,893:INFO:Set up index.
2024-04-19 17:05:37,953:INFO:Initializing load_model()
2024-04-19 17:05:37,954:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:05:38,018:INFO:Initializing predict_model()
2024-04-19 17:05:38,019:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0AA78FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B15964670>)
2024-04-19 17:05:38,019:INFO:Checking exceptions
2024-04-19 17:05:38,019:INFO:Preloading libraries
2024-04-19 17:05:38,019:INFO:Set up data.
2024-04-19 17:05:38,024:INFO:Set up index.
2024-04-19 17:06:11,796:INFO:Initializing load_model()
2024-04-19 17:06:11,797:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:06:11,868:INFO:Initializing predict_model()
2024-04-19 17:06:11,868:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B13B85760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-19 17:06:11,868:INFO:Checking exceptions
2024-04-19 17:06:11,868:INFO:Preloading libraries
2024-04-19 17:06:11,869:INFO:Set up data.
2024-04-19 17:06:11,875:INFO:Set up index.
2024-04-19 17:06:22,252:INFO:Initializing load_model()
2024-04-19 17:06:22,253:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:06:22,317:INFO:Initializing predict_model()
2024-04-19 17:06:22,317:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B13B94280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735F70>)
2024-04-19 17:06:22,318:INFO:Checking exceptions
2024-04-19 17:06:22,318:INFO:Preloading libraries
2024-04-19 17:06:22,318:INFO:Set up data.
2024-04-19 17:06:22,326:INFO:Set up index.
2024-04-19 17:06:50,632:INFO:Initializing load_model()
2024-04-19 17:06:50,633:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:06:50,696:INFO:Initializing predict_model()
2024-04-19 17:06:50,697:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15B17A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-19 17:06:50,697:INFO:Checking exceptions
2024-04-19 17:06:50,697:INFO:Preloading libraries
2024-04-19 17:06:50,697:INFO:Set up data.
2024-04-19 17:06:50,702:INFO:Set up index.
2024-04-19 17:06:51,250:INFO:Initializing predict_model()
2024-04-19 17:06:51,250:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15B17C70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-19 17:06:51,250:INFO:Checking exceptions
2024-04-19 17:06:51,251:INFO:Preloading libraries
2024-04-19 17:06:51,251:INFO:Set up data.
2024-04-19 17:06:51,254:INFO:Set up index.
2024-04-19 17:06:51,633:INFO:Initializing predict_model()
2024-04-19 17:06:51,634:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15B17D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-19 17:06:51,634:INFO:Checking exceptions
2024-04-19 17:06:51,634:INFO:Preloading libraries
2024-04-19 17:06:51,634:INFO:Set up data.
2024-04-19 17:06:51,637:INFO:Set up index.
2024-04-19 17:08:00,670:INFO:Initializing load_model()
2024-04-19 17:08:00,671:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:08:00,737:INFO:Initializing predict_model()
2024-04-19 17:08:00,737:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14180BB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809F70>)
2024-04-19 17:08:00,738:INFO:Checking exceptions
2024-04-19 17:08:00,738:INFO:Preloading libraries
2024-04-19 17:08:00,738:INFO:Set up data.
2024-04-19 17:08:00,743:INFO:Set up index.
2024-04-19 17:08:01,211:INFO:Initializing predict_model()
2024-04-19 17:08:01,211:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1595C1C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809F70>)
2024-04-19 17:08:01,211:INFO:Checking exceptions
2024-04-19 17:08:01,211:INFO:Preloading libraries
2024-04-19 17:08:01,211:INFO:Set up data.
2024-04-19 17:08:01,214:INFO:Set up index.
2024-04-19 17:08:01,599:INFO:Initializing predict_model()
2024-04-19 17:08:01,599:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B133B8940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809F70>)
2024-04-19 17:08:01,599:INFO:Checking exceptions
2024-04-19 17:08:01,599:INFO:Preloading libraries
2024-04-19 17:08:01,599:INFO:Set up data.
2024-04-19 17:08:01,605:INFO:Set up index.
2024-04-19 17:08:11,480:INFO:Initializing load_model()
2024-04-19 17:08:11,480:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:08:11,568:INFO:Initializing predict_model()
2024-04-19 17:08:11,568:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF7DC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:08:11,568:INFO:Checking exceptions
2024-04-19 17:08:11,568:INFO:Preloading libraries
2024-04-19 17:08:11,569:INFO:Set up data.
2024-04-19 17:08:11,576:INFO:Set up index.
2024-04-19 17:08:12,208:INFO:Initializing predict_model()
2024-04-19 17:08:12,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B141900A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:08:12,208:INFO:Checking exceptions
2024-04-19 17:08:12,208:INFO:Preloading libraries
2024-04-19 17:08:12,209:INFO:Set up data.
2024-04-19 17:08:12,216:INFO:Set up index.
2024-04-19 17:08:12,633:INFO:Initializing predict_model()
2024-04-19 17:08:12,633:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14190AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:08:12,634:INFO:Checking exceptions
2024-04-19 17:08:12,634:INFO:Preloading libraries
2024-04-19 17:08:12,634:INFO:Set up data.
2024-04-19 17:08:12,637:INFO:Set up index.
2024-04-19 17:08:42,420:INFO:Initializing load_model()
2024-04-19 17:08:42,420:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:08:42,477:INFO:Initializing predict_model()
2024-04-19 17:08:42,477:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14295E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCC940>)
2024-04-19 17:08:42,477:INFO:Checking exceptions
2024-04-19 17:08:42,477:INFO:Preloading libraries
2024-04-19 17:08:42,478:INFO:Set up data.
2024-04-19 17:08:42,483:INFO:Set up index.
2024-04-19 17:09:13,429:INFO:Initializing load_model()
2024-04-19 17:09:13,429:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:09:13,500:INFO:Initializing predict_model()
2024-04-19 17:09:13,500:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF17C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:09:13,500:INFO:Checking exceptions
2024-04-19 17:09:13,500:INFO:Preloading libraries
2024-04-19 17:09:13,501:INFO:Set up data.
2024-04-19 17:09:13,506:INFO:Set up index.
2024-04-19 17:09:16,175:INFO:Initializing load_model()
2024-04-19 17:09:16,175:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:09:16,231:INFO:Initializing predict_model()
2024-04-19 17:09:16,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1315B880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1280>)
2024-04-19 17:09:16,231:INFO:Checking exceptions
2024-04-19 17:09:16,231:INFO:Preloading libraries
2024-04-19 17:09:16,231:INFO:Set up data.
2024-04-19 17:09:16,237:INFO:Set up index.
2024-04-19 17:09:22,901:INFO:Initializing load_model()
2024-04-19 17:09:22,902:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:09:22,968:INFO:Initializing predict_model()
2024-04-19 17:09:22,968:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B133B8A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B15964670>)
2024-04-19 17:09:22,968:INFO:Checking exceptions
2024-04-19 17:09:22,968:INFO:Preloading libraries
2024-04-19 17:09:22,968:INFO:Set up data.
2024-04-19 17:09:22,973:INFO:Set up index.
2024-04-19 17:09:25,810:INFO:Initializing load_model()
2024-04-19 17:09:25,810:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:09:25,877:INFO:Initializing predict_model()
2024-04-19 17:09:25,877:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0AEE2DF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:09:25,877:INFO:Checking exceptions
2024-04-19 17:09:25,877:INFO:Preloading libraries
2024-04-19 17:09:25,878:INFO:Set up data.
2024-04-19 17:09:25,885:INFO:Set up index.
2024-04-19 17:23:40,986:INFO:Initializing load_model()
2024-04-19 17:23:40,987:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:23:41,055:INFO:Initializing predict_model()
2024-04-19 17:23:41,056:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B141907C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:23:41,056:INFO:Checking exceptions
2024-04-19 17:23:41,056:INFO:Preloading libraries
2024-04-19 17:23:41,056:INFO:Set up data.
2024-04-19 17:23:41,061:INFO:Set up index.
2024-04-19 17:26:34,446:INFO:Initializing load_model()
2024-04-19 17:26:34,446:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:26:34,512:INFO:Initializing predict_model()
2024-04-19 17:26:34,513:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF1F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:26:34,513:INFO:Checking exceptions
2024-04-19 17:26:34,513:INFO:Preloading libraries
2024-04-19 17:26:34,513:INFO:Set up data.
2024-04-19 17:26:34,518:INFO:Set up index.
2024-04-19 17:26:48,572:INFO:Initializing load_model()
2024-04-19 17:26:48,573:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:26:48,633:INFO:Initializing predict_model()
2024-04-19 17:26:48,633:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B101A12E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809F70>)
2024-04-19 17:26:48,633:INFO:Checking exceptions
2024-04-19 17:26:48,633:INFO:Preloading libraries
2024-04-19 17:26:48,633:INFO:Set up data.
2024-04-19 17:26:48,641:INFO:Set up index.
2024-04-19 17:28:53,901:INFO:Initializing load_model()
2024-04-19 17:28:53,902:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:28:53,967:INFO:Initializing predict_model()
2024-04-19 17:28:53,967:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533C940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3310>)
2024-04-19 17:28:53,968:INFO:Checking exceptions
2024-04-19 17:28:53,968:INFO:Preloading libraries
2024-04-19 17:28:53,968:INFO:Set up data.
2024-04-19 17:28:53,973:INFO:Set up index.
2024-04-19 17:28:59,218:INFO:Initializing load_model()
2024-04-19 17:28:59,218:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:28:59,288:INFO:Initializing predict_model()
2024-04-19 17:28:59,288:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533EC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12C7D4C0>)
2024-04-19 17:28:59,288:INFO:Checking exceptions
2024-04-19 17:28:59,288:INFO:Preloading libraries
2024-04-19 17:28:59,289:INFO:Set up data.
2024-04-19 17:28:59,294:INFO:Set up index.
2024-04-19 17:29:08,601:INFO:Initializing load_model()
2024-04-19 17:29:08,601:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:29:08,658:INFO:Initializing predict_model()
2024-04-19 17:29:08,659:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1453EEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B1542CC10>)
2024-04-19 17:29:08,659:INFO:Checking exceptions
2024-04-19 17:29:08,659:INFO:Preloading libraries
2024-04-19 17:29:08,659:INFO:Set up data.
2024-04-19 17:29:08,664:INFO:Set up index.
2024-04-19 17:29:09,171:INFO:Initializing predict_model()
2024-04-19 17:29:09,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1453E640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B1542CC10>)
2024-04-19 17:29:09,171:INFO:Checking exceptions
2024-04-19 17:29:09,171:INFO:Preloading libraries
2024-04-19 17:29:09,171:INFO:Set up data.
2024-04-19 17:29:09,174:INFO:Set up index.
2024-04-19 17:29:09,511:INFO:Initializing predict_model()
2024-04-19 17:29:09,511:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B33F70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B1542CC10>)
2024-04-19 17:29:09,511:INFO:Checking exceptions
2024-04-19 17:29:09,511:INFO:Preloading libraries
2024-04-19 17:29:09,512:INFO:Set up data.
2024-04-19 17:29:09,516:INFO:Set up index.
2024-04-19 17:29:45,330:INFO:Initializing load_model()
2024-04-19 17:29:45,330:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:29:45,423:INFO:Initializing predict_model()
2024-04-19 17:29:45,423:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533E0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B1542CE50>)
2024-04-19 17:29:45,423:INFO:Checking exceptions
2024-04-19 17:29:45,423:INFO:Preloading libraries
2024-04-19 17:29:45,423:INFO:Set up data.
2024-04-19 17:29:45,430:INFO:Set up index.
2024-04-19 17:29:46,118:INFO:Initializing predict_model()
2024-04-19 17:29:46,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14484CA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B1542CE50>)
2024-04-19 17:29:46,118:INFO:Checking exceptions
2024-04-19 17:29:46,118:INFO:Preloading libraries
2024-04-19 17:29:46,119:INFO:Set up data.
2024-04-19 17:29:46,127:INFO:Set up index.
2024-04-19 17:29:46,683:INFO:Initializing predict_model()
2024-04-19 17:29:46,683:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B130D80A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B1542CE50>)
2024-04-19 17:29:46,683:INFO:Checking exceptions
2024-04-19 17:29:46,683:INFO:Preloading libraries
2024-04-19 17:29:46,683:INFO:Set up data.
2024-04-19 17:29:46,690:INFO:Set up index.
2024-04-19 17:31:52,164:INFO:Initializing load_model()
2024-04-19 17:31:52,165:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:31:52,233:INFO:Initializing predict_model()
2024-04-19 17:31:52,234:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B24C40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12C7DCA0>)
2024-04-19 17:31:52,234:INFO:Checking exceptions
2024-04-19 17:31:52,234:INFO:Preloading libraries
2024-04-19 17:31:52,235:INFO:Set up data.
2024-04-19 17:31:52,241:INFO:Set up index.
2024-04-19 17:31:52,815:INFO:Initializing predict_model()
2024-04-19 17:31:52,816:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B24DC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809F70>)
2024-04-19 17:31:52,816:INFO:Checking exceptions
2024-04-19 17:31:52,816:INFO:Preloading libraries
2024-04-19 17:31:52,816:INFO:Set up data.
2024-04-19 17:31:52,821:INFO:Set up index.
2024-04-19 17:31:53,216:INFO:Initializing predict_model()
2024-04-19 17:31:53,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B24A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12809F70>)
2024-04-19 17:31:53,216:INFO:Checking exceptions
2024-04-19 17:31:53,216:INFO:Preloading libraries
2024-04-19 17:31:53,217:INFO:Set up data.
2024-04-19 17:31:53,222:INFO:Set up index.
2024-04-19 17:32:05,530:INFO:Initializing load_model()
2024-04-19 17:32:05,530:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:32:05,591:INFO:Initializing predict_model()
2024-04-19 17:32:05,591:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B0AD5C460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1A60>)
2024-04-19 17:32:05,592:INFO:Checking exceptions
2024-04-19 17:32:05,592:INFO:Preloading libraries
2024-04-19 17:32:05,593:INFO:Set up data.
2024-04-19 17:32:05,598:INFO:Set up index.
2024-04-19 17:33:29,960:INFO:Initializing load_model()
2024-04-19 17:33:29,960:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:33:30,075:INFO:Initializing predict_model()
2024-04-19 17:33:30,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B10D820>)
2024-04-19 17:33:30,075:INFO:Checking exceptions
2024-04-19 17:33:30,075:INFO:Preloading libraries
2024-04-19 17:33:30,076:INFO:Set up data.
2024-04-19 17:33:30,107:INFO:Set up index.
2024-04-19 17:33:30,895:INFO:Initializing predict_model()
2024-04-19 17:33:30,895:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B81F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B10D820>)
2024-04-19 17:33:30,895:INFO:Checking exceptions
2024-04-19 17:33:30,895:INFO:Preloading libraries
2024-04-19 17:33:30,896:INFO:Set up data.
2024-04-19 17:33:30,899:INFO:Set up index.
2024-04-19 17:33:31,235:INFO:Initializing predict_model()
2024-04-19 17:33:31,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B10D820>)
2024-04-19 17:33:31,235:INFO:Checking exceptions
2024-04-19 17:33:31,235:INFO:Preloading libraries
2024-04-19 17:33:31,235:INFO:Set up data.
2024-04-19 17:33:31,238:INFO:Set up index.
2024-04-19 17:33:43,316:INFO:Initializing load_model()
2024-04-19 17:33:43,316:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:33:43,399:INFO:Initializing predict_model()
2024-04-19 17:33:43,399:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159C8940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735D30>)
2024-04-19 17:33:43,399:INFO:Checking exceptions
2024-04-19 17:33:43,399:INFO:Preloading libraries
2024-04-19 17:33:43,400:INFO:Set up data.
2024-04-19 17:33:43,408:INFO:Set up index.
2024-04-19 17:33:43,963:INFO:Initializing predict_model()
2024-04-19 17:33:43,963:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159C8070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735D30>)
2024-04-19 17:33:43,963:INFO:Checking exceptions
2024-04-19 17:33:43,963:INFO:Preloading libraries
2024-04-19 17:33:43,964:INFO:Set up data.
2024-04-19 17:33:43,967:INFO:Set up index.
2024-04-19 17:33:44,302:INFO:Initializing predict_model()
2024-04-19 17:33:44,303:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15931220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735D30>)
2024-04-19 17:33:44,303:INFO:Checking exceptions
2024-04-19 17:33:44,303:INFO:Preloading libraries
2024-04-19 17:33:44,303:INFO:Set up data.
2024-04-19 17:33:44,308:INFO:Set up index.
2024-04-19 17:33:52,417:INFO:Initializing load_model()
2024-04-19 17:33:52,417:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:33:52,485:INFO:Initializing predict_model()
2024-04-19 17:33:52,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275CB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13C87EE0>)
2024-04-19 17:33:52,486:INFO:Checking exceptions
2024-04-19 17:33:52,486:INFO:Preloading libraries
2024-04-19 17:33:52,487:INFO:Set up data.
2024-04-19 17:33:52,496:INFO:Set up index.
2024-04-19 17:33:52,971:INFO:Initializing predict_model()
2024-04-19 17:33:52,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275C580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13C87EE0>)
2024-04-19 17:33:52,972:INFO:Checking exceptions
2024-04-19 17:33:52,972:INFO:Preloading libraries
2024-04-19 17:33:52,972:INFO:Set up data.
2024-04-19 17:33:52,975:INFO:Set up index.
2024-04-19 17:33:53,301:INFO:Initializing predict_model()
2024-04-19 17:33:53,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275CDC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B13C87EE0>)
2024-04-19 17:33:53,301:INFO:Checking exceptions
2024-04-19 17:33:53,301:INFO:Preloading libraries
2024-04-19 17:33:53,302:INFO:Set up data.
2024-04-19 17:33:53,305:INFO:Set up index.
2024-04-19 17:34:06,379:INFO:Initializing load_model()
2024-04-19 17:34:06,379:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:34:06,444:INFO:Initializing predict_model()
2024-04-19 17:34:06,444:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:34:06,444:INFO:Checking exceptions
2024-04-19 17:34:06,444:INFO:Preloading libraries
2024-04-19 17:34:06,444:INFO:Set up data.
2024-04-19 17:34:06,449:INFO:Set up index.
2024-04-19 17:34:07,006:INFO:Initializing predict_model()
2024-04-19 17:34:07,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:34:07,006:INFO:Checking exceptions
2024-04-19 17:34:07,006:INFO:Preloading libraries
2024-04-19 17:34:07,007:INFO:Set up data.
2024-04-19 17:34:07,010:INFO:Set up index.
2024-04-19 17:34:07,503:INFO:Initializing predict_model()
2024-04-19 17:34:07,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1419C1F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:34:07,503:INFO:Checking exceptions
2024-04-19 17:34:07,503:INFO:Preloading libraries
2024-04-19 17:34:07,504:INFO:Set up data.
2024-04-19 17:34:07,507:INFO:Set up index.
2024-04-19 17:34:11,938:INFO:Initializing load_model()
2024-04-19 17:34:11,938:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:34:12,020:INFO:Initializing predict_model()
2024-04-19 17:34:12,020:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275C970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B15964670>)
2024-04-19 17:34:12,020:INFO:Checking exceptions
2024-04-19 17:34:12,020:INFO:Preloading libraries
2024-04-19 17:34:12,021:INFO:Set up data.
2024-04-19 17:34:12,028:INFO:Set up index.
2024-04-19 17:34:12,562:INFO:Initializing predict_model()
2024-04-19 17:34:12,562:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1529BF40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B15DF70>)
2024-04-19 17:34:12,562:INFO:Checking exceptions
2024-04-19 17:34:12,562:INFO:Preloading libraries
2024-04-19 17:34:12,562:INFO:Set up data.
2024-04-19 17:34:12,567:INFO:Set up index.
2024-04-19 17:34:12,899:INFO:Initializing predict_model()
2024-04-19 17:34:12,900:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1529BEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B15DF70>)
2024-04-19 17:34:12,900:INFO:Checking exceptions
2024-04-19 17:34:12,900:INFO:Preloading libraries
2024-04-19 17:34:12,900:INFO:Set up data.
2024-04-19 17:34:12,903:INFO:Set up index.
2024-04-19 17:34:19,267:INFO:Initializing load_model()
2024-04-19 17:34:19,268:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:34:19,325:INFO:Initializing predict_model()
2024-04-19 17:34:19,325:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275C8B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:34:19,325:INFO:Checking exceptions
2024-04-19 17:34:19,325:INFO:Preloading libraries
2024-04-19 17:34:19,325:INFO:Set up data.
2024-04-19 17:34:19,330:INFO:Set up index.
2024-04-19 17:34:19,751:INFO:Initializing predict_model()
2024-04-19 17:34:19,751:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B24070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:34:19,751:INFO:Checking exceptions
2024-04-19 17:34:19,752:INFO:Preloading libraries
2024-04-19 17:34:19,752:INFO:Set up data.
2024-04-19 17:34:19,755:INFO:Set up index.
2024-04-19 17:34:20,098:INFO:Initializing predict_model()
2024-04-19 17:34:20,098:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B241C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:34:20,099:INFO:Checking exceptions
2024-04-19 17:34:20,099:INFO:Preloading libraries
2024-04-19 17:34:20,099:INFO:Set up data.
2024-04-19 17:34:20,102:INFO:Set up index.
2024-04-19 17:34:28,494:INFO:Initializing load_model()
2024-04-19 17:34:28,494:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:34:28,556:INFO:Initializing predict_model()
2024-04-19 17:34:28,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275C190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:34:28,556:INFO:Checking exceptions
2024-04-19 17:34:28,557:INFO:Preloading libraries
2024-04-19 17:34:28,557:INFO:Set up data.
2024-04-19 17:34:28,563:INFO:Set up index.
2024-04-19 17:34:29,066:INFO:Initializing predict_model()
2024-04-19 17:34:29,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275C3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:34:29,066:INFO:Checking exceptions
2024-04-19 17:34:29,066:INFO:Preloading libraries
2024-04-19 17:34:29,067:INFO:Set up data.
2024-04-19 17:34:29,071:INFO:Set up index.
2024-04-19 17:34:29,402:INFO:Initializing predict_model()
2024-04-19 17:34:29,403:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1275C3A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:34:29,403:INFO:Checking exceptions
2024-04-19 17:34:29,403:INFO:Preloading libraries
2024-04-19 17:34:29,403:INFO:Set up data.
2024-04-19 17:34:29,406:INFO:Set up index.
2024-04-19 17:34:38,832:INFO:Initializing load_model()
2024-04-19 17:34:38,832:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:34:38,916:INFO:Initializing predict_model()
2024-04-19 17:34:38,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1529BE80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735D30>)
2024-04-19 17:34:38,917:INFO:Checking exceptions
2024-04-19 17:34:38,917:INFO:Preloading libraries
2024-04-19 17:34:38,917:INFO:Set up data.
2024-04-19 17:34:38,928:INFO:Set up index.
2024-04-19 17:34:39,716:INFO:Initializing predict_model()
2024-04-19 17:34:39,716:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B24130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735D30>)
2024-04-19 17:34:39,716:INFO:Checking exceptions
2024-04-19 17:34:39,716:INFO:Preloading libraries
2024-04-19 17:34:39,716:INFO:Set up data.
2024-04-19 17:34:39,719:INFO:Set up index.
2024-04-19 17:34:40,081:INFO:Initializing predict_model()
2024-04-19 17:34:40,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15931160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735D30>)
2024-04-19 17:34:40,081:INFO:Checking exceptions
2024-04-19 17:34:40,081:INFO:Preloading libraries
2024-04-19 17:34:40,081:INFO:Set up data.
2024-04-19 17:34:40,084:INFO:Set up index.
2024-04-19 17:34:53,378:INFO:Initializing load_model()
2024-04-19 17:34:53,378:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:34:53,449:INFO:Initializing predict_model()
2024-04-19 17:34:53,449:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12C7D5E0>)
2024-04-19 17:34:53,449:INFO:Checking exceptions
2024-04-19 17:34:53,449:INFO:Preloading libraries
2024-04-19 17:34:53,450:INFO:Set up data.
2024-04-19 17:34:53,456:INFO:Set up index.
2024-04-19 17:34:54,198:INFO:Initializing predict_model()
2024-04-19 17:34:54,198:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8AF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12C7D5E0>)
2024-04-19 17:34:54,198:INFO:Checking exceptions
2024-04-19 17:34:54,198:INFO:Preloading libraries
2024-04-19 17:34:54,198:INFO:Set up data.
2024-04-19 17:34:54,202:INFO:Set up index.
2024-04-19 17:34:54,622:INFO:Initializing predict_model()
2024-04-19 17:34:54,623:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12C7D5E0>)
2024-04-19 17:34:54,623:INFO:Checking exceptions
2024-04-19 17:34:54,623:INFO:Preloading libraries
2024-04-19 17:34:54,623:INFO:Set up data.
2024-04-19 17:34:54,628:INFO:Set up index.
2024-04-19 17:35:14,547:INFO:Initializing load_model()
2024-04-19 17:35:14,547:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:35:14,624:INFO:Initializing predict_model()
2024-04-19 17:35:14,624:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1529BB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:35:14,624:INFO:Checking exceptions
2024-04-19 17:35:14,624:INFO:Preloading libraries
2024-04-19 17:35:14,625:INFO:Set up data.
2024-04-19 17:35:14,631:INFO:Set up index.
2024-04-19 17:35:15,336:INFO:Initializing predict_model()
2024-04-19 17:35:15,336:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15931790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:35:15,336:INFO:Checking exceptions
2024-04-19 17:35:15,336:INFO:Preloading libraries
2024-04-19 17:35:15,336:INFO:Set up data.
2024-04-19 17:35:15,339:INFO:Set up index.
2024-04-19 17:35:15,672:INFO:Initializing predict_model()
2024-04-19 17:35:15,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B158C3F40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0CBCCF70>)
2024-04-19 17:35:15,672:INFO:Checking exceptions
2024-04-19 17:35:15,672:INFO:Preloading libraries
2024-04-19 17:35:15,672:INFO:Set up data.
2024-04-19 17:35:15,677:INFO:Set up index.
2024-04-19 17:35:43,111:INFO:Initializing load_model()
2024-04-19 17:35:43,112:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:35:43,172:INFO:Initializing predict_model()
2024-04-19 17:35:43,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159B8D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B10D820>)
2024-04-19 17:35:43,173:INFO:Checking exceptions
2024-04-19 17:35:43,173:INFO:Preloading libraries
2024-04-19 17:35:43,173:INFO:Set up data.
2024-04-19 17:35:43,179:INFO:Set up index.
2024-04-19 17:36:04,063:INFO:Initializing load_model()
2024-04-19 17:36:04,064:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:36:04,143:INFO:Initializing predict_model()
2024-04-19 17:36:04,144:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159C8100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B139378B0>)
2024-04-19 17:36:04,144:INFO:Checking exceptions
2024-04-19 17:36:04,144:INFO:Preloading libraries
2024-04-19 17:36:04,144:INFO:Set up data.
2024-04-19 17:36:04,221:INFO:Set up index.
2024-04-19 17:36:04,929:INFO:Initializing predict_model()
2024-04-19 17:36:04,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B159C8AF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B139378B0>)
2024-04-19 17:36:04,929:INFO:Checking exceptions
2024-04-19 17:36:04,929:INFO:Preloading libraries
2024-04-19 17:36:04,930:INFO:Set up data.
2024-04-19 17:36:04,934:INFO:Set up index.
2024-04-19 17:36:05,277:INFO:Initializing predict_model()
2024-04-19 17:36:05,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1315B970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B139378B0>)
2024-04-19 17:36:05,277:INFO:Checking exceptions
2024-04-19 17:36:05,277:INFO:Preloading libraries
2024-04-19 17:36:05,277:INFO:Set up data.
2024-04-19 17:36:05,281:INFO:Set up index.
2024-04-19 17:39:18,107:INFO:Initializing load_model()
2024-04-19 17:39:18,108:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:39:18,178:INFO:Initializing predict_model()
2024-04-19 17:39:18,180:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B14B2AC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B139378B0>)
2024-04-19 17:39:18,181:INFO:Checking exceptions
2024-04-19 17:39:18,182:INFO:Preloading libraries
2024-04-19 17:39:18,182:INFO:Set up data.
2024-04-19 17:39:18,188:INFO:Set up index.
2024-04-19 17:39:50,549:INFO:Initializing load_model()
2024-04-19 17:39:50,549:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:39:50,631:INFO:Initializing predict_model()
2024-04-19 17:39:50,631:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15435CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3040>)
2024-04-19 17:39:50,631:INFO:Checking exceptions
2024-04-19 17:39:50,631:INFO:Preloading libraries
2024-04-19 17:39:50,632:INFO:Set up data.
2024-04-19 17:39:50,638:INFO:Set up index.
2024-04-19 17:39:51,211:INFO:Initializing predict_model()
2024-04-19 17:39:51,212:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15435A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3040>)
2024-04-19 17:39:51,212:INFO:Checking exceptions
2024-04-19 17:39:51,212:INFO:Preloading libraries
2024-04-19 17:39:51,212:INFO:Set up data.
2024-04-19 17:39:51,216:INFO:Set up index.
2024-04-19 17:39:51,557:INFO:Initializing predict_model()
2024-04-19 17:39:51,557:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15435CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3040>)
2024-04-19 17:39:51,558:INFO:Checking exceptions
2024-04-19 17:39:51,558:INFO:Preloading libraries
2024-04-19 17:39:51,558:INFO:Set up data.
2024-04-19 17:39:51,563:INFO:Set up index.
2024-04-19 17:40:17,800:INFO:Initializing load_model()
2024-04-19 17:40:17,801:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:40:17,900:INFO:Initializing predict_model()
2024-04-19 17:40:17,900:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF1CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE33A0>)
2024-04-19 17:40:17,900:INFO:Checking exceptions
2024-04-19 17:40:17,902:INFO:Preloading libraries
2024-04-19 17:40:17,904:INFO:Set up data.
2024-04-19 17:40:17,922:INFO:Set up index.
2024-04-19 17:40:18,450:INFO:Initializing predict_model()
2024-04-19 17:40:18,451:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF1310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE33A0>)
2024-04-19 17:40:18,451:INFO:Checking exceptions
2024-04-19 17:40:18,451:INFO:Preloading libraries
2024-04-19 17:40:18,451:INFO:Set up data.
2024-04-19 17:40:18,454:INFO:Set up index.
2024-04-19 17:40:18,796:INFO:Initializing predict_model()
2024-04-19 17:40:18,796:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF1700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE33A0>)
2024-04-19 17:40:18,796:INFO:Checking exceptions
2024-04-19 17:40:18,796:INFO:Preloading libraries
2024-04-19 17:40:18,796:INFO:Set up data.
2024-04-19 17:40:18,799:INFO:Set up index.
2024-04-19 17:42:47,881:INFO:Initializing load_model()
2024-04-19 17:42:47,882:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:42:47,955:INFO:Initializing predict_model()
2024-04-19 17:42:47,955:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15A64F70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3F70>)
2024-04-19 17:42:47,956:INFO:Checking exceptions
2024-04-19 17:42:47,956:INFO:Preloading libraries
2024-04-19 17:42:47,956:INFO:Set up data.
2024-04-19 17:42:47,970:INFO:Set up index.
2024-04-19 17:43:02,023:INFO:Initializing load_model()
2024-04-19 17:43:02,023:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:43:02,088:INFO:Initializing predict_model()
2024-04-19 17:43:02,088:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF1C70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12735C10>)
2024-04-19 17:43:02,089:INFO:Checking exceptions
2024-04-19 17:43:02,089:INFO:Preloading libraries
2024-04-19 17:43:02,089:INFO:Set up data.
2024-04-19 17:43:02,093:INFO:Set up index.
2024-04-19 17:43:03,005:INFO:Initializing load_model()
2024-04-19 17:43:03,005:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:43:03,098:INFO:Initializing predict_model()
2024-04-19 17:43:03,098:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533CD00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE38B0>)
2024-04-19 17:43:03,098:INFO:Checking exceptions
2024-04-19 17:43:03,099:INFO:Preloading libraries
2024-04-19 17:43:03,099:INFO:Set up data.
2024-04-19 17:43:03,107:INFO:Set up index.
2024-04-19 17:43:03,562:INFO:Initializing predict_model()
2024-04-19 17:43:03,562:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533C040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE38B0>)
2024-04-19 17:43:03,562:INFO:Checking exceptions
2024-04-19 17:43:03,562:INFO:Preloading libraries
2024-04-19 17:43:03,562:INFO:Set up data.
2024-04-19 17:43:03,566:INFO:Set up index.
2024-04-19 17:43:03,903:INFO:Initializing predict_model()
2024-04-19 17:43:03,904:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1595CA00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE38B0>)
2024-04-19 17:43:03,904:INFO:Checking exceptions
2024-04-19 17:43:03,904:INFO:Preloading libraries
2024-04-19 17:43:03,904:INFO:Set up data.
2024-04-19 17:43:03,908:INFO:Set up index.
2024-04-19 17:43:04,289:INFO:Initializing load_model()
2024-04-19 17:43:04,289:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:43:04,357:INFO:Initializing predict_model()
2024-04-19 17:43:04,357:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15435D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3940>)
2024-04-19 17:43:04,357:INFO:Checking exceptions
2024-04-19 17:43:04,358:INFO:Preloading libraries
2024-04-19 17:43:04,358:INFO:Set up data.
2024-04-19 17:43:04,363:INFO:Set up index.
2024-04-19 17:43:05,029:INFO:Initializing load_model()
2024-04-19 17:43:05,030:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:43:05,101:INFO:Initializing predict_model()
2024-04-19 17:43:05,102:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533CBE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3280>)
2024-04-19 17:43:05,102:INFO:Checking exceptions
2024-04-19 17:43:05,102:INFO:Preloading libraries
2024-04-19 17:43:05,102:INFO:Set up data.
2024-04-19 17:43:05,107:INFO:Set up index.
2024-04-19 17:43:05,655:INFO:Initializing predict_model()
2024-04-19 17:43:05,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1533C4F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3280>)
2024-04-19 17:43:05,656:INFO:Checking exceptions
2024-04-19 17:43:05,656:INFO:Preloading libraries
2024-04-19 17:43:05,656:INFO:Set up data.
2024-04-19 17:43:05,659:INFO:Set up index.
2024-04-19 17:43:06,127:INFO:Initializing predict_model()
2024-04-19 17:43:06,127:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15AF1610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3280>)
2024-04-19 17:43:06,127:INFO:Checking exceptions
2024-04-19 17:43:06,127:INFO:Preloading libraries
2024-04-19 17:43:06,127:INFO:Set up data.
2024-04-19 17:43:06,139:INFO:Set up index.
2024-04-19 17:45:03,115:INFO:Initializing load_model()
2024-04-19 17:45:03,116:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:45:03,189:INFO:Initializing predict_model()
2024-04-19 17:45:03,189:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15B17E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3280>)
2024-04-19 17:45:03,189:INFO:Checking exceptions
2024-04-19 17:45:03,189:INFO:Preloading libraries
2024-04-19 17:45:03,189:INFO:Set up data.
2024-04-19 17:45:03,196:INFO:Set up index.
2024-04-19 17:45:03,675:INFO:Initializing predict_model()
2024-04-19 17:45:03,675:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B12902160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:45:03,675:INFO:Checking exceptions
2024-04-19 17:45:03,675:INFO:Preloading libraries
2024-04-19 17:45:03,676:INFO:Set up data.
2024-04-19 17:45:03,680:INFO:Set up index.
2024-04-19 17:45:04,015:INFO:Initializing predict_model()
2024-04-19 17:45:04,015:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B12902190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B0B0D1CA0>)
2024-04-19 17:45:04,015:INFO:Checking exceptions
2024-04-19 17:45:04,015:INFO:Preloading libraries
2024-04-19 17:45:04,016:INFO:Set up data.
2024-04-19 17:45:04,018:INFO:Set up index.
2024-04-19 17:45:08,425:INFO:Initializing load_model()
2024-04-19 17:45:08,425:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:45:08,484:INFO:Initializing predict_model()
2024-04-19 17:45:08,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B13B94D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE38B0>)
2024-04-19 17:45:08,485:INFO:Checking exceptions
2024-04-19 17:45:08,485:INFO:Preloading libraries
2024-04-19 17:45:08,485:INFO:Set up data.
2024-04-19 17:45:08,491:INFO:Set up index.
2024-04-19 17:45:08,884:INFO:Initializing predict_model()
2024-04-19 17:45:08,885:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B13B942E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE38B0>)
2024-04-19 17:45:08,885:INFO:Checking exceptions
2024-04-19 17:45:08,885:INFO:Preloading libraries
2024-04-19 17:45:08,885:INFO:Set up data.
2024-04-19 17:45:08,889:INFO:Set up index.
2024-04-19 17:45:09,228:INFO:Initializing predict_model()
2024-04-19 17:45:09,228:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B1315B3A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE38B0>)
2024-04-19 17:45:09,228:INFO:Checking exceptions
2024-04-19 17:45:09,228:INFO:Preloading libraries
2024-04-19 17:45:09,229:INFO:Set up data.
2024-04-19 17:45:09,232:INFO:Set up index.
2024-04-19 17:45:19,569:INFO:Initializing load_model()
2024-04-19 17:45:19,569:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=False)
2024-04-19 17:45:19,645:INFO:Initializing predict_model()
2024-04-19 17:45:19,645:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15284340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3AF0>)
2024-04-19 17:45:19,645:INFO:Checking exceptions
2024-04-19 17:45:19,645:INFO:Preloading libraries
2024-04-19 17:45:19,646:INFO:Set up data.
2024-04-19 17:45:19,653:INFO:Set up index.
2024-04-19 17:45:20,319:INFO:Initializing predict_model()
2024-04-19 17:45:20,320:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B152843D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3820>)
2024-04-19 17:45:20,320:INFO:Checking exceptions
2024-04-19 17:45:20,320:INFO:Preloading libraries
2024-04-19 17:45:20,320:INFO:Set up data.
2024-04-19 17:45:20,323:INFO:Set up index.
2024-04-19 17:45:20,735:INFO:Initializing predict_model()
2024-04-19 17:45:20,735:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023B15284CA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['manufacturer', 'security_codes',
                                             'model', 'engine', 'model_year',
                                             'plant_code'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rare_category_grouping',
                 TransformerWrappe...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None,
                              learning_rate=0.07235752899247931, max_bin=None,
                              max_cat_threshold=None, max_cat_to_onehot=None,
                              max_delta_step=None, max_depth=11,
                              max_leaves=None, min_child_weight=3, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=250, n_jobs=-1,
                              num_parallel_tree=None, random_state=100500, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023B12EE3820>)
2024-04-19 17:45:20,735:INFO:Checking exceptions
2024-04-19 17:45:20,735:INFO:Preloading libraries
2024-04-19 17:45:20,736:INFO:Set up data.
2024-04-19 17:45:20,739:INFO:Set up index.
